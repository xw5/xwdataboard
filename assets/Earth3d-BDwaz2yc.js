var Zm=Object.defineProperty;var Km=(e,t,n)=>t in e?Zm(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;var me=(e,t,n)=>(Km(e,typeof t!="symbol"?t+"":t,n),n);import{B as $m,_ as Jm,r as Tr,u as Qm,j as ev,h as $s,e as er,n as tv,s as nv,t as Xh,l as iv,i as rv,d as av,o as Js,F as sv,q as ov,p as lv,f as cv,C as hv}from"./index-CBvimLWm.js";import{q as pi,u as Yh,A as uv,v as fv,w as kd,R as Wd,x as dv,y as Hc,s as mi,z as pv,B as mv,E as vv,m as gv,F as _v,G as ja,H as pt,I as fr,J as xv,K as Xd,M as dl,Z as qo,N as jo,O as zs,P as Yd,Q as qd,T as jd,U as pl,o as ml,V as hh,W as yv,X as Tv,Y as Sv,_ as Ev,$ as mn,a0 as Vc,h as Gs,j as vi,a1 as uh,a2 as Mv,a3 as wv,a4 as qh,a5 as Av,a6 as bv,a7 as fh,b as Cv,e as ba,a as jh,a8 as Rv,g as Lv,f as Pv,a9 as Zd,S as ei,C as ti,aa as Dv,ab as Nv,ac as Qs,ad as Iv,ae as Ov,af as Uv,ag as Kd,ah as Fv,ai as Bv,p as Zh,aj as Kh,ak as $h,D as zv}from"./echarts-Cw9a3BvY.js";function Jh(e,t,n){typeof t=="object"&&(n=t,t=null);var i=this,r;if(!(e instanceof Function)){r=[];for(var a in e)e.hasOwnProperty(a)&&r.push(a)}var s=function(l){if(i.apply(this,arguments),e instanceof Function?Qh(this,e.call(this,l)):Gv(this,e,r),this.constructor===s)for(var c=s.__initializers__,h=0;h<c.length;h++)c[h].apply(this,arguments)};s.__super__=i,i.__initializers__?s.__initializers__=i.__initializers__.slice():s.__initializers__=[],t&&s.__initializers__.push(t);var o=function(){};return o.prototype=i.prototype,s.prototype=new o,s.prototype.constructor=s,Qh(s.prototype,n),s.extend=i.extend,s.derive=i.extend,s}function Qh(e,t){if(t)for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])}function Gv(e,t,n){for(var i=0;i<n.length;i++){var r=n[i];e[r]=t[r]}}const Hv={extend:Jh,derive:Jh};function Vv(e,t){this.action=e,this.context=t}var kv={trigger:function(e){if(this.hasOwnProperty("__handlers__")&&this.__handlers__.hasOwnProperty(e)){var t=this.__handlers__[e],n=t.length,i=-1,r=arguments;switch(r.length){case 1:for(;++i<n;)t[i].action.call(t[i].context);return;case 2:for(;++i<n;)t[i].action.call(t[i].context,r[1]);return;case 3:for(;++i<n;)t[i].action.call(t[i].context,r[1],r[2]);return;case 4:for(;++i<n;)t[i].action.call(t[i].context,r[1],r[2],r[3]);return;case 5:for(;++i<n;)t[i].action.call(t[i].context,r[1],r[2],r[3],r[4]);return;default:for(;++i<n;)t[i].action.apply(t[i].context,Array.prototype.slice.call(r,1));return}}},on:function(e,t,n){if(!(!e||!t)){var i=this.__handlers__||(this.__handlers__={});if(!i[e])i[e]=[];else if(this.has(e,t))return;var r=new Vv(t,n||this);return i[e].push(r),this}},once:function(e,t,n){if(!e||!t)return;var i=this;function r(){i.off(e,r),t.apply(this,arguments)}return this.on(e,r,n)},before:function(e,t,n){if(!(!e||!t))return e="before"+e,this.on(e,t,n)},after:function(e,t,n){if(!(!e||!t))return e="after"+e,this.on(e,t,n)},success:function(e,t){return this.once("success",e,t)},error:function(e,t){return this.once("error",e,t)},off:function(e,t){var n=this.__handlers__||(this.__handlers__={});if(!t){n[e]=[];return}if(n[e]){for(var i=n[e],r=[],a=0;a<i.length;a++)t&&i[a].action!==t&&r.push(i[a]);n[e]=r}return this},has:function(e,t){var n=this.__handlers__;if(!n||!n[e])return!1;for(var i=n[e],r=0;r<i.length;r++)if(i[r].action===t)return!0}};const dh=kv;var Wv=0,Xv=Array.prototype,Yv=Xv.forEach,Nt={genGUID:function(){return++Wv},relative2absolute:function(e,t){if(!t||e.match(/^\//))return e;for(var n=e.split("/"),i=t.split("/"),r=n[0];r==="."||r==="..";)r===".."&&i.pop(),n.shift(),r=n[0];return i.join("/")+"/"+n.join("/")},extend:function(e,t){if(t)for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);return e},defaults:function(e,t){if(t)for(var n in t)e[n]===void 0&&(e[n]=t[n]);return e},extendWithPropList:function(e,t,n){if(t)for(var i=0;i<n.length;i++){var r=n[i];e[r]=t[r]}return e},defaultsWithPropList:function(e,t,n){if(t)for(var i=0;i<n.length;i++){var r=n[i];e[r]==null&&(e[r]=t[r])}return e},each:function(e,t,n){if(e&&t)if(e.forEach&&e.forEach===Yv)e.forEach(t,n);else if(e.length===+e.length)for(var i=0,r=e.length;i<r;i++)t.call(n,e[i],i,e);else for(var a in e)e.hasOwnProperty(a)&&t.call(n,e[a],a,e)},isObject:function(e){return e===Object(e)},isArray:function(e){return Array.isArray(e)},isArrayLike:function(e){return e?e.length===+e.length:!1},clone:function(e){if(Nt.isObject(e)){if(Nt.isArray(e))return e.slice();if(Nt.isArrayLike(e)){for(var t=new e.constructor(e.length),n=0;n<e.length;n++)t[n]=e[n];return t}else return Nt.extend({},e)}else return e}},an=function(){this.__uid__=Nt.genGUID()};an.__initializers__=[function(e){Nt.extend(this,e)}];Nt.extend(an,Hv);Nt.extend(an.prototype,dh);var eu=["OES_texture_float","OES_texture_half_float","OES_texture_float_linear","OES_texture_half_float_linear","OES_standard_derivatives","OES_vertex_array_object","OES_element_index_uint","WEBGL_compressed_texture_s3tc","WEBGL_depth_texture","EXT_texture_filter_anisotropic","EXT_shader_texture_lod","WEBGL_draw_buffers","EXT_frag_depth","EXT_sRGB","ANGLE_instanced_arrays"],tu=["MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE"];function qv(e){for(var t={},n={},i=0;i<eu.length;i++){var r=eu[i];s(r)}for(var i=0;i<tu.length;i++){var a=tu[i];n[a]=e.getParameter(e[a])}this.getExtension=function(o){return o in t||s(o),t[o]},this.getParameter=function(o){return n[o]};function s(o){if(e.getExtension){var l=e.getExtension(o);l||(l=e.getExtension("MOZ_"+o)),l||(l=e.getExtension("WEBKIT_"+o)),t[o]=l}}}const ee={DEPTH_BUFFER_BIT:256,STENCIL_BUFFER_BIT:1024,COLOR_BUFFER_BIT:16384,POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6,ZERO:0,ONE:1,SRC_COLOR:768,ONE_MINUS_SRC_COLOR:769,SRC_ALPHA:770,ONE_MINUS_SRC_ALPHA:771,DST_ALPHA:772,ONE_MINUS_DST_ALPHA:773,DST_COLOR:774,ONE_MINUS_DST_COLOR:775,SRC_ALPHA_SATURATE:776,FUNC_ADD:32774,BLEND_EQUATION:32777,BLEND_EQUATION_RGB:32777,BLEND_EQUATION_ALPHA:34877,FUNC_SUBTRACT:32778,FUNC_REVERSE_SUBTRACT:32779,BLEND_DST_RGB:32968,BLEND_SRC_RGB:32969,BLEND_DST_ALPHA:32970,BLEND_SRC_ALPHA:32971,CONSTANT_COLOR:32769,ONE_MINUS_CONSTANT_COLOR:32770,CONSTANT_ALPHA:32771,ONE_MINUS_CONSTANT_ALPHA:32772,BLEND_COLOR:32773,ARRAY_BUFFER:34962,ELEMENT_ARRAY_BUFFER:34963,ARRAY_BUFFER_BINDING:34964,ELEMENT_ARRAY_BUFFER_BINDING:34965,STREAM_DRAW:35040,STATIC_DRAW:35044,DYNAMIC_DRAW:35048,BUFFER_SIZE:34660,BUFFER_USAGE:34661,CURRENT_VERTEX_ATTRIB:34342,FRONT:1028,BACK:1029,FRONT_AND_BACK:1032,CULL_FACE:2884,BLEND:3042,DITHER:3024,STENCIL_TEST:2960,DEPTH_TEST:2929,SCISSOR_TEST:3089,POLYGON_OFFSET_FILL:32823,SAMPLE_ALPHA_TO_COVERAGE:32926,SAMPLE_COVERAGE:32928,NO_ERROR:0,INVALID_ENUM:1280,INVALID_VALUE:1281,INVALID_OPERATION:1282,OUT_OF_MEMORY:1285,CW:2304,CCW:2305,LINE_WIDTH:2849,ALIASED_POINT_SIZE_RANGE:33901,ALIASED_LINE_WIDTH_RANGE:33902,CULL_FACE_MODE:2885,FRONT_FACE:2886,DEPTH_RANGE:2928,DEPTH_WRITEMASK:2930,DEPTH_CLEAR_VALUE:2931,DEPTH_FUNC:2932,STENCIL_CLEAR_VALUE:2961,STENCIL_FUNC:2962,STENCIL_FAIL:2964,STENCIL_PASS_DEPTH_FAIL:2965,STENCIL_PASS_DEPTH_PASS:2966,STENCIL_REF:2967,STENCIL_VALUE_MASK:2963,STENCIL_WRITEMASK:2968,STENCIL_BACK_FUNC:34816,STENCIL_BACK_FAIL:34817,STENCIL_BACK_PASS_DEPTH_FAIL:34818,STENCIL_BACK_PASS_DEPTH_PASS:34819,STENCIL_BACK_REF:36003,STENCIL_BACK_VALUE_MASK:36004,STENCIL_BACK_WRITEMASK:36005,VIEWPORT:2978,SCISSOR_BOX:3088,COLOR_CLEAR_VALUE:3106,COLOR_WRITEMASK:3107,UNPACK_ALIGNMENT:3317,PACK_ALIGNMENT:3333,MAX_TEXTURE_SIZE:3379,MAX_VIEWPORT_DIMS:3386,SUBPIXEL_BITS:3408,RED_BITS:3410,GREEN_BITS:3411,BLUE_BITS:3412,ALPHA_BITS:3413,DEPTH_BITS:3414,STENCIL_BITS:3415,POLYGON_OFFSET_UNITS:10752,POLYGON_OFFSET_FACTOR:32824,TEXTURE_BINDING_2D:32873,SAMPLE_BUFFERS:32936,SAMPLES:32937,SAMPLE_COVERAGE_VALUE:32938,SAMPLE_COVERAGE_INVERT:32939,COMPRESSED_TEXTURE_FORMATS:34467,DONT_CARE:4352,FASTEST:4353,NICEST:4354,GENERATE_MIPMAP_HINT:33170,BYTE:5120,UNSIGNED_BYTE:5121,SHORT:5122,UNSIGNED_SHORT:5123,INT:5124,UNSIGNED_INT:5125,FLOAT:5126,DEPTH_COMPONENT:6402,ALPHA:6406,RGB:6407,RGBA:6408,LUMINANCE:6409,LUMINANCE_ALPHA:6410,UNSIGNED_SHORT_4_4_4_4:32819,UNSIGNED_SHORT_5_5_5_1:32820,UNSIGNED_SHORT_5_6_5:33635,FRAGMENT_SHADER:35632,VERTEX_SHADER:35633,MAX_VERTEX_ATTRIBS:34921,MAX_VERTEX_UNIFORM_VECTORS:36347,MAX_VARYING_VECTORS:36348,MAX_COMBINED_TEXTURE_IMAGE_UNITS:35661,MAX_VERTEX_TEXTURE_IMAGE_UNITS:35660,MAX_TEXTURE_IMAGE_UNITS:34930,MAX_FRAGMENT_UNIFORM_VECTORS:36349,SHADER_TYPE:35663,DELETE_STATUS:35712,LINK_STATUS:35714,VALIDATE_STATUS:35715,ATTACHED_SHADERS:35717,ACTIVE_UNIFORMS:35718,ACTIVE_ATTRIBUTES:35721,SHADING_LANGUAGE_VERSION:35724,CURRENT_PROGRAM:35725,NEVER:512,LESS:513,EQUAL:514,LEQUAL:515,GREATER:516,NOTEQUAL:517,GEQUAL:518,ALWAYS:519,KEEP:7680,REPLACE:7681,INCR:7682,DECR:7683,INVERT:5386,INCR_WRAP:34055,DECR_WRAP:34056,VENDOR:7936,RENDERER:7937,VERSION:7938,NEAREST:9728,LINEAR:9729,NEAREST_MIPMAP_NEAREST:9984,LINEAR_MIPMAP_NEAREST:9985,NEAREST_MIPMAP_LINEAR:9986,LINEAR_MIPMAP_LINEAR:9987,TEXTURE_MAG_FILTER:10240,TEXTURE_MIN_FILTER:10241,TEXTURE_WRAP_S:10242,TEXTURE_WRAP_T:10243,TEXTURE_2D:3553,TEXTURE:5890,TEXTURE_CUBE_MAP:34067,TEXTURE_BINDING_CUBE_MAP:34068,TEXTURE_CUBE_MAP_POSITIVE_X:34069,TEXTURE_CUBE_MAP_NEGATIVE_X:34070,TEXTURE_CUBE_MAP_POSITIVE_Y:34071,TEXTURE_CUBE_MAP_NEGATIVE_Y:34072,TEXTURE_CUBE_MAP_POSITIVE_Z:34073,TEXTURE_CUBE_MAP_NEGATIVE_Z:34074,MAX_CUBE_MAP_TEXTURE_SIZE:34076,TEXTURE0:33984,TEXTURE1:33985,TEXTURE2:33986,TEXTURE3:33987,TEXTURE4:33988,TEXTURE5:33989,TEXTURE6:33990,TEXTURE7:33991,TEXTURE8:33992,TEXTURE9:33993,TEXTURE10:33994,TEXTURE11:33995,TEXTURE12:33996,TEXTURE13:33997,TEXTURE14:33998,TEXTURE15:33999,TEXTURE16:34e3,TEXTURE17:34001,TEXTURE18:34002,TEXTURE19:34003,TEXTURE20:34004,TEXTURE21:34005,TEXTURE22:34006,TEXTURE23:34007,TEXTURE24:34008,TEXTURE25:34009,TEXTURE26:34010,TEXTURE27:34011,TEXTURE28:34012,TEXTURE29:34013,TEXTURE30:34014,TEXTURE31:34015,ACTIVE_TEXTURE:34016,REPEAT:10497,CLAMP_TO_EDGE:33071,MIRRORED_REPEAT:33648,FLOAT_VEC2:35664,FLOAT_VEC3:35665,FLOAT_VEC4:35666,INT_VEC2:35667,INT_VEC3:35668,INT_VEC4:35669,BOOL:35670,BOOL_VEC2:35671,BOOL_VEC3:35672,BOOL_VEC4:35673,FLOAT_MAT2:35674,FLOAT_MAT3:35675,FLOAT_MAT4:35676,SAMPLER_2D:35678,SAMPLER_CUBE:35680,VERTEX_ATTRIB_ARRAY_ENABLED:34338,VERTEX_ATTRIB_ARRAY_SIZE:34339,VERTEX_ATTRIB_ARRAY_STRIDE:34340,VERTEX_ATTRIB_ARRAY_TYPE:34341,VERTEX_ATTRIB_ARRAY_NORMALIZED:34922,VERTEX_ATTRIB_ARRAY_POINTER:34373,VERTEX_ATTRIB_ARRAY_BUFFER_BINDING:34975,COMPILE_STATUS:35713,LOW_FLOAT:36336,MEDIUM_FLOAT:36337,HIGH_FLOAT:36338,LOW_INT:36339,MEDIUM_INT:36340,HIGH_INT:36341,FRAMEBUFFER:36160,RENDERBUFFER:36161,RGBA4:32854,RGB5_A1:32855,RGB565:36194,DEPTH_COMPONENT16:33189,STENCIL_INDEX:6401,STENCIL_INDEX8:36168,DEPTH_STENCIL:34041,RENDERBUFFER_WIDTH:36162,RENDERBUFFER_HEIGHT:36163,RENDERBUFFER_INTERNAL_FORMAT:36164,RENDERBUFFER_RED_SIZE:36176,RENDERBUFFER_GREEN_SIZE:36177,RENDERBUFFER_BLUE_SIZE:36178,RENDERBUFFER_ALPHA_SIZE:36179,RENDERBUFFER_DEPTH_SIZE:36180,RENDERBUFFER_STENCIL_SIZE:36181,FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE:36048,FRAMEBUFFER_ATTACHMENT_OBJECT_NAME:36049,FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL:36050,FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE:36051,COLOR_ATTACHMENT0:36064,DEPTH_ATTACHMENT:36096,STENCIL_ATTACHMENT:36128,DEPTH_STENCIL_ATTACHMENT:33306,NONE:0,FRAMEBUFFER_COMPLETE:36053,FRAMEBUFFER_INCOMPLETE_ATTACHMENT:36054,FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:36055,FRAMEBUFFER_INCOMPLETE_DIMENSIONS:36057,FRAMEBUFFER_UNSUPPORTED:36061,FRAMEBUFFER_BINDING:36006,RENDERBUFFER_BINDING:36007,MAX_RENDERBUFFER_SIZE:34024,INVALID_FRAMEBUFFER_OPERATION:1286,UNPACK_FLIP_Y_WEBGL:37440,UNPACK_PREMULTIPLY_ALPHA_WEBGL:37441,CONTEXT_LOST_WEBGL:37442,UNPACK_COLORSPACE_CONVERSION_WEBGL:37443,BROWSER_DEFAULT_WEBGL:37444};function jv(e){var t=new XMLHttpRequest;t.open("get",e.url),t.responseType=e.responseType||"text",e.onprogress&&(t.onprogress=function(n){if(n.lengthComputable){var i=n.loaded/n.total;e.onprogress(i,n.loaded,n.total)}else e.onprogress(null)}),t.onload=function(n){t.status>=400?e.onerror&&e.onerror():e.onload&&e.onload(t.response)},e.onerror&&(t.onerror=e.onerror),t.send(null)}const Zv={get:jv};var Dl,lt={};lt.supportWebGL=function(){if(Dl==null)try{var e=document.createElement("canvas"),t=e.getContext("webgl")||e.getContext("experimental-webgl");if(!t)throw new Error}catch{Dl=!1}return Dl};lt.Int8Array=typeof Int8Array>"u"?Array:Int8Array;lt.Uint8Array=typeof Uint8Array>"u"?Array:Uint8Array;lt.Uint16Array=typeof Uint16Array>"u"?Array:Uint16Array;lt.Uint32Array=typeof Uint32Array>"u"?Array:Uint32Array;lt.Int16Array=typeof Int16Array>"u"?Array:Int16Array;lt.Float32Array=typeof Float32Array>"u"?Array:Float32Array;lt.Float64Array=typeof Float64Array>"u"?Array:Float64Array;var Br={};typeof window<"u"?Br=window:typeof global<"u"&&(Br=global);lt.requestAnimationFrame=Br.requestAnimationFrame||Br.msRequestAnimationFrame||Br.mozRequestAnimationFrame||Br.webkitRequestAnimationFrame||function(e){setTimeout(e,16)};lt.createCanvas=function(){return document.createElement("canvas")};lt.createImage=function(){return new Br.Image};lt.request={get:Zv.get};lt.addEventListener=function(e,t,n,i){e.addEventListener(t,n,i)};lt.removeEventListener=function(e,t,n){e.removeEventListener(t,n)};var Kt=function(){this.head=null,this.tail=null,this._length=0};Kt.prototype.insert=function(e){var t=new Kt.Entry(e);return this.insertEntry(t),t};Kt.prototype.insertAt=function(e,t){if(!(e<0)){for(var n=this.head,i=0;n&&i!=e;)n=n.next,i++;if(n){var r=new Kt.Entry(t),a=n.prev;a?(a.next=r,r.prev=a):this.head=r,r.next=n,n.prev=r}else this.insert(t)}};Kt.prototype.insertBeforeEntry=function(e,t){var n=new Kt.Entry(e),i=t.prev;i?(i.next=n,n.prev=i):this.head=n,n.next=t,t.prev=n,this._length++};Kt.prototype.insertEntry=function(e){this.head?(this.tail.next=e,e.prev=this.tail,this.tail=e):this.head=this.tail=e,this._length++};Kt.prototype.remove=function(e){var t=e.prev,n=e.next;t?t.next=n:this.head=n,n?n.prev=t:this.tail=t,e.next=e.prev=null,this._length--};Kt.prototype.removeAt=function(e){if(!(e<0)){for(var t=this.head,n=0;t&&n!=e;)t=t.next,n++;if(t)return this.remove(t),t.value}};Kt.prototype.getHead=function(){if(this.head)return this.head.value};Kt.prototype.getTail=function(){if(this.tail)return this.tail.value};Kt.prototype.getAt=function(e){if(!(e<0)){for(var t=this.head,n=0;t&&n!=e;)t=t.next,n++;return t.value}};Kt.prototype.indexOf=function(e){for(var t=this.head,n=0;t;){if(t.value===e)return n;t=t.next,n++}};Kt.prototype.length=function(){return this._length};Kt.prototype.isEmpty=function(){return this._length===0};Kt.prototype.forEach=function(e,t){for(var n=this.head,i=0,r=typeof t<"u";n;)r?e.call(t,n.value,i):e(n.value,i),n=n.next,i++};Kt.prototype.clear=function(){this.tail=this.head=null,this._length=0};Kt.Entry=function(e){this.value=e,this.next=null,this.prev=null};var Za=function(e){this._list=new Kt,this._map={},this._maxSize=e||10};Za.prototype.setMaxSize=function(e){this._maxSize=e};Za.prototype.put=function(e,t){if(!this._map.hasOwnProperty(e)){var n=this._list.length();if(n>=this._maxSize&&n>0){var i=this._list.head;this._list.remove(i),delete this._map[i.key]}var r=this._list.insert(t);r.key=e,this._map[e]=r}};Za.prototype.get=function(e){var t=this._map[e];if(this._map.hasOwnProperty(e))return t!==this._list.tail&&(this._list.remove(t),this._list.insertEntry(t)),t.value};Za.prototype.remove=function(e){var t=this._map[e];typeof t<"u"&&(delete this._map[e],this._list.remove(t))};Za.prototype.clear=function(){this._list.clear(),this._map={}};const $d=Za;var wt={},nu={transparent:[0,0,0,0],aliceblue:[240,248,255,1],antiquewhite:[250,235,215,1],aqua:[0,255,255,1],aquamarine:[127,255,212,1],azure:[240,255,255,1],beige:[245,245,220,1],bisque:[255,228,196,1],black:[0,0,0,1],blanchedalmond:[255,235,205,1],blue:[0,0,255,1],blueviolet:[138,43,226,1],brown:[165,42,42,1],burlywood:[222,184,135,1],cadetblue:[95,158,160,1],chartreuse:[127,255,0,1],chocolate:[210,105,30,1],coral:[255,127,80,1],cornflowerblue:[100,149,237,1],cornsilk:[255,248,220,1],crimson:[220,20,60,1],cyan:[0,255,255,1],darkblue:[0,0,139,1],darkcyan:[0,139,139,1],darkgoldenrod:[184,134,11,1],darkgray:[169,169,169,1],darkgreen:[0,100,0,1],darkgrey:[169,169,169,1],darkkhaki:[189,183,107,1],darkmagenta:[139,0,139,1],darkolivegreen:[85,107,47,1],darkorange:[255,140,0,1],darkorchid:[153,50,204,1],darkred:[139,0,0,1],darksalmon:[233,150,122,1],darkseagreen:[143,188,143,1],darkslateblue:[72,61,139,1],darkslategray:[47,79,79,1],darkslategrey:[47,79,79,1],darkturquoise:[0,206,209,1],darkviolet:[148,0,211,1],deeppink:[255,20,147,1],deepskyblue:[0,191,255,1],dimgray:[105,105,105,1],dimgrey:[105,105,105,1],dodgerblue:[30,144,255,1],firebrick:[178,34,34,1],floralwhite:[255,250,240,1],forestgreen:[34,139,34,1],fuchsia:[255,0,255,1],gainsboro:[220,220,220,1],ghostwhite:[248,248,255,1],gold:[255,215,0,1],goldenrod:[218,165,32,1],gray:[128,128,128,1],green:[0,128,0,1],greenyellow:[173,255,47,1],grey:[128,128,128,1],honeydew:[240,255,240,1],hotpink:[255,105,180,1],indianred:[205,92,92,1],indigo:[75,0,130,1],ivory:[255,255,240,1],khaki:[240,230,140,1],lavender:[230,230,250,1],lavenderblush:[255,240,245,1],lawngreen:[124,252,0,1],lemonchiffon:[255,250,205,1],lightblue:[173,216,230,1],lightcoral:[240,128,128,1],lightcyan:[224,255,255,1],lightgoldenrodyellow:[250,250,210,1],lightgray:[211,211,211,1],lightgreen:[144,238,144,1],lightgrey:[211,211,211,1],lightpink:[255,182,193,1],lightsalmon:[255,160,122,1],lightseagreen:[32,178,170,1],lightskyblue:[135,206,250,1],lightslategray:[119,136,153,1],lightslategrey:[119,136,153,1],lightsteelblue:[176,196,222,1],lightyellow:[255,255,224,1],lime:[0,255,0,1],limegreen:[50,205,50,1],linen:[250,240,230,1],magenta:[255,0,255,1],maroon:[128,0,0,1],mediumaquamarine:[102,205,170,1],mediumblue:[0,0,205,1],mediumorchid:[186,85,211,1],mediumpurple:[147,112,219,1],mediumseagreen:[60,179,113,1],mediumslateblue:[123,104,238,1],mediumspringgreen:[0,250,154,1],mediumturquoise:[72,209,204,1],mediumvioletred:[199,21,133,1],midnightblue:[25,25,112,1],mintcream:[245,255,250,1],mistyrose:[255,228,225,1],moccasin:[255,228,181,1],navajowhite:[255,222,173,1],navy:[0,0,128,1],oldlace:[253,245,230,1],olive:[128,128,0,1],olivedrab:[107,142,35,1],orange:[255,165,0,1],orangered:[255,69,0,1],orchid:[218,112,214,1],palegoldenrod:[238,232,170,1],palegreen:[152,251,152,1],paleturquoise:[175,238,238,1],palevioletred:[219,112,147,1],papayawhip:[255,239,213,1],peachpuff:[255,218,185,1],peru:[205,133,63,1],pink:[255,192,203,1],plum:[221,160,221,1],powderblue:[176,224,230,1],purple:[128,0,128,1],red:[255,0,0,1],rosybrown:[188,143,143,1],royalblue:[65,105,225,1],saddlebrown:[139,69,19,1],salmon:[250,128,114,1],sandybrown:[244,164,96,1],seagreen:[46,139,87,1],seashell:[255,245,238,1],sienna:[160,82,45,1],silver:[192,192,192,1],skyblue:[135,206,235,1],slateblue:[106,90,205,1],slategray:[112,128,144,1],slategrey:[112,128,144,1],snow:[255,250,250,1],springgreen:[0,255,127,1],steelblue:[70,130,180,1],tan:[210,180,140,1],teal:[0,128,128,1],thistle:[216,191,216,1],tomato:[255,99,71,1],turquoise:[64,224,208,1],violet:[238,130,238,1],wheat:[245,222,179,1],white:[255,255,255,1],whitesmoke:[245,245,245,1],yellow:[255,255,0,1],yellowgreen:[154,205,50,1]};function Jn(e){return e=Math.round(e),e<0?0:e>255?255:e}function Kv(e){return e=Math.round(e),e<0?0:e>360?360:e}function As(e){return e<0?0:e>1?1:e}function Nl(e){return e.length&&e.charAt(e.length-1)==="%"?Jn(parseFloat(e)/100*255):Jn(parseInt(e,10))}function Oa(e){return e.length&&e.charAt(e.length-1)==="%"?As(parseFloat(e)/100):As(parseFloat(e))}function Il(e,t,n){return n<0?n+=1:n>1&&(n-=1),n*6<1?e+(t-e)*n*6:n*2<1?t:n*3<2?e+(t-e)*(2/3-n)*6:e}function tr(e,t,n){return e+(t-e)*n}function Kn(e,t,n,i,r){return e[0]=t,e[1]=n,e[2]=i,e[3]=r,e}function kc(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e}var Jd=new $d(20),eo=null;function Jr(e,t){eo&&kc(eo,t),eo=Jd.put(e,eo||t.slice())}wt.parse=function(e,t){if(e){t=t||[];var n=Jd.get(e);if(n)return kc(t,n);e=e+"";var i=e.replace(/ /g,"").toLowerCase();if(i in nu)return kc(t,nu[i]),Jr(e,t),t;if(i.charAt(0)==="#"){if(i.length===4){var r=parseInt(i.substr(1),16);if(!(r>=0&&r<=4095)){Kn(t,0,0,0,1);return}return Kn(t,(r&3840)>>4|(r&3840)>>8,r&240|(r&240)>>4,r&15|(r&15)<<4,1),Jr(e,t),t}else if(i.length===7){var r=parseInt(i.substr(1),16);if(!(r>=0&&r<=16777215)){Kn(t,0,0,0,1);return}return Kn(t,(r&16711680)>>16,(r&65280)>>8,r&255,1),Jr(e,t),t}return}var a=i.indexOf("("),s=i.indexOf(")");if(a!==-1&&s+1===i.length){var o=i.substr(0,a),l=i.substr(a+1,s-(a+1)).split(","),c=1;switch(o){case"rgba":if(l.length!==4){Kn(t,0,0,0,1);return}c=Oa(l.pop());case"rgb":if(l.length!==3){Kn(t,0,0,0,1);return}return Kn(t,Nl(l[0]),Nl(l[1]),Nl(l[2]),c),Jr(e,t),t;case"hsla":if(l.length!==4){Kn(t,0,0,0,1);return}return l[3]=Oa(l[3]),Wc(l,t),Jr(e,t),t;case"hsl":if(l.length!==3){Kn(t,0,0,0,1);return}return Wc(l,t),Jr(e,t),t;default:return}}Kn(t,0,0,0,1)}};wt.parseToFloat=function(e,t){if(t=wt.parse(e,t),!!t)return t[0]/=255,t[1]/=255,t[2]/=255,t};function Wc(e,t){var n=(parseFloat(e[0])%360+360)%360/360,i=Oa(e[1]),r=Oa(e[2]),a=r<=.5?r*(i+1):r+i-r*i,s=r*2-a;return t=t||[],Kn(t,Jn(Il(s,a,n+1/3)*255),Jn(Il(s,a,n)*255),Jn(Il(s,a,n-1/3)*255),1),e.length===4&&(t[3]=e[3]),t}function $v(e){if(e){var t=e[0]/255,n=e[1]/255,i=e[2]/255,r=Math.min(t,n,i),a=Math.max(t,n,i),s=a-r,o=(a+r)/2,l,c;if(s===0)l=0,c=0;else{o<.5?c=s/(a+r):c=s/(2-a-r);var h=((a-t)/6+s/2)/s,u=((a-n)/6+s/2)/s,f=((a-i)/6+s/2)/s;t===a?l=f-u:n===a?l=1/3+h-f:i===a&&(l=2/3+u-h),l<0&&(l+=1),l>1&&(l-=1)}var d=[l*360,c,o];return e[3]!=null&&d.push(e[3]),d}}wt.lift=function(e,t){var n=wt.parse(e);if(n){for(var i=0;i<3;i++)t<0?n[i]=n[i]*(1-t)|0:n[i]=(255-n[i])*t+n[i]|0;return wt.stringify(n,n.length===4?"rgba":"rgb")}};wt.toHex=function(e){var t=wt.parse(e);if(t)return((1<<24)+(t[0]<<16)+(t[1]<<8)+ +t[2]).toString(16).slice(1)};wt.fastLerp=function(e,t,n){if(!(!(t&&t.length)||!(e>=0&&e<=1))){n=n||[];var i=e*(t.length-1),r=Math.floor(i),a=Math.ceil(i),s=t[r],o=t[a],l=i-r;return n[0]=Jn(tr(s[0],o[0],l)),n[1]=Jn(tr(s[1],o[1],l)),n[2]=Jn(tr(s[2],o[2],l)),n[3]=As(tr(s[3],o[3],l)),n}};wt.fastMapToColor=wt.fastLerp;wt.lerp=function(e,t,n){if(!(!(t&&t.length)||!(e>=0&&e<=1))){var i=e*(t.length-1),r=Math.floor(i),a=Math.ceil(i),s=wt.parse(t[r]),o=wt.parse(t[a]),l=i-r,c=wt.stringify([Jn(tr(s[0],o[0],l)),Jn(tr(s[1],o[1],l)),Jn(tr(s[2],o[2],l)),As(tr(s[3],o[3],l))],"rgba");return n?{color:c,leftIndex:r,rightIndex:a,value:i}:c}};wt.mapToColor=wt.lerp;wt.modifyHSL=function(e,t,n,i){if(e=wt.parse(e),e)return e=$v(e),t!=null&&(e[0]=Kv(t)),n!=null&&(e[1]=Oa(n)),i!=null&&(e[2]=Oa(i)),wt.stringify(Wc(e),"rgba")};wt.modifyAlpha=function(e,t){if(e=wt.parse(e),e&&t!=null)return e[3]=As(t),wt.stringify(e,"rgba")};wt.stringify=function(e,t){if(!(!e||!e.length)){var n=e[0]+","+e[1]+","+e[2];return(t==="rgba"||t==="hsva"||t==="hsla")&&(n+=","+e[3]),t+"("+n+")"}};var Jv=wt.parseToFloat,Ol={};function iu(e){var t=Object.keys(e);t.sort();for(var n=[],i=0;i<t.length;i++){var r=t[i],a=e[r];a===null?n.push(r):n.push(r+" "+a.toString())}return n.join(`
`)}function Qv(e,t,n){n.sort();for(var i=[],r=0;r<n.length;r++){var a=n[r];i.push(a)}var s=iu(e)+`
`+iu(t)+`
`+i.join(`
`);if(Ol[s])return Ol[s];var o=Nt.genGUID();return Ol[s]=o,o}var Wn=an.extend(function(){return{name:"",depthTest:!0,depthMask:!0,transparent:!1,blend:null,autoUpdateTextureStatus:!0,uniforms:{},vertexDefines:{},fragmentDefines:{},_textureStatus:{},_enabledUniforms:null}},function(){this.name||(this.name="MATERIAL_"+this.__uid__),this.shader&&this.attachShader(this.shader,!0)},{precision:"highp",setUniform:function(e,t){t===void 0&&console.warn('Uniform value "'+e+'" is undefined');var n=this.uniforms[e];n&&(typeof t=="string"&&(t=Jv(t)||t),n.value=t,this.autoUpdateTextureStatus&&n.type==="t"&&(t?this.enableTexture(e):this.disableTexture(e)))},setUniforms:function(e){for(var t in e){var n=e[t];this.setUniform(t,n)}},isUniformEnabled:function(e){return this._enabledUniforms.indexOf(e)>=0},getEnabledUniforms:function(){return this._enabledUniforms},getTextureUniforms:function(){return this._textureUniforms},set:function(e,t){if(typeof e=="object")for(var n in e){var i=e[n];this.setUniform(n,i)}else this.setUniform(e,t)},get:function(e){var t=this.uniforms[e];if(t)return t.value},attachShader:function(e,t){var n=this.uniforms;this.uniforms=e.createUniforms(),this.shader=e;var i=this.uniforms;this._enabledUniforms=Object.keys(i),this._enabledUniforms.sort(),this._textureUniforms=this._enabledUniforms.filter(function(c){var h=this.uniforms[c].type;return h==="t"||h==="tv"},this);var r=this.vertexDefines,a=this.fragmentDefines;if(this.vertexDefines=Nt.clone(e.vertexDefines),this.fragmentDefines=Nt.clone(e.fragmentDefines),t){for(var s in n)i[s]&&(i[s].value=n[s].value);Nt.defaults(this.vertexDefines,r),Nt.defaults(this.fragmentDefines,a)}var o={};for(var l in e.textures)o[l]={shaderType:e.textures[l].shaderType,type:e.textures[l].type,enabled:t&&this._textureStatus[l]?this._textureStatus[l].enabled:!1};this._textureStatus=o,this._programKey=""},clone:function(){var e=new this.constructor({name:this.name,shader:this.shader});for(var t in this.uniforms)e.uniforms[t].value=this.uniforms[t].value;return e.depthTest=this.depthTest,e.depthMask=this.depthMask,e.transparent=this.transparent,e.blend=this.blend,e.vertexDefines=Nt.clone(this.vertexDefines),e.fragmentDefines=Nt.clone(this.fragmentDefines),e.enableTexture(this.getEnabledTextures()),e.precision=this.precision,e},define:function(e,t,n){var i=this.vertexDefines,r=this.fragmentDefines;e!=="vertex"&&e!=="fragment"&&e!=="both"&&arguments.length<3&&(n=t,t=e,e="both"),n=n??null,(e==="vertex"||e==="both")&&i[t]!==n&&(i[t]=n,this._programKey=""),(e==="fragment"||e==="both")&&r[t]!==n&&(r[t]=n,e!=="both"&&(this._programKey=""))},undefine:function(e,t){e!=="vertex"&&e!=="fragment"&&e!=="both"&&arguments.length<2&&(t=e,e="both"),(e==="vertex"||e==="both")&&this.isDefined("vertex",t)&&(delete this.vertexDefines[t],this._programKey=""),(e==="fragment"||e==="both")&&this.isDefined("fragment",t)&&(delete this.fragmentDefines[t],e!=="both"&&(this._programKey=""))},isDefined:function(e,t){switch(e){case"vertex":return this.vertexDefines[t]!==void 0;case"fragment":return this.fragmentDefines[t]!==void 0}},getDefine:function(e,t){switch(e){case"vertex":return this.vertexDefines[t];case"fragment":return this.fragmentDefines[t]}},enableTexture:function(e){if(Array.isArray(e)){for(var t=0;t<e.length;t++)this.enableTexture(e[t]);return}var n=this._textureStatus[e];if(n){var i=n.enabled;i||(n.enabled=!0,this._programKey="")}},enableTexturesAll:function(){var e=this._textureStatus;for(var t in e)e[t].enabled=!0;this._programKey=""},disableTexture:function(e){if(Array.isArray(e)){for(var t=0;t<e.length;t++)this.disableTexture(e[t]);return}var n=this._textureStatus[e];if(n){var i=!n.enabled;i||(n.enabled=!1,this._programKey="")}},disableTexturesAll:function(){var e=this._textureStatus;for(var t in e)e[t].enabled=!1;this._programKey=""},isTextureEnabled:function(e){var t=this._textureStatus;return!!t[e]&&t[e].enabled},getEnabledTextures:function(){var e=[],t=this._textureStatus;for(var n in t)t[n].enabled&&e.push(n);return e},dirtyDefines:function(){this._programKey=""},getProgramKey:function(){return this._programKey||(this._programKey=Qv(this.vertexDefines,this.fragmentDefines,this.getEnabledTextures())),this._programKey}}),Go=1e-6,sn=Array,Ca=Math.random,Ve={};Ve.create=function(){var e=new sn(2);return e[0]=0,e[1]=0,e};Ve.clone=function(e){var t=new sn(2);return t[0]=e[0],t[1]=e[1],t};Ve.fromValues=function(e,t){var n=new sn(2);return n[0]=e,n[1]=t,n};Ve.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e};Ve.set=function(e,t,n){return e[0]=t,e[1]=n,e};Ve.add=function(e,t,n){return e[0]=t[0]+n[0],e[1]=t[1]+n[1],e};Ve.subtract=function(e,t,n){return e[0]=t[0]-n[0],e[1]=t[1]-n[1],e};Ve.sub=Ve.subtract;Ve.multiply=function(e,t,n){return e[0]=t[0]*n[0],e[1]=t[1]*n[1],e};Ve.mul=Ve.multiply;Ve.divide=function(e,t,n){return e[0]=t[0]/n[0],e[1]=t[1]/n[1],e};Ve.div=Ve.divide;Ve.min=function(e,t,n){return e[0]=Math.min(t[0],n[0]),e[1]=Math.min(t[1],n[1]),e};Ve.max=function(e,t,n){return e[0]=Math.max(t[0],n[0]),e[1]=Math.max(t[1],n[1]),e};Ve.scale=function(e,t,n){return e[0]=t[0]*n,e[1]=t[1]*n,e};Ve.scaleAndAdd=function(e,t,n,i){return e[0]=t[0]+n[0]*i,e[1]=t[1]+n[1]*i,e};Ve.distance=function(e,t){var n=t[0]-e[0],i=t[1]-e[1];return Math.sqrt(n*n+i*i)};Ve.dist=Ve.distance;Ve.squaredDistance=function(e,t){var n=t[0]-e[0],i=t[1]-e[1];return n*n+i*i};Ve.sqrDist=Ve.squaredDistance;Ve.length=function(e){var t=e[0],n=e[1];return Math.sqrt(t*t+n*n)};Ve.len=Ve.length;Ve.squaredLength=function(e){var t=e[0],n=e[1];return t*t+n*n};Ve.sqrLen=Ve.squaredLength;Ve.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e};Ve.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e};Ve.normalize=function(e,t){var n=t[0],i=t[1],r=n*n+i*i;return r>0&&(r=1/Math.sqrt(r),e[0]=t[0]*r,e[1]=t[1]*r),e};Ve.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]};Ve.cross=function(e,t,n){var i=t[0]*n[1]-t[1]*n[0];return e[0]=e[1]=0,e[2]=i,e};Ve.lerp=function(e,t,n,i){var r=t[0],a=t[1];return e[0]=r+i*(n[0]-r),e[1]=a+i*(n[1]-a),e};Ve.random=function(e,t){t=t||1;var n=GLMAT_RANDOM()*2*Math.PI;return e[0]=Math.cos(n)*t,e[1]=Math.sin(n)*t,e};Ve.transformMat2=function(e,t,n){var i=t[0],r=t[1];return e[0]=n[0]*i+n[2]*r,e[1]=n[1]*i+n[3]*r,e};Ve.transformMat2d=function(e,t,n){var i=t[0],r=t[1];return e[0]=n[0]*i+n[2]*r+n[4],e[1]=n[1]*i+n[3]*r+n[5],e};Ve.transformMat3=function(e,t,n){var i=t[0],r=t[1];return e[0]=n[0]*i+n[3]*r+n[6],e[1]=n[1]*i+n[4]*r+n[7],e};Ve.transformMat4=function(e,t,n){var i=t[0],r=t[1];return e[0]=n[0]*i+n[4]*r+n[12],e[1]=n[1]*i+n[5]*r+n[13],e};Ve.forEach=function(){var e=Ve.create();return function(t,n,i,r,a,s){var o,l;for(n||(n=2),i||(i=0),r?l=Math.min(r*n+i,t.length):l=t.length,o=i;o<l;o+=n)e[0]=t[o],e[1]=t[o+1],a(e,e,s),t[o]=e[0],t[o+1]=e[1];return t}}();const Le=Ve;var $e=function(e,t){e=e||0,t=t||0,this.array=Le.fromValues(e,t),this._dirty=!0};$e.prototype={constructor:$e,add:function(e){return Le.add(this.array,this.array,e.array),this._dirty=!0,this},set:function(e,t){return this.array[0]=e,this.array[1]=t,this._dirty=!0,this},setArray:function(e){return this.array[0]=e[0],this.array[1]=e[1],this._dirty=!0,this},clone:function(){return new $e(this.x,this.y)},copy:function(e){return Le.copy(this.array,e.array),this._dirty=!0,this},cross:function(e,t){return Le.cross(e.array,this.array,t.array),e._dirty=!0,this},dist:function(e){return Le.dist(this.array,e.array)},distance:function(e){return Le.distance(this.array,e.array)},div:function(e){return Le.div(this.array,this.array,e.array),this._dirty=!0,this},divide:function(e){return Le.divide(this.array,this.array,e.array),this._dirty=!0,this},dot:function(e){return Le.dot(this.array,e.array)},len:function(){return Le.len(this.array)},length:function(){return Le.length(this.array)},lerp:function(e,t,n){return Le.lerp(this.array,e.array,t.array,n),this._dirty=!0,this},min:function(e){return Le.min(this.array,this.array,e.array),this._dirty=!0,this},max:function(e){return Le.max(this.array,this.array,e.array),this._dirty=!0,this},mul:function(e){return Le.mul(this.array,this.array,e.array),this._dirty=!0,this},multiply:function(e){return Le.multiply(this.array,this.array,e.array),this._dirty=!0,this},negate:function(){return Le.negate(this.array,this.array),this._dirty=!0,this},normalize:function(){return Le.normalize(this.array,this.array),this._dirty=!0,this},random:function(e){return Le.random(this.array,e),this._dirty=!0,this},scale:function(e){return Le.scale(this.array,this.array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return Le.scaleAndAdd(this.array,this.array,e.array,t),this._dirty=!0,this},sqrDist:function(e){return Le.sqrDist(this.array,e.array)},squaredDistance:function(e){return Le.squaredDistance(this.array,e.array)},sqrLen:function(){return Le.sqrLen(this.array)},squaredLength:function(){return Le.squaredLength(this.array)},sub:function(e){return Le.sub(this.array,this.array,e.array),this._dirty=!0,this},subtract:function(e){return Le.subtract(this.array,this.array,e.array),this._dirty=!0,this},transformMat2:function(e){return Le.transformMat2(this.array,this.array,e.array),this._dirty=!0,this},transformMat2d:function(e){return Le.transformMat2d(this.array,this.array,e.array),this._dirty=!0,this},transformMat3:function(e){return Le.transformMat3(this.array,this.array,e.array),this._dirty=!0,this},transformMat4:function(e){return Le.transformMat4(this.array,this.array,e.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};if(Object.defineProperty){var ru=$e.prototype;Object.defineProperty(ru,"x",{get:function(){return this.array[0]},set:function(e){this.array[0]=e,this._dirty=!0}}),Object.defineProperty(ru,"y",{get:function(){return this.array[1]},set:function(e){this.array[1]=e,this._dirty=!0}})}$e.add=function(e,t,n){return Le.add(e.array,t.array,n.array),e._dirty=!0,e};$e.set=function(e,t,n){return Le.set(e.array,t,n),e._dirty=!0,e};$e.copy=function(e,t){return Le.copy(e.array,t.array),e._dirty=!0,e};$e.cross=function(e,t,n){return Le.cross(e.array,t.array,n.array),e._dirty=!0,e};$e.dist=function(e,t){return Le.distance(e.array,t.array)};$e.distance=$e.dist;$e.div=function(e,t,n){return Le.divide(e.array,t.array,n.array),e._dirty=!0,e};$e.divide=$e.div;$e.dot=function(e,t){return Le.dot(e.array,t.array)};$e.len=function(e){return Le.length(e.array)};$e.lerp=function(e,t,n,i){return Le.lerp(e.array,t.array,n.array,i),e._dirty=!0,e};$e.min=function(e,t,n){return Le.min(e.array,t.array,n.array),e._dirty=!0,e};$e.max=function(e,t,n){return Le.max(e.array,t.array,n.array),e._dirty=!0,e};$e.mul=function(e,t,n){return Le.multiply(e.array,t.array,n.array),e._dirty=!0,e};$e.multiply=$e.mul;$e.negate=function(e,t){return Le.negate(e.array,t.array),e._dirty=!0,e};$e.normalize=function(e,t){return Le.normalize(e.array,t.array),e._dirty=!0,e};$e.random=function(e,t){return Le.random(e.array,t),e._dirty=!0,e};$e.scale=function(e,t,n){return Le.scale(e.array,t.array,n),e._dirty=!0,e};$e.scaleAndAdd=function(e,t,n,i){return Le.scaleAndAdd(e.array,t.array,n.array,i),e._dirty=!0,e};$e.sqrDist=function(e,t){return Le.sqrDist(e.array,t.array)};$e.squaredDistance=$e.sqrDist;$e.sqrLen=function(e){return Le.sqrLen(e.array)};$e.squaredLength=$e.sqrLen;$e.sub=function(e,t,n){return Le.subtract(e.array,t.array,n.array),e._dirty=!0,e};$e.subtract=$e.sub;$e.transformMat2=function(e,t,n){return Le.transformMat2(e.array,t.array,n.array),e._dirty=!0,e};$e.transformMat2d=function(e,t,n){return Le.transformMat2d(e.array,t.array,n.array),e._dirty=!0,e};$e.transformMat3=function(e,t,n){return Le.transformMat3(e.array,t.array,n.array),e._dirty=!0,e};$e.transformMat4=function(e,t,n){return Le.transformMat4(e.array,t.array,n.array),e._dirty=!0,e};const In=$e;var au=1,su=2,Ul=3,ou={};function eg(e){for(var t=e.split(`
`),n=0,i=t.length;n<i;n++)t[n]=n+1+": "+t[n];return t.join(`
`)}function lu(e,t,n){if(!e.getShaderParameter(t,e.COMPILE_STATUS))return[e.getShaderInfoLog(t),eg(n)].join(`
`)}var cu=new lt.Float32Array(16),tg=an.extend({uniformSemantics:{},attributes:{}},function(){this._locations={},this._textureSlot=0,this._program=null},{bind:function(e){this._textureSlot=0,e.gl.useProgram(this._program)},hasUniform:function(e){var t=this._locations[e];return t!=null},useTextureSlot:function(e,t,n){t&&(e.gl.activeTexture(e.gl.TEXTURE0+n),t.isRenderable()?t.bind(e):t.unbind(e))},currentTextureSlot:function(){return this._textureSlot},resetTextureSlot:function(e){this._textureSlot=e||0},takeCurrentTextureSlot:function(e,t){var n=this._textureSlot;return this.useTextureSlot(e,t,n),this._textureSlot++,n},setUniform:function(e,t,n,i){var r=this._locations,a=r[n];if(a==null)return!1;switch(t){case"m4":if(!(i instanceof Float32Array)){for(var s=0;s<i.length;s++)cu[s]=i[s];i=cu}e.uniformMatrix4fv(a,!1,i);break;case"2i":e.uniform2i(a,i[0],i[1]);break;case"2f":e.uniform2f(a,i[0],i[1]);break;case"3i":e.uniform3i(a,i[0],i[1],i[2]);break;case"3f":e.uniform3f(a,i[0],i[1],i[2]);break;case"4i":e.uniform4i(a,i[0],i[1],i[2],i[3]);break;case"4f":e.uniform4f(a,i[0],i[1],i[2],i[3]);break;case"1i":e.uniform1i(a,i);break;case"1f":e.uniform1f(a,i);break;case"1fv":e.uniform1fv(a,i);break;case"1iv":e.uniform1iv(a,i);break;case"2iv":e.uniform2iv(a,i);break;case"2fv":e.uniform2fv(a,i);break;case"3iv":e.uniform3iv(a,i);break;case"3fv":e.uniform3fv(a,i);break;case"4iv":e.uniform4iv(a,i);break;case"4fv":e.uniform4fv(a,i);break;case"m2":case"m2v":e.uniformMatrix2fv(a,!1,i);break;case"m3":case"m3v":e.uniformMatrix3fv(a,!1,i);break;case"m4v":if(Array.isArray(i)&&Array.isArray(i[0])){for(var o=new lt.Float32Array(i.length*16),l=0,s=0;s<i.length;s++)for(var c=i[s],h=0;h<16;h++)o[l++]=c[h];e.uniformMatrix4fv(a,!1,o)}else e.uniformMatrix4fv(a,!1,i);break}return!0},setUniformOfSemantic:function(e,t,n){var i=this.uniformSemantics[t];return i?this.setUniform(e,i.type,i.symbol,n):!1},enableAttributes:function(e,t,n){var i=e.gl,r=this._program,a=this._locations,s;n?s=n.__enabledAttributeList:s=ou[e.__uid__],s||(n?s=n.__enabledAttributeList=[]:s=ou[e.__uid__]=[]);for(var o=[],l=0;l<t.length;l++){var c=t[l];if(!this.attributes[c]){o[l]=-1;continue}var h=a[c];if(h==null){if(h=i.getAttribLocation(r,c),h===-1){o[l]=-1;continue}a[c]=h}o[l]=h,s[h]?s[h]=su:s[h]=au}for(var l=0;l<s.length;l++)switch(s[l]){case au:i.enableVertexAttribArray(l),s[l]=Ul;break;case su:s[l]=Ul;break;case Ul:i.disableVertexAttribArray(l),s[l]=0;break}return o},getAttribLocation:function(e,t){var n=this._locations,i=n[t];return i==null&&(i=e.getAttribLocation(this._program,t),n[t]=i),i},buildProgram:function(e,t,n,i){var r=e.createShader(e.VERTEX_SHADER),a=e.createProgram();e.shaderSource(r,n),e.compileShader(r);var s=e.createShader(e.FRAGMENT_SHADER);e.shaderSource(s,i),e.compileShader(s);var o=lu(e,r,n);if(o||(o=lu(e,s,i),o))return o;if(e.attachShader(a,r),e.attachShader(a,s),t.attributeSemantics.POSITION)e.bindAttribLocation(a,0,t.attributeSemantics.POSITION.symbol);else{var l=Object.keys(this.attributes);e.bindAttribLocation(a,0,l[0])}if(e.linkProgram(a),e.deleteShader(r),e.deleteShader(s),this._program=a,this.vertexCode=n,this.fragmentCode=i,!e.getProgramParameter(a,e.LINK_STATUS))return`Could not link program
`+e.getProgramInfoLog(a);for(var c=0;c<t.uniforms.length;c++){var h=t.uniforms[c];this._locations[h]=e.getUniformLocation(a,h)}}});const ng=tg;var ig=/for\s*?\(int\s*?_idx_\s*\=\s*([\w-]+)\;\s*_idx_\s*<\s*([\w-]+);\s*_idx_\s*\+\+\s*\)\s*\{\{([\s\S]+?)(?=\}\})\}\}/g;function hu(e,t,n){function i(s,o,l,c){var h="";isNaN(o)&&(o in t?o=t[o]:o=r[o]),isNaN(l)&&(l in t?l=t[l]:l=r[l]);for(var u=parseInt(o);u<parseInt(l);u++)h+="{"+c.replace(/float\s*\(\s*_idx_\s*\)/g,u.toFixed(1)).replace(/_idx_/g,u)+"}";return h}var r={};for(var a in n)r[a+"_COUNT"]=n[a];return e.replace(ig,i)}function Fl(e,t,n){var i=[];if(t)for(var r in t){var a=t[r];a>0&&i.push("#define "+r.toUpperCase()+"_COUNT "+a)}if(n)for(var s=0;s<n.length;s++){var o=n[s];i.push("#define "+o.toUpperCase()+"_ENABLED")}for(var o in e){var l=e[o];l===null?i.push("#define "+o):i.push("#define "+o+" "+l.toString())}return i.join(`
`)}function rg(e){for(var t=[],n=0;n<e.length;n++)t.push("#extension GL_"+e[n]+" : enable");return t.join(`
`)}function ag(e){return["precision",e,"float"].join(" ")+`;
`+["precision",e,"int"].join(" ")+`;
`+["precision",e,"sampler2D"].join(" ")+`;
`}function Qd(e){this._renderer=e,this._cache={}}Qd.prototype.getProgram=function(e,t,n){var i=this._cache,r=e.isSkinnedMesh&&e.isSkinnedMesh(),a=e.isInstancedMesh&&e.isInstancedMesh(),s="s"+t.shader.shaderID+"m"+t.getProgramKey();n&&(s+="se"+n.getProgramKey(e.lightGroup)),r&&(s+=",sk"+e.joints.length),a&&(s+=",is");var x=i[s];if(x)return x;var o=n?n.getLightsNumbers(e.lightGroup):{},l=this._renderer,c=l.gl,h=t.getEnabledTextures(),u="";if(r){var f={SKINNING:null,JOINT_COUNT:e.joints.length};e.joints.length>l.getMaxJointNumber()&&(f.USE_SKIN_MATRICES_TEXTURE=null),u+=`
`+Fl(f)+`
`}a&&(u+=`
#define INSTANCING
`);var d=u+Fl(t.vertexDefines,o,h),p=u+Fl(t.fragmentDefines,o,h),g=d+`
`+t.shader.vertex,v=["OES_standard_derivatives","EXT_shader_texture_lod"].filter(function(E){return l.getGLExtension(E)!=null});v.indexOf("EXT_shader_texture_lod")>=0&&(p+=`
#define SUPPORT_TEXTURE_LOD`),v.indexOf("OES_standard_derivatives")>=0&&(p+=`
#define SUPPORT_STANDARD_DERIVATIVES`);var m=rg(v)+`
`+ag(t.precision)+`
`+p+`
`+t.shader.fragment,y=hu(g,t.vertexDefines,o),_=hu(m,t.fragmentDefines,o),x=new ng;x.uniformSemantics=t.shader.uniformSemantics,x.attributes=t.shader.attributes;var A=x.buildProgram(c,t.shader,y,_);return x.__error=A,i[s]=x,x};var uu=/uniform\s+(bool|float|int|vec2|vec3|vec4|ivec2|ivec3|ivec4|mat2|mat3|mat4|sampler2D|samplerCube)\s+([\s\S]*?);/g,sg=/attribute\s+(float|int|vec2|vec3|vec4)\s+([\s\S]*?);/g,fu=/#define\s+(\w+)?(\s+[\d-.]+)?\s*;?\s*\n/g,og={bool:"1i",int:"1i",sampler2D:"t",samplerCube:"t",float:"1f",vec2:"2f",vec3:"3f",vec4:"4f",ivec2:"2i",ivec3:"3i",ivec4:"4i",mat2:"m2",mat3:"m3",mat4:"m4"};function xi(e){for(var t=[],n=0;n<e;n++)t[n]=0;return t}var du={bool:function(){return!0},int:function(){return 0},float:function(){return 0},sampler2D:function(){return null},samplerCube:function(){return null},vec2:function(){return xi(2)},vec3:function(){return xi(3)},vec4:function(){return xi(4)},ivec2:function(){return xi(2)},ivec3:function(){return xi(3)},ivec4:function(){return xi(4)},mat2:function(){return xi(4)},mat3:function(){return xi(9)},mat4:function(){return xi(16)},array:function(){return[]}},Xc=["POSITION","NORMAL","BINORMAL","TANGENT","TEXCOORD","TEXCOORD_0","TEXCOORD_1","COLOR","JOINT","WEIGHT"],ep=["SKIN_MATRIX","VIEWPORT_SIZE","VIEWPORT","DEVICEPIXELRATIO","WINDOW_SIZE","NEAR","FAR","TIME"],tp=["WORLD","VIEW","PROJECTION","WORLDVIEW","VIEWPROJECTION","WORLDVIEWPROJECTION","WORLDINVERSE","VIEWINVERSE","PROJECTIONINVERSE","WORLDVIEWINVERSE","VIEWPROJECTIONINVERSE","WORLDVIEWPROJECTIONINVERSE","WORLDTRANSPOSE","VIEWTRANSPOSE","PROJECTIONTRANSPOSE","WORLDVIEWTRANSPOSE","VIEWPROJECTIONTRANSPOSE","WORLDVIEWPROJECTIONTRANSPOSE","WORLDINVERSETRANSPOSE","VIEWINVERSETRANSPOSE","PROJECTIONINVERSETRANSPOSE","WORLDVIEWINVERSETRANSPOSE","VIEWPROJECTIONINVERSETRANSPOSE","WORLDVIEWPROJECTIONINVERSETRANSPOSE"],lg={vec4:4,vec3:3,vec2:2,float:1},Bl={},np={};function cg(e,t){var n="vertex:"+e+"fragment:"+t;if(Bl[n])return Bl[n];var i=Nt.genGUID();return Bl[n]=i,np[i]={vertex:e,fragment:t},i}function pu(e){return e.replace(/[ \t]*\/\/.*\n/g,"").replace(/[ \t]*\/\*[\s\S]*?\*\//g,"")}function Qr(){console.error("Wrong uniform/attributes syntax")}function mu(e,t){for(var n=/[,=\(\):]/,i=t.replace(/:\s*\[\s*(.*)\s*\]/g,"="+e+"($1)").replace(/\s+/g,"").split(/(?=[,=\(\):])/g),r=[],a=0;a<i.length;a++)i[a].match(n)?r.push(i[a].charAt(0),i[a].slice(1)):r.push(i[a]);i=r;var s=0,o=1,l=2,c=3,h=4,u=5,f=s,d={},p=null,g;v(i[0]);function v(_){_||Qr();var x=_.match(/\[(.*?)\]/);g=_.replace(/\[(.*?)\]/,""),d[g]={},x&&(d[g].isArray=!0,d[g].arraySize=x[1])}for(var a=1;a<i.length;a++){var m=i[a];if(m){if(m==="="){if(f!==s&&f!==c){Qr();break}f=o;continue}else if(m===":"){f=h;continue}else if(m===","){if(f===l){if(!(p instanceof Array)){Qr();break}p.push(+i[++a])}else f=u;continue}else if(m===")"){d[g].value=new lt.Float32Array(p),p=null,f=u;continue}else if(m==="("){if(f!==l){Qr();break}if(!(p instanceof Array)){Qr();break}p.push(+i[++a]);continue}else if(m.indexOf("vec")>=0){if(f!==o&&f!==h){Qr();break}f=l,p=[];continue}else if(f===o){e==="bool"?d[g].value=m==="true":d[g].value=parseFloat(m),p=null;continue}else if(f===h){var y=m;Xc.indexOf(y)>=0||ep.indexOf(y)>=0||tp.indexOf(y)>=0?d[g].semantic=y:y==="ignore"||y==="unconfigurable"?d[g].ignore=!0:e==="bool"?d[g].value=y==="true":d[g].value=parseFloat(y);continue}v(m),f=s}}return d}function le(e,t){typeof e=="object"&&(t=e.fragment,e=e.vertex),e=pu(e),t=pu(t),this._shaderID=cg(e,t),this._vertexCode=le.parseImport(e),this._fragmentCode=le.parseImport(t),this.attributeSemantics={},this.matrixSemantics={},this.uniformSemantics={},this.matrixSemanticKeys=[],this.uniformTemplates={},this.attributes={},this.textures={},this.vertexDefines={},this.fragmentDefines={},this._parseAttributes(),this._parseUniforms(),this._parseDefines()}le.prototype={constructor:le,createUniforms:function(){var e={};for(var t in this.uniformTemplates){var n=this.uniformTemplates[t];e[t]={type:n.type,value:n.value()}}return e},_parseImport:function(){this._vertexCode=le.parseImport(this.vertex),this._fragmentCode=le.parseImport(this.fragment)},_addSemanticUniform:function(e,t,n){if(Xc.indexOf(n)>=0)this.attributeSemantics[n]={symbol:e,type:t};else if(tp.indexOf(n)>=0){var i=!1,r=n;n.match(/TRANSPOSE$/)&&(i=!0,r=n.slice(0,-9)),this.matrixSemantics[n]={symbol:e,type:t,isTranspose:i,semanticNoTranspose:r}}else ep.indexOf(n)>=0&&(this.uniformSemantics[n]={symbol:e,type:t})},_addMaterialUniform:function(e,t,n,i,r,a){a[e]={type:n,value:r?du.array:i||du[t],semantic:null}},_parseUniforms:function(){var e={},t=this,n="vertex";this._uniformList=[],this._vertexCode=this._vertexCode.replace(uu,r),n="fragment",this._fragmentCode=this._fragmentCode.replace(uu,r),t.matrixSemanticKeys=Object.keys(this.matrixSemantics);function i(a){return a!=null?function(){return a}:null}function r(a,s,o){var l=mu(s,o),c=[];for(var h in l){var u=l[h],f=u.semantic,d=h,p=og[s],g=i(l[h].value);l[h].isArray&&(d+="["+l[h].arraySize+"]",p+="v"),c.push(d),t._uniformList.push(h),u.ignore||((s==="sampler2D"||s==="samplerCube")&&(t.textures[h]={shaderType:n,type:s}),f?t._addSemanticUniform(h,p,f):t._addMaterialUniform(h,s,p,g,l[h].isArray,e))}return c.length>0?"uniform "+s+" "+c.join(",")+`;
`:""}this.uniformTemplates=e},_parseAttributes:function(){var e={},t=this;this._vertexCode=this._vertexCode.replace(sg,n);function n(i,r,a){var s=mu(r,a),o=lg[r]||1,l=[];for(var c in s){var h=s[c].semantic;if(e[c]={type:"float",size:o,semantic:h||null},h){if(Xc.indexOf(h)<0)throw new Error('Unkown semantic "'+h+'"');t.attributeSemantics[h]={symbol:c,type:r}}l.push(c)}return"attribute "+r+" "+l.join(",")+`;
`}this.attributes=e},_parseDefines:function(){var e=this,t="vertex";this._vertexCode=this._vertexCode.replace(fu,n),t="fragment",this._fragmentCode=this._fragmentCode.replace(fu,n);function n(i,r,a){var s=t==="vertex"?e.vertexDefines:e.fragmentDefines;return s[r]||(a==="false"?s[r]=!1:a==="true"?s[r]=!0:s[r]=a?isNaN(parseFloat(a))?a.trim():parseFloat(a):null),""}},clone:function(){var e=np[this._shaderID],t=new le(e.vertex,e.fragment);return t}};Object.defineProperty&&(Object.defineProperty(le.prototype,"shaderID",{get:function(){return this._shaderID}}),Object.defineProperty(le.prototype,"vertex",{get:function(){return this._vertexCode}}),Object.defineProperty(le.prototype,"fragment",{get:function(){return this._fragmentCode}}),Object.defineProperty(le.prototype,"uniforms",{get:function(){return this._uniformList}}));var hg=/(@import)\s*([0-9a-zA-Z_\-\.]*)/g;le.parseImport=function(e){return e=e.replace(hg,function(r,n,i){var r=le.source(i);return r?le.parseImport(r):(console.error('Shader chunk "'+i+'" not existed in library'),"")}),e};var ug=/(@export)\s*([0-9a-zA-Z_\-\.]*)\s*\n([\s\S]*?)@end/g;le.import=function(e){e.replace(ug,function(t,n,i,a){var a=a.replace(/(^[\s\t\xa0\u3000]+)|([\u3000\xa0\s\t]+\x24)/g,"");if(a){for(var s=i.split("."),o=le.codes,l=0,c;l<s.length-1;)c=s[l++],o[c]||(o[c]={}),o=o[c];c=s[l],o[c]=a}return a})};le.codes={};le.source=function(e){for(var t=e.split("."),n=le.codes,i=0;n&&i<t.length;){var r=t[i++];n=n[r]}return typeof n!="string"?(console.error('Shader "'+e+'" not existed in library'),""):n};const ip=`@export clay.prez.vertex
uniform mat4 WVP : WORLDVIEWPROJECTION;
attribute vec3 pos : POSITION;
attribute vec2 uv : TEXCOORD_0;
uniform vec2 uvRepeat : [1.0, 1.0];
uniform vec2 uvOffset : [0.0, 0.0];
@import clay.chunk.skinning_header
@import clay.chunk.instancing_header
varying vec2 v_Texcoord;
void main()
{
 vec4 P = vec4(pos, 1.0);
#ifdef SKINNING
 @import clay.chunk.skin_matrix
 P = skinMatrixWS * P;
#endif
#ifdef INSTANCING
 @import clay.chunk.instancing_matrix
 P = instanceMat * P;
#endif
 gl_Position = WVP * P;
 v_Texcoord = uv * uvRepeat + uvOffset;
}
@end
@export clay.prez.fragment
uniform sampler2D alphaMap;
uniform float alphaCutoff: 0.0;
varying vec2 v_Texcoord;
void main()
{
 if (alphaCutoff > 0.0) {
 if (texture2D(alphaMap, v_Texcoord).a <= alphaCutoff) {
 discard;
 }
 }
 gl_FragColor = vec4(0.0,0.0,0.0,1.0);
}
@end`;var ne={};ne.create=function(){var e=new sn(16);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e};ne.clone=function(e){var t=new sn(16);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t};ne.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e};ne.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e};ne.transpose=function(e,t){if(e===t){var n=t[1],i=t[2],r=t[3],a=t[6],s=t[7],o=t[11];e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=n,e[6]=t[9],e[7]=t[13],e[8]=i,e[9]=a,e[11]=t[14],e[12]=r,e[13]=s,e[14]=o}else e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15];return e};ne.invert=function(e,t){var n=t[0],i=t[1],r=t[2],a=t[3],s=t[4],o=t[5],l=t[6],c=t[7],h=t[8],u=t[9],f=t[10],d=t[11],p=t[12],g=t[13],v=t[14],m=t[15],y=n*o-i*s,_=n*l-r*s,x=n*c-a*s,A=i*l-r*o,E=i*c-a*o,w=r*c-a*l,b=h*g-u*p,M=h*v-f*p,T=h*m-d*p,P=u*v-f*g,O=u*m-d*g,D=f*m-d*v,N=y*D-_*O+x*P+A*T-E*M+w*b;return N?(N=1/N,e[0]=(o*D-l*O+c*P)*N,e[1]=(r*O-i*D-a*P)*N,e[2]=(g*w-v*E+m*A)*N,e[3]=(f*E-u*w-d*A)*N,e[4]=(l*T-s*D-c*M)*N,e[5]=(n*D-r*T+a*M)*N,e[6]=(v*x-p*w-m*_)*N,e[7]=(h*w-f*x+d*_)*N,e[8]=(s*O-o*T+c*b)*N,e[9]=(i*T-n*O-a*b)*N,e[10]=(p*E-g*x+m*y)*N,e[11]=(u*x-h*E-d*y)*N,e[12]=(o*M-s*P-l*b)*N,e[13]=(n*P-i*M+r*b)*N,e[14]=(g*_-p*A-v*y)*N,e[15]=(h*A-u*_+f*y)*N,e):null};ne.adjoint=function(e,t){var n=t[0],i=t[1],r=t[2],a=t[3],s=t[4],o=t[5],l=t[6],c=t[7],h=t[8],u=t[9],f=t[10],d=t[11],p=t[12],g=t[13],v=t[14],m=t[15];return e[0]=o*(f*m-d*v)-u*(l*m-c*v)+g*(l*d-c*f),e[1]=-(i*(f*m-d*v)-u*(r*m-a*v)+g*(r*d-a*f)),e[2]=i*(l*m-c*v)-o*(r*m-a*v)+g*(r*c-a*l),e[3]=-(i*(l*d-c*f)-o*(r*d-a*f)+u*(r*c-a*l)),e[4]=-(s*(f*m-d*v)-h*(l*m-c*v)+p*(l*d-c*f)),e[5]=n*(f*m-d*v)-h*(r*m-a*v)+p*(r*d-a*f),e[6]=-(n*(l*m-c*v)-s*(r*m-a*v)+p*(r*c-a*l)),e[7]=n*(l*d-c*f)-s*(r*d-a*f)+h*(r*c-a*l),e[8]=s*(u*m-d*g)-h*(o*m-c*g)+p*(o*d-c*u),e[9]=-(n*(u*m-d*g)-h*(i*m-a*g)+p*(i*d-a*u)),e[10]=n*(o*m-c*g)-s*(i*m-a*g)+p*(i*c-a*o),e[11]=-(n*(o*d-c*u)-s*(i*d-a*u)+h*(i*c-a*o)),e[12]=-(s*(u*v-f*g)-h*(o*v-l*g)+p*(o*f-l*u)),e[13]=n*(u*v-f*g)-h*(i*v-r*g)+p*(i*f-r*u),e[14]=-(n*(o*v-l*g)-s*(i*v-r*g)+p*(i*l-r*o)),e[15]=n*(o*f-l*u)-s*(i*f-r*u)+h*(i*l-r*o),e};ne.determinant=function(e){var t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],c=e[8],h=e[9],u=e[10],f=e[11],d=e[12],p=e[13],g=e[14],v=e[15],m=t*s-n*a,y=t*o-i*a,_=t*l-r*a,x=n*o-i*s,A=n*l-r*s,E=i*l-r*o,w=c*p-h*d,b=c*g-u*d,M=c*v-f*d,T=h*g-u*p,P=h*v-f*p,O=u*v-f*g;return m*O-y*P+_*T+x*M-A*b+E*w};ne.multiply=function(e,t,n){var i=t[0],r=t[1],a=t[2],s=t[3],o=t[4],l=t[5],c=t[6],h=t[7],u=t[8],f=t[9],d=t[10],p=t[11],g=t[12],v=t[13],m=t[14],y=t[15],_=n[0],x=n[1],A=n[2],E=n[3];return e[0]=_*i+x*o+A*u+E*g,e[1]=_*r+x*l+A*f+E*v,e[2]=_*a+x*c+A*d+E*m,e[3]=_*s+x*h+A*p+E*y,_=n[4],x=n[5],A=n[6],E=n[7],e[4]=_*i+x*o+A*u+E*g,e[5]=_*r+x*l+A*f+E*v,e[6]=_*a+x*c+A*d+E*m,e[7]=_*s+x*h+A*p+E*y,_=n[8],x=n[9],A=n[10],E=n[11],e[8]=_*i+x*o+A*u+E*g,e[9]=_*r+x*l+A*f+E*v,e[10]=_*a+x*c+A*d+E*m,e[11]=_*s+x*h+A*p+E*y,_=n[12],x=n[13],A=n[14],E=n[15],e[12]=_*i+x*o+A*u+E*g,e[13]=_*r+x*l+A*f+E*v,e[14]=_*a+x*c+A*d+E*m,e[15]=_*s+x*h+A*p+E*y,e};ne.multiplyAffine=function(e,t,n){var i=t[0],r=t[1],a=t[2],s=t[4],o=t[5],l=t[6],c=t[8],h=t[9],u=t[10],f=t[12],d=t[13],p=t[14],g=n[0],v=n[1],m=n[2];return e[0]=g*i+v*s+m*c,e[1]=g*r+v*o+m*h,e[2]=g*a+v*l+m*u,g=n[4],v=n[5],m=n[6],e[4]=g*i+v*s+m*c,e[5]=g*r+v*o+m*h,e[6]=g*a+v*l+m*u,g=n[8],v=n[9],m=n[10],e[8]=g*i+v*s+m*c,e[9]=g*r+v*o+m*h,e[10]=g*a+v*l+m*u,g=n[12],v=n[13],m=n[14],e[12]=g*i+v*s+m*c+f,e[13]=g*r+v*o+m*h+d,e[14]=g*a+v*l+m*u+p,e};ne.mul=ne.multiply;ne.mulAffine=ne.multiplyAffine;ne.translate=function(e,t,n){var i=n[0],r=n[1],a=n[2],s,o,l,c,h,u,f,d,p,g,v,m;return t===e?(e[12]=t[0]*i+t[4]*r+t[8]*a+t[12],e[13]=t[1]*i+t[5]*r+t[9]*a+t[13],e[14]=t[2]*i+t[6]*r+t[10]*a+t[14],e[15]=t[3]*i+t[7]*r+t[11]*a+t[15]):(s=t[0],o=t[1],l=t[2],c=t[3],h=t[4],u=t[5],f=t[6],d=t[7],p=t[8],g=t[9],v=t[10],m=t[11],e[0]=s,e[1]=o,e[2]=l,e[3]=c,e[4]=h,e[5]=u,e[6]=f,e[7]=d,e[8]=p,e[9]=g,e[10]=v,e[11]=m,e[12]=s*i+h*r+p*a+t[12],e[13]=o*i+u*r+g*a+t[13],e[14]=l*i+f*r+v*a+t[14],e[15]=c*i+d*r+m*a+t[15]),e};ne.scale=function(e,t,n){var i=n[0],r=n[1],a=n[2];return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e[3]=t[3]*i,e[4]=t[4]*r,e[5]=t[5]*r,e[6]=t[6]*r,e[7]=t[7]*r,e[8]=t[8]*a,e[9]=t[9]*a,e[10]=t[10]*a,e[11]=t[11]*a,e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e};ne.rotate=function(e,t,n,i){var r=i[0],a=i[1],s=i[2],o=Math.sqrt(r*r+a*a+s*s),l,c,h,u,f,d,p,g,v,m,y,_,x,A,E,w,b,M,T,P,O,D,N,B;return Math.abs(o)<Go?null:(o=1/o,r*=o,a*=o,s*=o,l=Math.sin(n),c=Math.cos(n),h=1-c,u=t[0],f=t[1],d=t[2],p=t[3],g=t[4],v=t[5],m=t[6],y=t[7],_=t[8],x=t[9],A=t[10],E=t[11],w=r*r*h+c,b=a*r*h+s*l,M=s*r*h-a*l,T=r*a*h-s*l,P=a*a*h+c,O=s*a*h+r*l,D=r*s*h+a*l,N=a*s*h-r*l,B=s*s*h+c,e[0]=u*w+g*b+_*M,e[1]=f*w+v*b+x*M,e[2]=d*w+m*b+A*M,e[3]=p*w+y*b+E*M,e[4]=u*T+g*P+_*O,e[5]=f*T+v*P+x*O,e[6]=d*T+m*P+A*O,e[7]=p*T+y*P+E*O,e[8]=u*D+g*N+_*B,e[9]=f*D+v*N+x*B,e[10]=d*D+m*N+A*B,e[11]=p*D+y*N+E*B,t!==e&&(e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e)};ne.rotateX=function(e,t,n){var i=Math.sin(n),r=Math.cos(n),a=t[4],s=t[5],o=t[6],l=t[7],c=t[8],h=t[9],u=t[10],f=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=a*r+c*i,e[5]=s*r+h*i,e[6]=o*r+u*i,e[7]=l*r+f*i,e[8]=c*r-a*i,e[9]=h*r-s*i,e[10]=u*r-o*i,e[11]=f*r-l*i,e};ne.rotateY=function(e,t,n){var i=Math.sin(n),r=Math.cos(n),a=t[0],s=t[1],o=t[2],l=t[3],c=t[8],h=t[9],u=t[10],f=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*r-c*i,e[1]=s*r-h*i,e[2]=o*r-u*i,e[3]=l*r-f*i,e[8]=a*i+c*r,e[9]=s*i+h*r,e[10]=o*i+u*r,e[11]=l*i+f*r,e};ne.rotateZ=function(e,t,n){var i=Math.sin(n),r=Math.cos(n),a=t[0],s=t[1],o=t[2],l=t[3],c=t[4],h=t[5],u=t[6],f=t[7];return t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=a*r+c*i,e[1]=s*r+h*i,e[2]=o*r+u*i,e[3]=l*r+f*i,e[4]=c*r-a*i,e[5]=h*r-s*i,e[6]=u*r-o*i,e[7]=f*r-l*i,e};ne.fromRotationTranslation=function(e,t,n){var i=t[0],r=t[1],a=t[2],s=t[3],o=i+i,l=r+r,c=a+a,h=i*o,u=i*l,f=i*c,d=r*l,p=r*c,g=a*c,v=s*o,m=s*l,y=s*c;return e[0]=1-(d+g),e[1]=u+y,e[2]=f-m,e[3]=0,e[4]=u-y,e[5]=1-(h+g),e[6]=p+v,e[7]=0,e[8]=f+m,e[9]=p-v,e[10]=1-(h+d),e[11]=0,e[12]=n[0],e[13]=n[1],e[14]=n[2],e[15]=1,e};ne.fromQuat=function(e,t){var n=t[0],i=t[1],r=t[2],a=t[3],s=n+n,o=i+i,l=r+r,c=n*s,h=i*s,u=i*o,f=r*s,d=r*o,p=r*l,g=a*s,v=a*o,m=a*l;return e[0]=1-u-p,e[1]=h+m,e[2]=f-v,e[3]=0,e[4]=h-m,e[5]=1-c-p,e[6]=d+g,e[7]=0,e[8]=f+v,e[9]=d-g,e[10]=1-c-u,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e};ne.frustum=function(e,t,n,i,r,a,s){var o=1/(n-t),l=1/(r-i),c=1/(a-s);return e[0]=a*2*o,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a*2*l,e[6]=0,e[7]=0,e[8]=(n+t)*o,e[9]=(r+i)*l,e[10]=(s+a)*c,e[11]=-1,e[12]=0,e[13]=0,e[14]=s*a*2*c,e[15]=0,e};ne.perspective=function(e,t,n,i,r){var a=1/Math.tan(t/2),s=1/(i-r);return e[0]=a/n,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=a,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=(r+i)*s,e[11]=-1,e[12]=0,e[13]=0,e[14]=2*r*i*s,e[15]=0,e};ne.ortho=function(e,t,n,i,r,a,s){var o=1/(t-n),l=1/(i-r),c=1/(a-s);return e[0]=-2*o,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*l,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*c,e[11]=0,e[12]=(t+n)*o,e[13]=(r+i)*l,e[14]=(s+a)*c,e[15]=1,e};ne.lookAt=function(e,t,n,i){var r,a,s,o,l,c,h,u,f,d,p=t[0],g=t[1],v=t[2],m=i[0],y=i[1],_=i[2],x=n[0],A=n[1],E=n[2];return Math.abs(p-x)<Go&&Math.abs(g-A)<Go&&Math.abs(v-E)<Go?ne.identity(e):(h=p-x,u=g-A,f=v-E,d=1/Math.sqrt(h*h+u*u+f*f),h*=d,u*=d,f*=d,r=y*f-_*u,a=_*h-m*f,s=m*u-y*h,d=Math.sqrt(r*r+a*a+s*s),d?(d=1/d,r*=d,a*=d,s*=d):(r=0,a=0,s=0),o=u*s-f*a,l=f*r-h*s,c=h*a-u*r,d=Math.sqrt(o*o+l*l+c*c),d?(d=1/d,o*=d,l*=d,c*=d):(o=0,l=0,c=0),e[0]=r,e[1]=o,e[2]=h,e[3]=0,e[4]=a,e[5]=l,e[6]=u,e[7]=0,e[8]=s,e[9]=c,e[10]=f,e[11]=0,e[12]=-(r*p+a*g+s*v),e[13]=-(o*p+l*g+c*v),e[14]=-(h*p+u*g+f*v),e[15]=1,e)};ne.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+Math.pow(e[6],2)+Math.pow(e[7],2)+Math.pow(e[8],2)+Math.pow(e[9],2)+Math.pow(e[10],2)+Math.pow(e[11],2)+Math.pow(e[12],2)+Math.pow(e[13],2)+Math.pow(e[14],2)+Math.pow(e[15],2))};var U={};U.create=function(){var e=new sn(3);return e[0]=0,e[1]=0,e[2]=0,e};U.clone=function(e){var t=new sn(3);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t};U.fromValues=function(e,t,n){var i=new sn(3);return i[0]=e,i[1]=t,i[2]=n,i};U.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e};U.set=function(e,t,n,i){return e[0]=t,e[1]=n,e[2]=i,e};U.add=function(e,t,n){return e[0]=t[0]+n[0],e[1]=t[1]+n[1],e[2]=t[2]+n[2],e};U.subtract=function(e,t,n){return e[0]=t[0]-n[0],e[1]=t[1]-n[1],e[2]=t[2]-n[2],e};U.sub=U.subtract;U.multiply=function(e,t,n){return e[0]=t[0]*n[0],e[1]=t[1]*n[1],e[2]=t[2]*n[2],e};U.mul=U.multiply;U.divide=function(e,t,n){return e[0]=t[0]/n[0],e[1]=t[1]/n[1],e[2]=t[2]/n[2],e};U.div=U.divide;U.min=function(e,t,n){return e[0]=Math.min(t[0],n[0]),e[1]=Math.min(t[1],n[1]),e[2]=Math.min(t[2],n[2]),e};U.max=function(e,t,n){return e[0]=Math.max(t[0],n[0]),e[1]=Math.max(t[1],n[1]),e[2]=Math.max(t[2],n[2]),e};U.scale=function(e,t,n){return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e};U.scaleAndAdd=function(e,t,n,i){return e[0]=t[0]+n[0]*i,e[1]=t[1]+n[1]*i,e[2]=t[2]+n[2]*i,e};U.distance=function(e,t){var n=t[0]-e[0],i=t[1]-e[1],r=t[2]-e[2];return Math.sqrt(n*n+i*i+r*r)};U.dist=U.distance;U.squaredDistance=function(e,t){var n=t[0]-e[0],i=t[1]-e[1],r=t[2]-e[2];return n*n+i*i+r*r};U.sqrDist=U.squaredDistance;U.length=function(e){var t=e[0],n=e[1],i=e[2];return Math.sqrt(t*t+n*n+i*i)};U.len=U.length;U.squaredLength=function(e){var t=e[0],n=e[1],i=e[2];return t*t+n*n+i*i};U.sqrLen=U.squaredLength;U.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e};U.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e};U.normalize=function(e,t){var n=t[0],i=t[1],r=t[2],a=n*n+i*i+r*r;return a>0&&(a=1/Math.sqrt(a),e[0]=t[0]*a,e[1]=t[1]*a,e[2]=t[2]*a),e};U.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]};U.cross=function(e,t,n){var i=t[0],r=t[1],a=t[2],s=n[0],o=n[1],l=n[2];return e[0]=r*l-a*o,e[1]=a*s-i*l,e[2]=i*o-r*s,e};U.lerp=function(e,t,n,i){var r=t[0],a=t[1],s=t[2];return e[0]=r+i*(n[0]-r),e[1]=a+i*(n[1]-a),e[2]=s+i*(n[2]-s),e};U.random=function(e,t){t=t||1;var n=Ca()*2*Math.PI,i=Ca()*2-1,r=Math.sqrt(1-i*i)*t;return e[0]=Math.cos(n)*r,e[1]=Math.sin(n)*r,e[2]=i*t,e};U.transformMat4=function(e,t,n){var i=t[0],r=t[1],a=t[2],s=n[3]*i+n[7]*r+n[11]*a+n[15];return s=s||1,e[0]=(n[0]*i+n[4]*r+n[8]*a+n[12])/s,e[1]=(n[1]*i+n[5]*r+n[9]*a+n[13])/s,e[2]=(n[2]*i+n[6]*r+n[10]*a+n[14])/s,e};U.transformMat3=function(e,t,n){var i=t[0],r=t[1],a=t[2];return e[0]=i*n[0]+r*n[3]+a*n[6],e[1]=i*n[1]+r*n[4]+a*n[7],e[2]=i*n[2]+r*n[5]+a*n[8],e};U.transformQuat=function(e,t,n){var i=t[0],r=t[1],a=t[2],s=n[0],o=n[1],l=n[2],c=n[3],h=c*i+o*a-l*r,u=c*r+l*i-s*a,f=c*a+s*r-o*i,d=-s*i-o*r-l*a;return e[0]=h*c+d*-s+u*-l-f*-o,e[1]=u*c+d*-o+f*-s-h*-l,e[2]=f*c+d*-l+h*-o-u*-s,e};U.rotateX=function(e,t,n,i){var r=[],a=[];return r[0]=t[0]-n[0],r[1]=t[1]-n[1],r[2]=t[2]-n[2],a[0]=r[0],a[1]=r[1]*Math.cos(i)-r[2]*Math.sin(i),a[2]=r[1]*Math.sin(i)+r[2]*Math.cos(i),e[0]=a[0]+n[0],e[1]=a[1]+n[1],e[2]=a[2]+n[2],e};U.rotateY=function(e,t,n,i){var r=[],a=[];return r[0]=t[0]-n[0],r[1]=t[1]-n[1],r[2]=t[2]-n[2],a[0]=r[2]*Math.sin(i)+r[0]*Math.cos(i),a[1]=r[1],a[2]=r[2]*Math.cos(i)-r[0]*Math.sin(i),e[0]=a[0]+n[0],e[1]=a[1]+n[1],e[2]=a[2]+n[2],e};U.rotateZ=function(e,t,n,i){var r=[],a=[];return r[0]=t[0]-n[0],r[1]=t[1]-n[1],r[2]=t[2]-n[2],a[0]=r[0]*Math.cos(i)-r[1]*Math.sin(i),a[1]=r[0]*Math.sin(i)+r[1]*Math.cos(i),a[2]=r[2],e[0]=a[0]+n[0],e[1]=a[1]+n[1],e[2]=a[2]+n[2],e};U.forEach=function(){var e=U.create();return function(t,n,i,r,a,s){var o,l;for(n||(n=3),i||(i=0),r?l=Math.min(r*n+i,t.length):l=t.length,o=i;o<l;o+=n)e[0]=t[o],e[1]=t[o+1],e[2]=t[o+2],a(e,e,s),t[o]=e[0],t[o+1]=e[1],t[o+2]=e[2];return t}}();U.angle=function(e,t){var n=U.fromValues(e[0],e[1],e[2]),i=U.fromValues(t[0],t[1],t[2]);U.normalize(n,n),U.normalize(i,i);var r=U.dot(n,i);return r>1?0:Math.acos(r)};le.import(ip);var Et=ne.create,vu={};function gu(e){return e.material}function fg(e,t,n){return t.uniforms[n].value}function dg(e,t,n,i){return n!==i}function pg(e){return!0}function _u(){}var xu={float:ee.FLOAT,byte:ee.BYTE,ubyte:ee.UNSIGNED_BYTE,short:ee.SHORT,ushort:ee.UNSIGNED_SHORT};function mg(e,t,n){this.availableAttributes=e,this.availableAttributeSymbols=t,this.indicesBuffer=n,this.vao=null}function vg(e){var t,n;this.bind=function(i){t||(t=lt.createCanvas(),t.width=t.height=1,t.getContext("2d"));var r=i.gl,a=!n;a&&(n=r.createTexture()),r.bindTexture(r.TEXTURE_2D,n),a&&r.texImage2D(r.TEXTURE_2D,0,r.RGBA,r.RGBA,r.UNSIGNED_BYTE,t)},this.unbind=function(i){i.gl.bindTexture(i.gl.TEXTURE_2D,null)},this.isRenderable=function(){return!0}}var lr=an.extend(function(){return{canvas:null,_width:100,_height:100,devicePixelRatio:typeof window<"u"&&window.devicePixelRatio||1,clearColor:[0,0,0,0],clearBit:17664,alpha:!0,depth:!0,stencil:!1,antialias:!0,premultipliedAlpha:!0,preserveDrawingBuffer:!1,throwError:!0,gl:null,viewport:{},maxJointNumber:20,__currentFrameBuffer:null,_viewportStack:[],_clearStack:[],_sceneRendering:null}},function(){this.canvas||(this.canvas=lt.createCanvas());var e=this.canvas;try{var t={alpha:this.alpha,depth:this.depth,stencil:this.stencil,antialias:this.antialias,premultipliedAlpha:this.premultipliedAlpha,preserveDrawingBuffer:this.preserveDrawingBuffer};if(this.gl=e.getContext("webgl",t)||e.getContext("experimental-webgl",t),!this.gl)throw new Error;this._glinfo=new qv(this.gl),this.gl.targetRenderer&&console.error("Already created a renderer"),this.gl.targetRenderer=this,this.resize()}catch(n){throw"Error creating WebGL Context "+n}this._programMgr=new Qd(this),this._placeholderTexture=new vg},{resize:function(e,t){var n=this.canvas,i=this.devicePixelRatio;e!=null?(n.style&&(n.style.width=e+"px",n.style.height=t+"px"),n.width=e*i,n.height=t*i,this._width=e,this._height=t):(this._width=n.width/i,this._height=n.height/i),this.setViewport(0,0,this._width,this._height)},getWidth:function(){return this._width},getHeight:function(){return this._height},getViewportAspect:function(){var e=this.viewport;return e.width/e.height},setDevicePixelRatio:function(e){this.devicePixelRatio=e,this.resize(this._width,this._height)},getDevicePixelRatio:function(){return this.devicePixelRatio},getGLExtension:function(e){return this._glinfo.getExtension(e)},getGLParameter:function(e){return this._glinfo.getParameter(e)},setViewport:function(e,t,n,i,r){if(typeof e=="object"){var a=e;e=a.x,t=a.y,n=a.width,i=a.height,r=a.devicePixelRatio}r=r||this.devicePixelRatio,this.gl.viewport(e*r,t*r,n*r,i*r),this.viewport={x:e,y:t,width:n,height:i,devicePixelRatio:r}},saveViewport:function(){this._viewportStack.push(this.viewport)},restoreViewport:function(){this._viewportStack.length>0&&this.setViewport(this._viewportStack.pop())},saveClear:function(){this._clearStack.push({clearBit:this.clearBit,clearColor:this.clearColor})},restoreClear:function(){if(this._clearStack.length>0){var e=this._clearStack.pop();this.clearColor=e.clearColor,this.clearBit=e.clearBit}},bindSceneRendering:function(e){this._sceneRendering=e},render:function(e,t,n,i){var r=this.gl,a=this.clearColor;if(this.clearBit){r.colorMask(!0,!0,!0,!0),r.depthMask(!0);var s=this.viewport,o=!1,l=s.devicePixelRatio;(s.width!==this._width||s.height!==this._height||l&&l!==this.devicePixelRatio||s.x||s.y)&&(o=!0,r.enable(r.SCISSOR_TEST),r.scissor(s.x*l,s.y*l,s.width*l,s.height*l)),r.clearColor(a[0],a[1],a[2],a[3]),r.clear(this.clearBit),o&&r.disable(r.SCISSOR_TEST)}if(n||e.update(!1),e.updateLights(),t=t||e.getMainCamera(),!t){console.error("Can't find camera in the scene.");return}t.update();var c=e.updateRenderList(t,!0);this._sceneRendering=e;var h=c.opaque,u=c.transparent,f=e.material;e.trigger("beforerender",this,e,t,c),i?(this.renderPreZ(h,e,t),r.depthFunc(r.LEQUAL)):r.depthFunc(r.LESS);for(var d=Et(),p=U.create(),g=0;g<u.length;g++){var v=u[g];ne.multiplyAffine(d,t.viewMatrix.array,v.worldTransform.array),U.transformMat4(p,v.position.array,d),v.__depth=p[2]}this.renderPass(h,t,{getMaterial:function(m){return f||m.material},sortCompare:this.opaqueSortCompare}),this.renderPass(u,t,{getMaterial:function(m){return f||m.material},sortCompare:this.transparentSortCompare}),e.trigger("afterrender",this,e,t,c),this._sceneRendering=null},getProgram:function(e,t,n){return t=t||e.material,this._programMgr.getProgram(e,t,n)},validateProgram:function(e){if(e.__error){var t=e.__error;if(vu[e.__uid__])return;if(vu[e.__uid__]=!0,this.throwError)throw new Error(t);this.trigger("error",t)}},updatePrograms:function(e,t,n){var i=n&&n.getMaterial||gu;t=t||null;for(var r=0;r<e.length;r++){var a=e[r],s=i.call(this,a);if(r>0){var o=e[r-1],l=o.joints?o.joints.length:0,c=a.joints?a.joints.length:0;if(c===l&&a.material===o.material&&a.lightGroup===o.lightGroup){a.__program=o.__program;continue}}var h=this._programMgr.getProgram(a,s,t);this.validateProgram(h),a.__program=h}},renderPass:function(e,t,n){this.trigger("beforerenderpass",this,e,t,n),n=n||{},n.getMaterial=n.getMaterial||gu,n.getUniform=n.getUniform||fg,n.isMaterialChanged=n.isMaterialChanged||dg,n.beforeRender=n.beforeRender||_u,n.afterRender=n.afterRender||_u;var i=n.ifRender||pg;this.updatePrograms(e,this._sceneRendering,n),n.sortCompare&&e.sort(n.sortCompare);var r=this.viewport,a=r.devicePixelRatio,s=[r.x*a,r.y*a,r.width*a,r.height*a],o=this.devicePixelRatio,l=this.__currentFrameBuffer?[this.__currentFrameBuffer.getTextureWidth(),this.__currentFrameBuffer.getTextureHeight()]:[this._width*o,this._height*o],c=[s[2],s[3]],h=Date.now();t?(ne.copy(St.VIEW,t.viewMatrix.array),ne.copy(St.PROJECTION,t.projectionMatrix.array),ne.copy(St.VIEWINVERSE,t.worldTransform.array)):(ne.identity(St.VIEW),ne.identity(St.PROJECTION),ne.identity(St.VIEWINVERSE)),ne.multiply(St.VIEWPROJECTION,St.PROJECTION,St.VIEW),ne.invert(St.PROJECTIONINVERSE,St.PROJECTION),ne.invert(St.VIEWPROJECTIONINVERSE,St.VIEWPROJECTION);for(var u=this.gl,f=this._sceneRendering,d,p,g,v,m,y,_,x,A,E,w,b,M=null,T=0;T<e.length;T++){var P=e[T],O=P.worldTransform!=null,D;if(i(P)){O&&(D=P.isSkinnedMesh&&P.isSkinnedMesh()?P.offsetMatrix?P.offsetMatrix.array:St.IDENTITY:P.worldTransform.array);var N=P.geometry,B=n.getMaterial.call(this,P),z=P.__program,Y=B.shader,F=N.__uid__+"-"+z.__uid__,J=F!==E;E=F,J&&M&&M.bindVertexArrayOES(null),O&&(ne.copy(St.WORLD,D),ne.multiply(St.WORLDVIEWPROJECTION,St.VIEWPROJECTION,D),ne.multiplyAffine(St.WORLDVIEW,St.VIEW,D),(Y.matrixSemantics.WORLDINVERSE||Y.matrixSemantics.WORLDINVERSETRANSPOSE)&&ne.invert(St.WORLDINVERSE,D),(Y.matrixSemantics.WORLDVIEWINVERSE||Y.matrixSemantics.WORLDVIEWINVERSETRANSPOSE)&&ne.invert(St.WORLDVIEWINVERSE,St.WORLDVIEW),(Y.matrixSemantics.WORLDVIEWPROJECTIONINVERSE||Y.matrixSemantics.WORLDVIEWPROJECTIONINVERSETRANSPOSE)&&ne.invert(St.WORLDVIEWPROJECTIONINVERSE,St.WORLDVIEWPROJECTION)),P.beforeRender&&P.beforeRender(this),n.beforeRender.call(this,P,B,d);var V=z!==p;V?(z.bind(this),z.setUniformOfSemantic(u,"VIEWPORT",s),z.setUniformOfSemantic(u,"WINDOW_SIZE",l),t&&(z.setUniformOfSemantic(u,"NEAR",t.near),z.setUniformOfSemantic(u,"FAR",t.far)),z.setUniformOfSemantic(u,"DEVICEPIXELRATIO",a),z.setUniformOfSemantic(u,"TIME",h),z.setUniformOfSemantic(u,"VIEWPORT_SIZE",c),f&&f.setLightUniforms(z,P.lightGroup,this)):z=p,(V||n.isMaterialChanged(P,g,B,d))&&(B.depthTest!==v&&(B.depthTest?u.enable(u.DEPTH_TEST):u.disable(u.DEPTH_TEST),v=B.depthTest),B.depthMask!==m&&(u.depthMask(B.depthMask),m=B.depthMask),B.transparent!==A&&(B.transparent?u.enable(u.BLEND):u.disable(u.BLEND),A=B.transparent),B.transparent&&(B.blend?B.blend(u):(u.blendEquationSeparate(u.FUNC_ADD,u.FUNC_ADD),u.blendFuncSeparate(u.SRC_ALPHA,u.ONE_MINUS_SRC_ALPHA,u.ONE,u.ONE_MINUS_SRC_ALPHA))),b=this._bindMaterial(P,B,z,g||null,d||null,p||null,n.getUniform),d=B);var ce=Y.matrixSemanticKeys;if(O)for(var fe=0;fe<ce.length;fe++){var ye=ce[fe],W=Y.matrixSemantics[ye],Q=St[ye];if(W.isTranspose){var de=St[W.semanticNoTranspose];ne.transpose(Q,de)}z.setUniform(u,W.type,W.symbol,Q)}P.cullFace!==_&&(_=P.cullFace,u.cullFace(_)),P.frontFace!==x&&(x=P.frontFace,u.frontFace(x)),P.culling!==y&&(y=P.culling,y?u.enable(u.CULL_FACE):u.disable(u.CULL_FACE)),this._updateSkeleton(P,z,b),J&&(w=this._bindVAO(M,Y,N,z)),this._renderObject(P,w,z),n.afterRender(this,P),P.afterRender&&P.afterRender(this),p=z,g=P}}this.trigger("afterrenderpass",this,e,t,n)},getMaxJointNumber:function(){return this.maxJointNumber},_updateSkeleton:function(e,t,n){var i=this.gl,r=e.skeleton;if(r)if(r.update(),e.joints.length>this.getMaxJointNumber()){var a=r.getSubSkinMatricesTexture(e.__uid__,e.joints);t.useTextureSlot(this,a,n),t.setUniform(i,"1i","skinMatricesTexture",n),t.setUniform(i,"1f","skinMatricesTextureSize",a.width)}else{var s=r.getSubSkinMatrices(e.__uid__,e.joints);t.setUniformOfSemantic(i,"SKIN_MATRIX",s)}},_renderObject:function(e,t,n){var i=this.gl,r=e.geometry,a=e.mode;a==null&&(a=4);var s=null,o=e.isInstancedMesh&&e.isInstancedMesh();if(o&&(s=this.getGLExtension("ANGLE_instanced_arrays"),!s)){console.warn("Device not support ANGLE_instanced_arrays extension");return}var l;if(o&&(l=this._bindInstancedAttributes(e,n,s)),t.indicesBuffer){var c=this.getGLExtension("OES_element_index_uint"),h=c&&r.indices instanceof Uint32Array,u=h?i.UNSIGNED_INT:i.UNSIGNED_SHORT;o?s.drawElementsInstancedANGLE(a,t.indicesBuffer.count,u,0,e.getInstanceCount()):i.drawElements(a,t.indicesBuffer.count,u,0)}else o?s.drawArraysInstancedANGLE(a,0,r.vertexCount,e.getInstanceCount()):i.drawArrays(a,0,r.vertexCount);if(o)for(var f=0;f<l.length;f++)i.disableVertexAttribArray(l[f])},_bindInstancedAttributes:function(e,t,n){for(var i=this.gl,r=e.getInstancedAttributesBuffers(this),a=[],s=0;s<r.length;s++){var o=r[s],l=t.getAttribLocation(i,o.symbol);if(!(l<0)){var c=xu[o.type]||i.FLOAT;i.enableVertexAttribArray(l),i.bindBuffer(i.ARRAY_BUFFER,o.buffer),i.vertexAttribPointer(l,o.size,c,!1,0,0),n.vertexAttribDivisorANGLE(l,o.divisor),a.push(l)}}return a},_bindMaterial:function(e,t,n,i,r,a,s){for(var o=this.gl,l=a===n,c=n.currentTextureSlot(),h=t.getEnabledUniforms(),u=t.getTextureUniforms(),f=this._placeholderTexture,d=0;d<u.length;d++){var p=u[d],g=s(e,t,p),v=t.uniforms[p].type;if(v==="t"&&g)g.__slot=-1;else if(v==="tv")for(var m=0;m<g.length;m++)g[m]&&(g[m].__slot=-1)}f.__slot=-1;for(var d=0;d<h.length;d++){var p=h[d],y=t.uniforms[p],g=s(e,t,p),v=y.type,_=v==="t";if(_&&(!g||!g.isRenderable())&&(g=f),r&&l){var x=s(i,r,p);if(_&&(!x||!x.isRenderable())&&(x=f),x===g){if(_)n.takeCurrentTextureSlot(this,null);else if(v==="tv"&&g)for(var m=0;m<g.length;m++)n.takeCurrentTextureSlot(this,null);continue}}if(g!=null)if(_)if(g.__slot<0){var A=n.currentTextureSlot(),E=n.setUniform(o,"1i",p,A);E&&(n.takeCurrentTextureSlot(this,g),g.__slot=A)}else n.setUniform(o,"1i",p,g.__slot);else if(Array.isArray(g)){if(g.length===0)continue;if(v==="tv"){if(!n.hasUniform(p))continue;for(var w=[],m=0;m<g.length;m++){var b=g[m];if(b.__slot<0){var A=n.currentTextureSlot();w.push(A),n.takeCurrentTextureSlot(this,b),b.__slot=A}else w.push(b.__slot)}n.setUniform(o,"1iv",p,w)}else n.setUniform(o,y.type,p,g)}else n.setUniform(o,y.type,p,g)}var M=n.currentTextureSlot();return n.resetTextureSlot(c),M},_bindVAO:function(e,t,n,i){var r=!n.dynamic,a=this.gl,s=this.__uid__+"-"+i.__uid__,o=n.__vaoCache[s];if(!o){var l=n.getBufferChunks(this);if(!l||!l.length)return;for(var c=l[0],h=c.attributeBuffers,x=c.indicesBuffer,_=[],u=[],f=0;f<h.length;f++){var d=h[f],p=d.name,g=d.semantic,v;if(g){var m=t.attributeSemantics[g];v=m&&m.symbol}else v=p;v&&i.attributes[v]&&(_.push(d),u.push(v))}o=new mg(_,u,x),r&&(n.__vaoCache[s]=o)}var y=!0;e&&r&&(o.vao==null?o.vao=e.createVertexArrayOES():y=!1,e.bindVertexArrayOES(o.vao));var _=o.availableAttributes,x=o.indicesBuffer;if(y){for(var A=i.enableAttributes(this,o.availableAttributeSymbols,e&&r&&o),f=0;f<_.length;f++){var E=A[f];if(E!==-1){var d=_[f],w=d.buffer,b=d.size,M=xu[d.type]||a.FLOAT;a.bindBuffer(a.ARRAY_BUFFER,w),a.vertexAttribPointer(E,b,M,!1,0,0)}}n.isUseIndices()&&a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,x.buffer)}return o},renderPreZ:function(e,t,n){var i=this.gl,r=this._prezMaterial||new Wn({shader:new le(le.source("clay.prez.vertex"),le.source("clay.prez.fragment"))});this._prezMaterial=r,i.colorMask(!1,!1,!1,!1),i.depthMask(!0),this.renderPass(e,n,{ifRender:function(a){return!a.ignorePreZ},isMaterialChanged:function(a,s){var o=a.material,l=s.material;return o.get("diffuseMap")!==l.get("diffuseMap")||(o.get("alphaCutoff")||0)!==(l.get("alphaCutoff")||0)},getUniform:function(a,s,o){if(o==="alphaMap")return a.material.get("diffuseMap");if(o==="alphaCutoff"){if(a.material.isDefined("fragment","ALPHA_TEST")&&a.material.get("diffuseMap")){var l=a.material.get("alphaCutoff");return l||0}return 0}else return o==="uvRepeat"?a.material.get("uvRepeat"):o==="uvOffset"?a.material.get("uvOffset"):s.get(o)},getMaterial:function(){return r},sort:this.opaqueSortCompare}),i.colorMask(!0,!0,!0,!0),i.depthMask(!0)},disposeScene:function(e){this.disposeNode(e,!0,!0),e.dispose()},disposeNode:function(e,t,n){e.getParent()&&e.getParent().remove(e);var i={};e.traverse(function(r){var a=r.material;if(r.geometry&&t&&r.geometry.dispose(this),n&&a&&!i[a.__uid__]){for(var s=a.getTextureUniforms(),o=0;o<s.length;o++){var l=s[o],c=a.uniforms[l].value,h=a.uniforms[l].type;if(c){if(h==="t")c.dispose&&c.dispose(this);else if(h==="tv")for(var u=0;u<c.length;u++)c[u]&&c[u].dispose&&c[u].dispose(this)}}i[a.__uid__]=!0}r.dispose&&r.dispose(this)},this)},disposeGeometry:function(e){e.dispose(this)},disposeTexture:function(e){e.dispose(this)},disposeFrameBuffer:function(e){e.dispose(this)},dispose:function(){},screenToNDC:function(e,t,n){n||(n=new In),t=this._height-t;var i=this.viewport,r=n.array;return r[0]=(e-i.x)/i.width,r[0]=r[0]*2-1,r[1]=(t-i.y)/i.height,r[1]=r[1]*2-1,n}});lr.opaqueSortCompare=lr.prototype.opaqueSortCompare=function(e,t){return e.renderOrder===t.renderOrder?e.__program===t.__program?e.material===t.material?e.geometry.__uid__-t.geometry.__uid__:e.material.__uid__-t.material.__uid__:e.__program&&t.__program?e.__program.__uid__-t.__program.__uid__:0:e.renderOrder-t.renderOrder};lr.transparentSortCompare=lr.prototype.transparentSortCompare=function(e,t){return e.renderOrder===t.renderOrder?e.__depth===t.__depth?e.__program===t.__program?e.material===t.material?e.geometry.__uid__-t.geometry.__uid__:e.material.__uid__-t.material.__uid__:e.__program&&t.__program?e.__program.__uid__-t.__program.__uid__:0:e.__depth-t.__depth:e.renderOrder-t.renderOrder};var St={IDENTITY:Et(),WORLD:Et(),VIEW:Et(),PROJECTION:Et(),WORLDVIEW:Et(),VIEWPROJECTION:Et(),WORLDVIEWPROJECTION:Et(),WORLDINVERSE:Et(),VIEWINVERSE:Et(),PROJECTIONINVERSE:Et(),WORLDVIEWINVERSE:Et(),VIEWPROJECTIONINVERSE:Et(),WORLDVIEWPROJECTIONINVERSE:Et(),WORLDTRANSPOSE:Et(),VIEWTRANSPOSE:Et(),PROJECTIONTRANSPOSE:Et(),WORLDVIEWTRANSPOSE:Et(),VIEWPROJECTIONTRANSPOSE:Et(),WORLDVIEWPROJECTIONTRANSPOSE:Et(),WORLDINVERSETRANSPOSE:Et(),VIEWINVERSETRANSPOSE:Et(),PROJECTIONINVERSETRANSPOSE:Et(),WORLDVIEWINVERSETRANSPOSE:Et(),VIEWPROJECTIONINVERSETRANSPOSE:Et(),WORLDVIEWPROJECTIONINVERSETRANSPOSE:Et()};lr.COLOR_BUFFER_BIT=ee.COLOR_BUFFER_BIT;lr.DEPTH_BUFFER_BIT=ee.DEPTH_BUFFER_BIT;lr.STENCIL_BUFFER_BIT=ee.STENCIL_BUFFER_BIT;const Ss=lr;var $=function(e,t,n){e=e||0,t=t||0,n=n||0,this.array=U.fromValues(e,t,n),this._dirty=!0};$.prototype={constructor:$,add:function(e){return U.add(this.array,this.array,e.array),this._dirty=!0,this},set:function(e,t,n){return this.array[0]=e,this.array[1]=t,this.array[2]=n,this._dirty=!0,this},setArray:function(e){return this.array[0]=e[0],this.array[1]=e[1],this.array[2]=e[2],this._dirty=!0,this},clone:function(){return new $(this.x,this.y,this.z)},copy:function(e){return U.copy(this.array,e.array),this._dirty=!0,this},cross:function(e,t){return U.cross(this.array,e.array,t.array),this._dirty=!0,this},dist:function(e){return U.dist(this.array,e.array)},distance:function(e){return U.distance(this.array,e.array)},div:function(e){return U.div(this.array,this.array,e.array),this._dirty=!0,this},divide:function(e){return U.divide(this.array,this.array,e.array),this._dirty=!0,this},dot:function(e){return U.dot(this.array,e.array)},len:function(){return U.len(this.array)},length:function(){return U.length(this.array)},lerp:function(e,t,n){return U.lerp(this.array,e.array,t.array,n),this._dirty=!0,this},min:function(e){return U.min(this.array,this.array,e.array),this._dirty=!0,this},max:function(e){return U.max(this.array,this.array,e.array),this._dirty=!0,this},mul:function(e){return U.mul(this.array,this.array,e.array),this._dirty=!0,this},multiply:function(e){return U.multiply(this.array,this.array,e.array),this._dirty=!0,this},negate:function(){return U.negate(this.array,this.array),this._dirty=!0,this},normalize:function(){return U.normalize(this.array,this.array),this._dirty=!0,this},random:function(e){return U.random(this.array,e),this._dirty=!0,this},scale:function(e){return U.scale(this.array,this.array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return U.scaleAndAdd(this.array,this.array,e.array,t),this._dirty=!0,this},sqrDist:function(e){return U.sqrDist(this.array,e.array)},squaredDistance:function(e){return U.squaredDistance(this.array,e.array)},sqrLen:function(){return U.sqrLen(this.array)},squaredLength:function(){return U.squaredLength(this.array)},sub:function(e){return U.sub(this.array,this.array,e.array),this._dirty=!0,this},subtract:function(e){return U.subtract(this.array,this.array,e.array),this._dirty=!0,this},transformMat3:function(e){return U.transformMat3(this.array,this.array,e.array),this._dirty=!0,this},transformMat4:function(e){return U.transformMat4(this.array,this.array,e.array),this._dirty=!0,this},transformQuat:function(e){return U.transformQuat(this.array,this.array,e.array),this._dirty=!0,this},applyProjection:function(e){var t=this.array;if(e=e.array,e[15]===0){var n=-1/t[2];t[0]=e[0]*t[0]*n,t[1]=e[5]*t[1]*n,t[2]=(e[10]*t[2]+e[14])*n}else t[0]=e[0]*t[0]+e[12],t[1]=e[5]*t[1]+e[13],t[2]=e[10]*t[2]+e[14];return this._dirty=!0,this},eulerFromQuat:function(e,t){$.eulerFromQuat(this,e,t)},eulerFromMat3:function(e,t){$.eulerFromMat3(this,e,t)},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};var to=Object.defineProperty;if(to){var zl=$.prototype;to(zl,"x",{get:function(){return this.array[0]},set:function(e){this.array[0]=e,this._dirty=!0}}),to(zl,"y",{get:function(){return this.array[1]},set:function(e){this.array[1]=e,this._dirty=!0}}),to(zl,"z",{get:function(){return this.array[2]},set:function(e){this.array[2]=e,this._dirty=!0}})}$.add=function(e,t,n){return U.add(e.array,t.array,n.array),e._dirty=!0,e};$.set=function(e,t,n,i){U.set(e.array,t,n,i),e._dirty=!0};$.copy=function(e,t){return U.copy(e.array,t.array),e._dirty=!0,e};$.cross=function(e,t,n){return U.cross(e.array,t.array,n.array),e._dirty=!0,e};$.dist=function(e,t){return U.distance(e.array,t.array)};$.distance=$.dist;$.div=function(e,t,n){return U.divide(e.array,t.array,n.array),e._dirty=!0,e};$.divide=$.div;$.dot=function(e,t){return U.dot(e.array,t.array)};$.len=function(e){return U.length(e.array)};$.lerp=function(e,t,n,i){return U.lerp(e.array,t.array,n.array,i),e._dirty=!0,e};$.min=function(e,t,n){return U.min(e.array,t.array,n.array),e._dirty=!0,e};$.max=function(e,t,n){return U.max(e.array,t.array,n.array),e._dirty=!0,e};$.mul=function(e,t,n){return U.multiply(e.array,t.array,n.array),e._dirty=!0,e};$.multiply=$.mul;$.negate=function(e,t){return U.negate(e.array,t.array),e._dirty=!0,e};$.normalize=function(e,t){return U.normalize(e.array,t.array),e._dirty=!0,e};$.random=function(e,t){return U.random(e.array,t),e._dirty=!0,e};$.scale=function(e,t,n){return U.scale(e.array,t.array,n),e._dirty=!0,e};$.scaleAndAdd=function(e,t,n,i){return U.scaleAndAdd(e.array,t.array,n.array,i),e._dirty=!0,e};$.sqrDist=function(e,t){return U.sqrDist(e.array,t.array)};$.squaredDistance=$.sqrDist;$.sqrLen=function(e){return U.sqrLen(e.array)};$.squaredLength=$.sqrLen;$.sub=function(e,t,n){return U.subtract(e.array,t.array,n.array),e._dirty=!0,e};$.subtract=$.sub;$.transformMat3=function(e,t,n){return U.transformMat3(e.array,t.array,n.array),e._dirty=!0,e};$.transformMat4=function(e,t,n){return U.transformMat4(e.array,t.array,n.array),e._dirty=!0,e};$.transformQuat=function(e,t,n){return U.transformQuat(e.array,t.array,n.array),e._dirty=!0,e};function Hn(e,t,n){return e<t?t:e>n?n:e}var _t=Math.atan2,Vn=Math.asin,ea=Math.abs;$.eulerFromQuat=function(e,t,f){e._dirty=!0,t=t.array;var i=e.array,r=t[0],a=t[1],s=t[2],o=t[3],l=r*r,c=a*a,h=s*s,u=o*o,f=(f||"XYZ").toUpperCase();switch(f){case"XYZ":i[0]=_t(2*(r*o-a*s),u-l-c+h),i[1]=Vn(Hn(2*(r*s+a*o),-1,1)),i[2]=_t(2*(s*o-r*a),u+l-c-h);break;case"YXZ":i[0]=Vn(Hn(2*(r*o-a*s),-1,1)),i[1]=_t(2*(r*s+a*o),u-l-c+h),i[2]=_t(2*(r*a+s*o),u-l+c-h);break;case"ZXY":i[0]=Vn(Hn(2*(r*o+a*s),-1,1)),i[1]=_t(2*(a*o-s*r),u-l-c+h),i[2]=_t(2*(s*o-r*a),u-l+c-h);break;case"ZYX":i[0]=_t(2*(r*o+s*a),u-l-c+h),i[1]=Vn(Hn(2*(a*o-r*s),-1,1)),i[2]=_t(2*(r*a+s*o),u+l-c-h);break;case"YZX":i[0]=_t(2*(r*o-s*a),u-l+c-h),i[1]=_t(2*(a*o-r*s),u+l-c-h),i[2]=Vn(Hn(2*(r*a+s*o),-1,1));break;case"XZY":i[0]=_t(2*(r*o+a*s),u-l+c-h),i[1]=_t(2*(r*s+a*o),u+l-c-h),i[2]=Vn(Hn(2*(s*o-r*a),-1,1));break;default:console.warn("Unkown order: "+f)}return e};$.eulerFromMat3=function(e,t,p){var i=t.array,r=i[0],a=i[3],s=i[6],o=i[1],l=i[4],c=i[7],h=i[2],u=i[5],f=i[8],d=e.array,p=(p||"XYZ").toUpperCase();switch(p){case"XYZ":d[1]=Vn(Hn(s,-1,1)),ea(s)<.99999?(d[0]=_t(-c,f),d[2]=_t(-a,r)):(d[0]=_t(u,l),d[2]=0);break;case"YXZ":d[0]=Vn(-Hn(c,-1,1)),ea(c)<.99999?(d[1]=_t(s,f),d[2]=_t(o,l)):(d[1]=_t(-h,r),d[2]=0);break;case"ZXY":d[0]=Vn(Hn(u,-1,1)),ea(u)<.99999?(d[1]=_t(-h,f),d[2]=_t(-a,l)):(d[1]=0,d[2]=_t(o,r));break;case"ZYX":d[1]=Vn(-Hn(h,-1,1)),ea(h)<.99999?(d[0]=_t(u,f),d[2]=_t(o,r)):(d[0]=0,d[2]=_t(-a,l));break;case"YZX":d[2]=Vn(Hn(o,-1,1)),ea(o)<.99999?(d[0]=_t(-c,l),d[1]=_t(-h,r)):(d[0]=0,d[1]=_t(s,f));break;case"XZY":d[2]=Vn(-Hn(a,-1,1)),ea(a)<.99999?(d[0]=_t(u,l),d[1]=_t(s,r)):(d[0]=_t(-c,f),d[1]=0);break;default:console.warn("Unkown order: "+p)}return e._dirty=!0,e};Object.defineProperties($,{POSITIVE_X:{get:function(){return new $(1,0,0)}},NEGATIVE_X:{get:function(){return new $(-1,0,0)}},POSITIVE_Y:{get:function(){return new $(0,1,0)}},NEGATIVE_Y:{get:function(){return new $(0,-1,0)}},POSITIVE_Z:{get:function(){return new $(0,0,1)}},NEGATIVE_Z:{get:function(){return new $(0,0,-1)}},UP:{get:function(){return new $(0,1,0)}},ZERO:{get:function(){return new $}}});var Gl=1e-5,Ho=function(e,t){this.origin=e||new $,this.direction=t||new $};Ho.prototype={constructor:Ho,intersectPlane:function(e,t){var n=e.normal.array,i=e.distance,r=this.origin.array,a=this.direction.array,s=U.dot(n,a);if(s===0)return null;t||(t=new $);var o=(U.dot(n,r)-i)/s;return U.scaleAndAdd(t.array,r,a,-o),t._dirty=!0,t},mirrorAgainstPlane:function(e){var t=U.dot(e.normal.array,this.direction.array);U.scaleAndAdd(this.direction.array,this.direction.array,e.normal.array,-t*2),this.direction._dirty=!0},distanceToPoint:function(){var e=U.create();return function(t){U.sub(e,t,this.origin.array);var n=U.dot(e,this.direction.array);if(n<0)return U.distance(this.origin.array,t);var i=U.lenSquared(e);return Math.sqrt(i-n*n)}}(),intersectSphere:function(){var e=U.create();return function(t,n,i){var r=this.origin.array,a=this.direction.array;t=t.array,U.sub(e,t,r);var s=U.dot(e,a),o=U.squaredLength(e),l=o-s*s,c=n*n;if(!(l>c)){var h=Math.sqrt(c-l),u=s-h,f=s+h;return i||(i=new $),u<0?f<0?null:(U.scaleAndAdd(i.array,r,a,f),i):(U.scaleAndAdd(i.array,r,a,u),i)}}}(),intersectBoundingBox:function(e,t){var n=this.direction.array,i=this.origin.array,r=e.min.array,a=e.max.array,s=1/n[0],o=1/n[1],l=1/n[2],c,h,u,f,d,p;if(s>=0?(c=(r[0]-i[0])*s,h=(a[0]-i[0])*s):(h=(r[0]-i[0])*s,c=(a[0]-i[0])*s),o>=0?(u=(r[1]-i[1])*o,f=(a[1]-i[1])*o):(f=(r[1]-i[1])*o,u=(a[1]-i[1])*o),c>f||u>h||((u>c||c!==c)&&(c=u),(f<h||h!==h)&&(h=f),l>=0?(d=(r[2]-i[2])*l,p=(a[2]-i[2])*l):(p=(r[2]-i[2])*l,d=(a[2]-i[2])*l),c>p||d>h)||((d>c||c!==c)&&(c=d),(p<h||h!==h)&&(h=p),h<0))return null;var g=c>=0?c:h;return t||(t=new $),U.scaleAndAdd(t.array,i,n,g),t},intersectTriangle:function(){var e=U.create(),t=U.create(),n=U.create(),i=U.create();return function(r,a,s,o,l,c){var h=this.direction.array,u=this.origin.array;r=r.array,a=a.array,s=s.array,U.sub(e,a,r),U.sub(t,s,r),U.cross(i,t,h);var f=U.dot(e,i);if(o){if(f>-Gl)return null}else if(f>-Gl&&f<Gl)return null;U.sub(n,u,r);var d=U.dot(i,n)/f;if(d<0||d>1)return null;U.cross(i,e,n);var p=U.dot(h,i)/f;if(p<0||p>1||d+p>1)return null;U.cross(i,e,t);var g=-U.dot(n,i)/f;return g<0?null:(l||(l=new $),c&&$.set(c,1-d-p,d,p),U.scaleAndAdd(l.array,u,h,g),l)}}(),applyTransform:function(e){$.add(this.direction,this.direction,this.origin),$.transformMat4(this.origin,this.origin,e),$.transformMat4(this.direction,this.direction,e),$.sub(this.direction,this.direction,this.origin),$.normalize(this.direction,this.direction)},copy:function(e){$.copy(this.origin,e.origin),$.copy(this.direction,e.direction)},clone:function(){var e=new Ho;return e.copy(this),e}};const Zo=Ho;var Xe={};Xe.create=function(){var e=new sn(4);return e[0]=0,e[1]=0,e[2]=0,e[3]=0,e};Xe.clone=function(e){var t=new sn(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t};Xe.fromValues=function(e,t,n,i){var r=new sn(4);return r[0]=e,r[1]=t,r[2]=n,r[3]=i,r};Xe.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e};Xe.set=function(e,t,n,i,r){return e[0]=t,e[1]=n,e[2]=i,e[3]=r,e};Xe.add=function(e,t,n){return e[0]=t[0]+n[0],e[1]=t[1]+n[1],e[2]=t[2]+n[2],e[3]=t[3]+n[3],e};Xe.subtract=function(e,t,n){return e[0]=t[0]-n[0],e[1]=t[1]-n[1],e[2]=t[2]-n[2],e[3]=t[3]-n[3],e};Xe.sub=Xe.subtract;Xe.multiply=function(e,t,n){return e[0]=t[0]*n[0],e[1]=t[1]*n[1],e[2]=t[2]*n[2],e[3]=t[3]*n[3],e};Xe.mul=Xe.multiply;Xe.divide=function(e,t,n){return e[0]=t[0]/n[0],e[1]=t[1]/n[1],e[2]=t[2]/n[2],e[3]=t[3]/n[3],e};Xe.div=Xe.divide;Xe.min=function(e,t,n){return e[0]=Math.min(t[0],n[0]),e[1]=Math.min(t[1],n[1]),e[2]=Math.min(t[2],n[2]),e[3]=Math.min(t[3],n[3]),e};Xe.max=function(e,t,n){return e[0]=Math.max(t[0],n[0]),e[1]=Math.max(t[1],n[1]),e[2]=Math.max(t[2],n[2]),e[3]=Math.max(t[3],n[3]),e};Xe.scale=function(e,t,n){return e[0]=t[0]*n,e[1]=t[1]*n,e[2]=t[2]*n,e[3]=t[3]*n,e};Xe.scaleAndAdd=function(e,t,n,i){return e[0]=t[0]+n[0]*i,e[1]=t[1]+n[1]*i,e[2]=t[2]+n[2]*i,e[3]=t[3]+n[3]*i,e};Xe.distance=function(e,t){var n=t[0]-e[0],i=t[1]-e[1],r=t[2]-e[2],a=t[3]-e[3];return Math.sqrt(n*n+i*i+r*r+a*a)};Xe.dist=Xe.distance;Xe.squaredDistance=function(e,t){var n=t[0]-e[0],i=t[1]-e[1],r=t[2]-e[2],a=t[3]-e[3];return n*n+i*i+r*r+a*a};Xe.sqrDist=Xe.squaredDistance;Xe.length=function(e){var t=e[0],n=e[1],i=e[2],r=e[3];return Math.sqrt(t*t+n*n+i*i+r*r)};Xe.len=Xe.length;Xe.squaredLength=function(e){var t=e[0],n=e[1],i=e[2],r=e[3];return t*t+n*n+i*i+r*r};Xe.sqrLen=Xe.squaredLength;Xe.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=-t[3],e};Xe.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e[3]=1/t[3],e};Xe.normalize=function(e,t){var n=t[0],i=t[1],r=t[2],a=t[3],s=n*n+i*i+r*r+a*a;return s>0&&(s=1/Math.sqrt(s),e[0]=t[0]*s,e[1]=t[1]*s,e[2]=t[2]*s,e[3]=t[3]*s),e};Xe.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]};Xe.lerp=function(e,t,n,i){var r=t[0],a=t[1],s=t[2],o=t[3];return e[0]=r+i*(n[0]-r),e[1]=a+i*(n[1]-a),e[2]=s+i*(n[2]-s),e[3]=o+i*(n[3]-o),e};Xe.random=function(e,t){return t=t||1,e[0]=Ca(),e[1]=Ca(),e[2]=Ca(),e[3]=Ca(),Xe.normalize(e,e),Xe.scale(e,e,t),e};Xe.transformMat4=function(e,t,n){var i=t[0],r=t[1],a=t[2],s=t[3];return e[0]=n[0]*i+n[4]*r+n[8]*a+n[12]*s,e[1]=n[1]*i+n[5]*r+n[9]*a+n[13]*s,e[2]=n[2]*i+n[6]*r+n[10]*a+n[14]*s,e[3]=n[3]*i+n[7]*r+n[11]*a+n[15]*s,e};Xe.transformQuat=function(e,t,n){var i=t[0],r=t[1],a=t[2],s=n[0],o=n[1],l=n[2],c=n[3],h=c*i+o*a-l*r,u=c*r+l*i-s*a,f=c*a+s*r-o*i,d=-s*i-o*r-l*a;return e[0]=h*c+d*-s+u*-l-f*-o,e[1]=u*c+d*-o+f*-s-h*-l,e[2]=f*c+d*-l+h*-o-u*-s,e};Xe.forEach=function(){var e=Xe.create();return function(t,n,i,r,a,s){var o,l;for(n||(n=4),i||(i=0),r?l=Math.min(r*n+i,t.length):l=t.length,o=i;o<l;o+=n)e[0]=t[o],e[1]=t[o+1],e[2]=t[o+2],e[3]=t[o+3],a(e,e,s),t[o]=e[0],t[o+1]=e[1],t[o+2]=e[2],t[o+3]=e[3];return t}}();const _e=Xe;var Re={};Re.create=function(){var e=new sn(9);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e};Re.fromMat4=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[4],e[4]=t[5],e[5]=t[6],e[6]=t[8],e[7]=t[9],e[8]=t[10],e};Re.clone=function(e){var t=new sn(9);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t};Re.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e};Re.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e};Re.transpose=function(e,t){if(e===t){var n=t[1],i=t[2],r=t[5];e[1]=t[3],e[2]=t[6],e[3]=n,e[5]=t[7],e[6]=i,e[7]=r}else e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8];return e};Re.invert=function(e,t){var n=t[0],i=t[1],r=t[2],a=t[3],s=t[4],o=t[5],l=t[6],c=t[7],h=t[8],u=h*s-o*c,f=-h*a+o*l,d=c*a-s*l,p=n*u+i*f+r*d;return p?(p=1/p,e[0]=u*p,e[1]=(-h*i+r*c)*p,e[2]=(o*i-r*s)*p,e[3]=f*p,e[4]=(h*n-r*l)*p,e[5]=(-o*n+r*a)*p,e[6]=d*p,e[7]=(-c*n+i*l)*p,e[8]=(s*n-i*a)*p,e):null};Re.adjoint=function(e,t){var n=t[0],i=t[1],r=t[2],a=t[3],s=t[4],o=t[5],l=t[6],c=t[7],h=t[8];return e[0]=s*h-o*c,e[1]=r*c-i*h,e[2]=i*o-r*s,e[3]=o*l-a*h,e[4]=n*h-r*l,e[5]=r*a-n*o,e[6]=a*c-s*l,e[7]=i*l-n*c,e[8]=n*s-i*a,e};Re.determinant=function(e){var t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],s=e[5],o=e[6],l=e[7],c=e[8];return t*(c*a-s*l)+n*(-c*r+s*o)+i*(l*r-a*o)};Re.multiply=function(e,t,n){var i=t[0],r=t[1],a=t[2],s=t[3],o=t[4],l=t[5],c=t[6],h=t[7],u=t[8],f=n[0],d=n[1],p=n[2],g=n[3],v=n[4],m=n[5],y=n[6],_=n[7],x=n[8];return e[0]=f*i+d*s+p*c,e[1]=f*r+d*o+p*h,e[2]=f*a+d*l+p*u,e[3]=g*i+v*s+m*c,e[4]=g*r+v*o+m*h,e[5]=g*a+v*l+m*u,e[6]=y*i+_*s+x*c,e[7]=y*r+_*o+x*h,e[8]=y*a+_*l+x*u,e};Re.mul=Re.multiply;Re.translate=function(e,t,n){var i=t[0],r=t[1],a=t[2],s=t[3],o=t[4],l=t[5],c=t[6],h=t[7],u=t[8],f=n[0],d=n[1];return e[0]=i,e[1]=r,e[2]=a,e[3]=s,e[4]=o,e[5]=l,e[6]=f*i+d*s+c,e[7]=f*r+d*o+h,e[8]=f*a+d*l+u,e};Re.rotate=function(e,t,n){var i=t[0],r=t[1],a=t[2],s=t[3],o=t[4],l=t[5],c=t[6],h=t[7],u=t[8],f=Math.sin(n),d=Math.cos(n);return e[0]=d*i+f*s,e[1]=d*r+f*o,e[2]=d*a+f*l,e[3]=d*s-f*i,e[4]=d*o-f*r,e[5]=d*l-f*a,e[6]=c,e[7]=h,e[8]=u,e};Re.scale=function(e,t,n){var i=n[0],r=n[1];return e[0]=i*t[0],e[1]=i*t[1],e[2]=i*t[2],e[3]=r*t[3],e[4]=r*t[4],e[5]=r*t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e};Re.fromMat2d=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=0,e[3]=t[2],e[4]=t[3],e[5]=0,e[6]=t[4],e[7]=t[5],e[8]=1,e};Re.fromQuat=function(e,t){var n=t[0],i=t[1],r=t[2],a=t[3],s=n+n,o=i+i,l=r+r,c=n*s,h=i*s,u=i*o,f=r*s,d=r*o,p=r*l,g=a*s,v=a*o,m=a*l;return e[0]=1-u-p,e[3]=h-m,e[6]=f+v,e[1]=h+m,e[4]=1-c-p,e[7]=d-g,e[2]=f-v,e[5]=d+g,e[8]=1-c-u,e};Re.normalFromMat4=function(e,t){var n=t[0],i=t[1],r=t[2],a=t[3],s=t[4],o=t[5],l=t[6],c=t[7],h=t[8],u=t[9],f=t[10],d=t[11],p=t[12],g=t[13],v=t[14],m=t[15],y=n*o-i*s,_=n*l-r*s,x=n*c-a*s,A=i*l-r*o,E=i*c-a*o,w=r*c-a*l,b=h*g-u*p,M=h*v-f*p,T=h*m-d*p,P=u*v-f*g,O=u*m-d*g,D=f*m-d*v,N=y*D-_*O+x*P+A*T-E*M+w*b;return N?(N=1/N,e[0]=(o*D-l*O+c*P)*N,e[1]=(l*T-s*D-c*M)*N,e[2]=(s*O-o*T+c*b)*N,e[3]=(r*O-i*D-a*P)*N,e[4]=(n*D-r*T+a*M)*N,e[5]=(i*T-n*O-a*b)*N,e[6]=(g*w-v*E+m*A)*N,e[7]=(v*x-p*w-m*_)*N,e[8]=(p*E-g*x+m*y)*N,e):null};Re.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+Math.pow(e[6],2)+Math.pow(e[7],2)+Math.pow(e[8],2))};var at={};at.create=function(){var e=new sn(4);return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e};at.rotationTo=function(){var e=U.create(),t=U.fromValues(1,0,0),n=U.fromValues(0,1,0);return function(i,r,a){var s=U.dot(r,a);return s<-.999999?(U.cross(e,t,r),U.length(e)<1e-6&&U.cross(e,n,r),U.normalize(e,e),at.setAxisAngle(i,e,Math.PI),i):s>.999999?(i[0]=0,i[1]=0,i[2]=0,i[3]=1,i):(U.cross(e,r,a),i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=1+s,at.normalize(i,i))}}();at.setAxes=function(){var e=Re.create();return function(t,n,i,r){return e[0]=i[0],e[3]=i[1],e[6]=i[2],e[1]=r[0],e[4]=r[1],e[7]=r[2],e[2]=-n[0],e[5]=-n[1],e[8]=-n[2],at.normalize(t,at.fromMat3(t,e))}}();at.clone=_e.clone;at.fromValues=_e.fromValues;at.copy=_e.copy;at.set=_e.set;at.identity=function(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e};at.setAxisAngle=function(e,t,n){n=n*.5;var i=Math.sin(n);return e[0]=i*t[0],e[1]=i*t[1],e[2]=i*t[2],e[3]=Math.cos(n),e};at.add=_e.add;at.multiply=function(e,t,n){var i=t[0],r=t[1],a=t[2],s=t[3],o=n[0],l=n[1],c=n[2],h=n[3];return e[0]=i*h+s*o+r*c-a*l,e[1]=r*h+s*l+a*o-i*c,e[2]=a*h+s*c+i*l-r*o,e[3]=s*h-i*o-r*l-a*c,e};at.mul=at.multiply;at.scale=_e.scale;at.rotateX=function(e,t,n){n*=.5;var i=t[0],r=t[1],a=t[2],s=t[3],o=Math.sin(n),l=Math.cos(n);return e[0]=i*l+s*o,e[1]=r*l+a*o,e[2]=a*l-r*o,e[3]=s*l-i*o,e};at.rotateY=function(e,t,n){n*=.5;var i=t[0],r=t[1],a=t[2],s=t[3],o=Math.sin(n),l=Math.cos(n);return e[0]=i*l-a*o,e[1]=r*l+s*o,e[2]=a*l+i*o,e[3]=s*l-r*o,e};at.rotateZ=function(e,t,n){n*=.5;var i=t[0],r=t[1],a=t[2],s=t[3],o=Math.sin(n),l=Math.cos(n);return e[0]=i*l+r*o,e[1]=r*l-i*o,e[2]=a*l+s*o,e[3]=s*l-a*o,e};at.calculateW=function(e,t){var n=t[0],i=t[1],r=t[2];return e[0]=n,e[1]=i,e[2]=r,e[3]=Math.sqrt(Math.abs(1-n*n-i*i-r*r)),e};at.dot=_e.dot;at.lerp=_e.lerp;at.slerp=function(e,t,n,i){var r=t[0],a=t[1],s=t[2],o=t[3],l=n[0],c=n[1],h=n[2],u=n[3],f,d,p,g,v;return d=r*l+a*c+s*h+o*u,d<0&&(d=-d,l=-l,c=-c,h=-h,u=-u),1-d>1e-6?(f=Math.acos(d),p=Math.sin(f),g=Math.sin((1-i)*f)/p,v=Math.sin(i*f)/p):(g=1-i,v=i),e[0]=g*r+v*l,e[1]=g*a+v*c,e[2]=g*s+v*h,e[3]=g*o+v*u,e};at.invert=function(e,t){var n=t[0],i=t[1],r=t[2],a=t[3],s=n*n+i*i+r*r+a*a,o=s?1/s:0;return e[0]=-n*o,e[1]=-i*o,e[2]=-r*o,e[3]=a*o,e};at.conjugate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=t[3],e};at.length=_e.length;at.len=at.length;at.squaredLength=_e.squaredLength;at.sqrLen=at.squaredLength;at.normalize=_e.normalize;at.fromMat3=function(e,t){var n=t[0]+t[4]+t[8],i;if(n>0)i=Math.sqrt(n+1),e[3]=.5*i,i=.5/i,e[0]=(t[5]-t[7])*i,e[1]=(t[6]-t[2])*i,e[2]=(t[1]-t[3])*i;else{var r=0;t[4]>t[0]&&(r=1),t[8]>t[r*3+r]&&(r=2);var a=(r+1)%3,s=(r+2)%3;i=Math.sqrt(t[r*3+r]-t[a*3+a]-t[s*3+s]+1),e[r]=.5*i,i=.5/i,e[3]=(t[a*3+s]-t[s*3+a])*i,e[a]=(t[a*3+r]+t[r*3+a])*i,e[s]=(t[s*3+r]+t[r*3+s])*i}return e};const Oe=at;var ue=function(){this._axisX=new $,this._axisY=new $,this._axisZ=new $,this.array=ne.create(),this._dirty=!0};ue.prototype={constructor:ue,setArray:function(e){for(var t=0;t<this.array.length;t++)this.array[t]=e[t];return this._dirty=!0,this},adjoint:function(){return ne.adjoint(this.array,this.array),this._dirty=!0,this},clone:function(){return new ue().copy(this)},copy:function(e){return ne.copy(this.array,e.array),this._dirty=!0,this},determinant:function(){return ne.determinant(this.array)},fromQuat:function(e){return ne.fromQuat(this.array,e.array),this._dirty=!0,this},fromRotationTranslation:function(e,t){return ne.fromRotationTranslation(this.array,e.array,t.array),this._dirty=!0,this},fromMat2d:function(e){return ue.fromMat2d(this,e),this},frustum:function(e,t,n,i,r,a){return ne.frustum(this.array,e,t,n,i,r,a),this._dirty=!0,this},identity:function(){return ne.identity(this.array),this._dirty=!0,this},invert:function(){return ne.invert(this.array,this.array),this._dirty=!0,this},lookAt:function(e,t,n){return ne.lookAt(this.array,e.array,t.array,n.array),this._dirty=!0,this},mul:function(e){return ne.mul(this.array,this.array,e.array),this._dirty=!0,this},mulLeft:function(e){return ne.mul(this.array,e.array,this.array),this._dirty=!0,this},multiply:function(e){return ne.multiply(this.array,this.array,e.array),this._dirty=!0,this},multiplyLeft:function(e){return ne.multiply(this.array,e.array,this.array),this._dirty=!0,this},ortho:function(e,t,n,i,r,a){return ne.ortho(this.array,e,t,n,i,r,a),this._dirty=!0,this},perspective:function(e,t,n,i){return ne.perspective(this.array,e,t,n,i),this._dirty=!0,this},rotate:function(e,t){return ne.rotate(this.array,this.array,e,t.array),this._dirty=!0,this},rotateX:function(e){return ne.rotateX(this.array,this.array,e),this._dirty=!0,this},rotateY:function(e){return ne.rotateY(this.array,this.array,e),this._dirty=!0,this},rotateZ:function(e){return ne.rotateZ(this.array,this.array,e),this._dirty=!0,this},scale:function(e){return ne.scale(this.array,this.array,e.array),this._dirty=!0,this},translate:function(e){return ne.translate(this.array,this.array,e.array),this._dirty=!0,this},transpose:function(){return ne.transpose(this.array,this.array),this._dirty=!0,this},decomposeMatrix:function(){var e=U.create(),t=U.create(),n=U.create(),i=Re.create();return function(r,a,s){var o=this.array;U.set(e,o[0],o[1],o[2]),U.set(t,o[4],o[5],o[6]),U.set(n,o[8],o[9],o[10]);var l=U.length(e),c=U.length(t),h=U.length(n),u=this.determinant();u<0&&(l=-l),r&&r.set(l,c,h),s.set(o[12],o[13],o[14]),Re.fromMat4(i,o),i[0]/=l,i[1]/=l,i[2]/=l,i[3]/=c,i[4]/=c,i[5]/=c,i[6]/=h,i[7]/=h,i[8]/=h,Oe.fromMat3(a.array,i),Oe.normalize(a.array,a.array),a._dirty=!0,s._dirty=!0}}(),toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};var no=Object.defineProperty;if(no){var Hl=ue.prototype;no(Hl,"z",{get:function(){var e=this.array;return this._axisZ.set(e[8],e[9],e[10]),this._axisZ},set:function(e){var t=this.array;e=e.array,t[8]=e[0],t[9]=e[1],t[10]=e[2],this._dirty=!0}}),no(Hl,"y",{get:function(){var e=this.array;return this._axisY.set(e[4],e[5],e[6]),this._axisY},set:function(e){var t=this.array;e=e.array,t[4]=e[0],t[5]=e[1],t[6]=e[2],this._dirty=!0}}),no(Hl,"x",{get:function(){var e=this.array;return this._axisX.set(e[0],e[1],e[2]),this._axisX},set:function(e){var t=this.array;e=e.array,t[0]=e[0],t[1]=e[1],t[2]=e[2],this._dirty=!0}})}ue.adjoint=function(e,t){return ne.adjoint(e.array,t.array),e._dirty=!0,e};ue.copy=function(e,t){return ne.copy(e.array,t.array),e._dirty=!0,e};ue.determinant=function(e){return ne.determinant(e.array)};ue.identity=function(e){return ne.identity(e.array),e._dirty=!0,e};ue.ortho=function(e,t,n,i,r,a,s){return ne.ortho(e.array,t,n,i,r,a,s),e._dirty=!0,e};ue.perspective=function(e,t,n,i,r){return ne.perspective(e.array,t,n,i,r),e._dirty=!0,e};ue.lookAt=function(e,t,n,i){return ne.lookAt(e.array,t.array,n.array,i.array),e._dirty=!0,e};ue.invert=function(e,t){return ne.invert(e.array,t.array),e._dirty=!0,e};ue.mul=function(e,t,n){return ne.mul(e.array,t.array,n.array),e._dirty=!0,e};ue.multiply=ue.mul;ue.fromQuat=function(e,t){return ne.fromQuat(e.array,t.array),e._dirty=!0,e};ue.fromRotationTranslation=function(e,t,n){return ne.fromRotationTranslation(e.array,t.array,n.array),e._dirty=!0,e};ue.fromMat2d=function(i,n){i._dirty=!0;var n=n.array,i=i.array;return i[0]=n[0],i[4]=n[2],i[12]=n[4],i[1]=n[1],i[5]=n[3],i[13]=n[5],i};ue.rotate=function(e,t,n,i){return ne.rotate(e.array,t.array,n,i.array),e._dirty=!0,e};ue.rotateX=function(e,t,n){return ne.rotateX(e.array,t.array,n),e._dirty=!0,e};ue.rotateY=function(e,t,n){return ne.rotateY(e.array,t.array,n),e._dirty=!0,e};ue.rotateZ=function(e,t,n){return ne.rotateZ(e.array,t.array,n),e._dirty=!0,e};ue.scale=function(e,t,n){return ne.scale(e.array,t.array,n.array),e._dirty=!0,e};ue.transpose=function(e,t){return ne.transpose(e.array,t.array),e._dirty=!0,e};ue.translate=function(e,t,n){return ne.translate(e.array,t.array,n.array),e._dirty=!0,e};var dt=function(e,t,n,i){e=e||0,t=t||0,n=n||0,i=i===void 0?1:i,this.array=Oe.fromValues(e,t,n,i),this._dirty=!0};dt.prototype={constructor:dt,add:function(e){return Oe.add(this.array,this.array,e.array),this._dirty=!0,this},calculateW:function(){return Oe.calculateW(this.array,this.array),this._dirty=!0,this},set:function(e,t,n,i){return this.array[0]=e,this.array[1]=t,this.array[2]=n,this.array[3]=i,this._dirty=!0,this},setArray:function(e){return this.array[0]=e[0],this.array[1]=e[1],this.array[2]=e[2],this.array[3]=e[3],this._dirty=!0,this},clone:function(){return new dt(this.x,this.y,this.z,this.w)},conjugate:function(){return Oe.conjugate(this.array,this.array),this._dirty=!0,this},copy:function(e){return Oe.copy(this.array,e.array),this._dirty=!0,this},dot:function(e){return Oe.dot(this.array,e.array)},fromMat3:function(e){return Oe.fromMat3(this.array,e.array),this._dirty=!0,this},fromMat4:function(){var e=Re.create();return function(t){return Re.fromMat4(e,t.array),Re.transpose(e,e),Oe.fromMat3(this.array,e),this._dirty=!0,this}}(),identity:function(){return Oe.identity(this.array),this._dirty=!0,this},invert:function(){return Oe.invert(this.array,this.array),this._dirty=!0,this},len:function(){return Oe.len(this.array)},length:function(){return Oe.length(this.array)},lerp:function(e,t,n){return Oe.lerp(this.array,e.array,t.array,n),this._dirty=!0,this},mul:function(e){return Oe.mul(this.array,this.array,e.array),this._dirty=!0,this},mulLeft:function(e){return Oe.multiply(this.array,e.array,this.array),this._dirty=!0,this},multiply:function(e){return Oe.multiply(this.array,this.array,e.array),this._dirty=!0,this},multiplyLeft:function(e){return Oe.multiply(this.array,e.array,this.array),this._dirty=!0,this},normalize:function(){return Oe.normalize(this.array,this.array),this._dirty=!0,this},rotateX:function(e){return Oe.rotateX(this.array,this.array,e),this._dirty=!0,this},rotateY:function(e){return Oe.rotateY(this.array,this.array,e),this._dirty=!0,this},rotateZ:function(e){return Oe.rotateZ(this.array,this.array,e),this._dirty=!0,this},rotationTo:function(e,t){return Oe.rotationTo(this.array,e.array,t.array),this._dirty=!0,this},setAxes:function(e,t,n){return Oe.setAxes(this.array,e.array,t.array,n.array),this._dirty=!0,this},setAxisAngle:function(e,t){return Oe.setAxisAngle(this.array,e.array,t),this._dirty=!0,this},slerp:function(e,t,n){return Oe.slerp(this.array,e.array,t.array,n),this._dirty=!0,this},sqrLen:function(){return Oe.sqrLen(this.array)},squaredLength:function(){return Oe.squaredLength(this.array)},fromEuler:function(e,t){return dt.fromEuler(this,e,t)},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};var as=Object.defineProperty;if(as){var io=dt.prototype;as(io,"x",{get:function(){return this.array[0]},set:function(e){this.array[0]=e,this._dirty=!0}}),as(io,"y",{get:function(){return this.array[1]},set:function(e){this.array[1]=e,this._dirty=!0}}),as(io,"z",{get:function(){return this.array[2]},set:function(e){this.array[2]=e,this._dirty=!0}}),as(io,"w",{get:function(){return this.array[3]},set:function(e){this.array[3]=e,this._dirty=!0}})}dt.add=function(e,t,n){return Oe.add(e.array,t.array,n.array),e._dirty=!0,e};dt.set=function(e,t,n,i,r){Oe.set(e.array,t,n,i,r),e._dirty=!0};dt.copy=function(e,t){return Oe.copy(e.array,t.array),e._dirty=!0,e};dt.calculateW=function(e,t){return Oe.calculateW(e.array,t.array),e._dirty=!0,e};dt.conjugate=function(e,t){return Oe.conjugate(e.array,t.array),e._dirty=!0,e};dt.identity=function(e){return Oe.identity(e.array),e._dirty=!0,e};dt.invert=function(e,t){return Oe.invert(e.array,t.array),e._dirty=!0,e};dt.dot=function(e,t){return Oe.dot(e.array,t.array)};dt.len=function(e){return Oe.length(e.array)};dt.lerp=function(e,t,n,i){return Oe.lerp(e.array,t.array,n.array,i),e._dirty=!0,e};dt.slerp=function(e,t,n,i){return Oe.slerp(e.array,t.array,n.array,i),e._dirty=!0,e};dt.mul=function(e,t,n){return Oe.multiply(e.array,t.array,n.array),e._dirty=!0,e};dt.multiply=dt.mul;dt.rotateX=function(e,t,n){return Oe.rotateX(e.array,t.array,n),e._dirty=!0,e};dt.rotateY=function(e,t,n){return Oe.rotateY(e.array,t.array,n),e._dirty=!0,e};dt.rotateZ=function(e,t,n){return Oe.rotateZ(e.array,t.array,n),e._dirty=!0,e};dt.setAxisAngle=function(e,t,n){return Oe.setAxisAngle(e.array,t.array,n),e._dirty=!0,e};dt.normalize=function(e,t){return Oe.normalize(e.array,t.array),e._dirty=!0,e};dt.sqrLen=function(e){return Oe.sqrLen(e.array)};dt.squaredLength=dt.sqrLen;dt.fromMat3=function(e,t){return Oe.fromMat3(e.array,t.array),e._dirty=!0,e};dt.setAxes=function(e,t,n,i){return Oe.setAxes(e.array,t.array,n.array,i.array),e._dirty=!0,e};dt.rotationTo=function(e,t,n){return Oe.rotationTo(e.array,t.array,n.array),e._dirty=!0,e};dt.fromEuler=function(e,t,h){e._dirty=!0,t=t.array;var i=e.array,r=Math.cos(t[0]/2),a=Math.cos(t[1]/2),s=Math.cos(t[2]/2),o=Math.sin(t[0]/2),l=Math.sin(t[1]/2),c=Math.sin(t[2]/2),h=(h||"XYZ").toUpperCase();switch(h){case"XYZ":i[0]=o*a*s+r*l*c,i[1]=r*l*s-o*a*c,i[2]=r*a*c+o*l*s,i[3]=r*a*s-o*l*c;break;case"YXZ":i[0]=o*a*s+r*l*c,i[1]=r*l*s-o*a*c,i[2]=r*a*c-o*l*s,i[3]=r*a*s+o*l*c;break;case"ZXY":i[0]=o*a*s-r*l*c,i[1]=r*l*s+o*a*c,i[2]=r*a*c+o*l*s,i[3]=r*a*s-o*l*c;break;case"ZYX":i[0]=o*a*s-r*l*c,i[1]=r*l*s+o*a*c,i[2]=r*a*c-o*l*s,i[3]=r*a*s+o*l*c;break;case"YZX":i[0]=o*a*s+r*l*c,i[1]=r*l*s+o*a*c,i[2]=r*a*c-o*l*s,i[3]=r*a*s-o*l*c;break;case"XZY":i[0]=o*a*s-r*l*c,i[1]=r*l*s-o*a*c,i[2]=r*a*c+o*l*s,i[3]=r*a*s+o*l*c;break}};const rp=dt;var Hi=U.set,ro=U.copy,Vo=function(e,t){this.min=e||new $(1/0,1/0,1/0),this.max=t||new $(-1/0,-1/0,-1/0),this.vertices=null};Vo.prototype={constructor:Vo,updateFromVertices:function(e){if(e.length>0){var t=this.min,n=this.max,i=t.array,r=n.array;ro(i,e[0]),ro(r,e[0]);for(var a=1;a<e.length;a++){var s=e[a];s[0]<i[0]&&(i[0]=s[0]),s[1]<i[1]&&(i[1]=s[1]),s[2]<i[2]&&(i[2]=s[2]),s[0]>r[0]&&(r[0]=s[0]),s[1]>r[1]&&(r[1]=s[1]),s[2]>r[2]&&(r[2]=s[2])}t._dirty=!0,n._dirty=!0}},union:function(e){var t=this.min,n=this.max;return U.min(t.array,t.array,e.min.array),U.max(n.array,n.array,e.max.array),t._dirty=!0,n._dirty=!0,this},intersection:function(e){var t=this.min,n=this.max;return U.max(t.array,t.array,e.min.array),U.min(n.array,n.array,e.max.array),t._dirty=!0,n._dirty=!0,this},intersectBoundingBox:function(e){var t=this.min.array,n=this.max.array,i=e.min.array,r=e.max.array;return!(t[0]>r[0]||t[1]>r[1]||t[2]>r[2]||n[0]<i[0]||n[1]<i[1]||n[2]<i[2])},containBoundingBox:function(e){var t=this.min.array,n=this.max.array,i=e.min.array,r=e.max.array;return t[0]<=i[0]&&t[1]<=i[1]&&t[2]<=i[2]&&n[0]>=r[0]&&n[1]>=r[1]&&n[2]>=r[2]},containPoint:function(e){var t=this.min.array,n=this.max.array,i=e.array;return t[0]<=i[0]&&t[1]<=i[1]&&t[2]<=i[2]&&n[0]>=i[0]&&n[1]>=i[1]&&n[2]>=i[2]},isFinite:function(){var e=this.min.array,t=this.max.array;return isFinite(e[0])&&isFinite(e[1])&&isFinite(e[2])&&isFinite(t[0])&&isFinite(t[1])&&isFinite(t[2])},applyTransform:function(e){this.transformFrom(this,e)},transformFrom:function(){var e=U.create(),t=U.create(),n=U.create(),i=U.create(),r=U.create(),a=U.create();return function(s,o){var l=s.min.array,c=s.max.array,h=o.array;return e[0]=h[0]*l[0],e[1]=h[1]*l[0],e[2]=h[2]*l[0],t[0]=h[0]*c[0],t[1]=h[1]*c[0],t[2]=h[2]*c[0],n[0]=h[4]*l[1],n[1]=h[5]*l[1],n[2]=h[6]*l[1],i[0]=h[4]*c[1],i[1]=h[5]*c[1],i[2]=h[6]*c[1],r[0]=h[8]*l[2],r[1]=h[9]*l[2],r[2]=h[10]*l[2],a[0]=h[8]*c[2],a[1]=h[9]*c[2],a[2]=h[10]*c[2],l=this.min.array,c=this.max.array,l[0]=Math.min(e[0],t[0])+Math.min(n[0],i[0])+Math.min(r[0],a[0])+h[12],l[1]=Math.min(e[1],t[1])+Math.min(n[1],i[1])+Math.min(r[1],a[1])+h[13],l[2]=Math.min(e[2],t[2])+Math.min(n[2],i[2])+Math.min(r[2],a[2])+h[14],c[0]=Math.max(e[0],t[0])+Math.max(n[0],i[0])+Math.max(r[0],a[0])+h[12],c[1]=Math.max(e[1],t[1])+Math.max(n[1],i[1])+Math.max(r[1],a[1])+h[13],c[2]=Math.max(e[2],t[2])+Math.max(n[2],i[2])+Math.max(r[2],a[2])+h[14],this.min._dirty=!0,this.max._dirty=!0,this}}(),applyProjection:function(e){var t=this.min.array,n=this.max.array,i=e.array,r=t[0],a=t[1],s=t[2],o=n[0],l=n[1],c=t[2],h=n[0],u=n[1],f=n[2];if(i[15]===1)t[0]=i[0]*r+i[12],t[1]=i[5]*a+i[13],n[2]=i[10]*s+i[14],n[0]=i[0]*h+i[12],n[1]=i[5]*u+i[13],t[2]=i[10]*f+i[14];else{var d=-1/s;t[0]=i[0]*r*d,t[1]=i[5]*a*d,n[2]=(i[10]*s+i[14])*d,d=-1/c,n[0]=i[0]*o*d,n[1]=i[5]*l*d,d=-1/f,t[2]=(i[10]*f+i[14])*d}return this.min._dirty=!0,this.max._dirty=!0,this},updateVertices:function(){var e=this.vertices;if(!e){e=[];for(var t=0;t<8;t++)e[t]=U.fromValues(0,0,0);this.vertices=e}var n=this.min.array,i=this.max.array;return Hi(e[0],n[0],n[1],n[2]),Hi(e[1],n[0],i[1],n[2]),Hi(e[2],i[0],n[1],n[2]),Hi(e[3],i[0],i[1],n[2]),Hi(e[4],n[0],n[1],i[2]),Hi(e[5],n[0],i[1],i[2]),Hi(e[6],i[0],n[1],i[2]),Hi(e[7],i[0],i[1],i[2]),this},copy:function(e){var t=this.min,n=this.max;return ro(t.array,e.min.array),ro(n.array,e.max.array),t._dirty=!0,n._dirty=!0,this},clone:function(){var e=new Vo;return e.copy(this),e}};const xn=Vo;var gg=0,hi=an.extend({name:"",position:null,rotation:null,scale:null,worldTransform:null,localTransform:null,autoUpdateLocalTransform:!0,_parent:null,_scene:null,_needsUpdateWorldTransform:!0,_inIterating:!1,__depth:0},function(){this.name||(this.name=(this.type||"NODE")+"_"+gg++),this.position||(this.position=new $),this.rotation||(this.rotation=new rp),this.scale||(this.scale=new $(1,1,1)),this.worldTransform=new ue,this.localTransform=new ue,this._children=[]},{target:null,invisible:!1,isSkinnedMesh:function(){return!1},isRenderable:function(){return!1},setName:function(e){var t=this._scene;if(t){var n=t._nodeRepository;delete n[this.name],n[e]=this}this.name=e},add:function(e){var t=e._parent;if(t!==this){t&&t.remove(e),e._parent=this,this._children.push(e);var n=this._scene;n&&n!==e.scene&&e.traverse(this._addSelfToScene,this),e._needsUpdateWorldTransform=!0}},remove:function(e){var t=this._children,n=t.indexOf(e);n<0||(t.splice(n,1),e._parent=null,this._scene&&e.traverse(this._removeSelfFromScene,this))},removeAll:function(){for(var e=this._children,t=0;t<e.length;t++)e[t]._parent=null,this._scene&&e[t].traverse(this._removeSelfFromScene,this);this._children=[]},getScene:function(){return this._scene},getParent:function(){return this._parent},_removeSelfFromScene:function(e){e._scene.removeFromScene(e),e._scene=null},_addSelfToScene:function(e){this._scene.addToScene(e),e._scene=this._scene},isAncestor:function(e){for(var t=e._parent;t;){if(t===this)return!0;t=t._parent}return!1},children:function(){return this._children.slice()},childAt:function(e){return this._children[e]},getChildByName:function(e){for(var t=this._children,n=0;n<t.length;n++)if(t[n].name===e)return t[n]},getDescendantByName:function(e){for(var t=this._children,n=0;n<t.length;n++){var i=t[n];if(i.name===e)return i;var r=i.getDescendantByName(e);if(r)return r}},queryNode:function(e){if(e){for(var t=e.split("/"),n=this,i=0;i<t.length;i++){var r=t[i];if(r){for(var a=!1,s=n._children,o=0;o<s.length;o++){var l=s[o];if(l.name===r){n=l,a=!0;break}}if(!a)return}}return n}},getPath:function(e){if(!this._parent)return"/";for(var t=this._parent,n=this.name;t._parent&&(n=t.name+"/"+n,t._parent!=e);)t=t._parent;return!t._parent&&e?null:n},traverse:function(e,t){e.call(t,this);for(var n=this._children,i=0,r=n.length;i<r;i++)n[i].traverse(e,t)},eachChild:function(e,t){for(var n=this._children,i=0,r=n.length;i<r;i++){var a=n[i];e.call(t,a,i)}},setLocalTransform:function(e){ne.copy(this.localTransform.array,e.array),this.decomposeLocalTransform()},decomposeLocalTransform:function(e){var t=e?null:this.scale;this.localTransform.decomposeMatrix(t,this.rotation,this.position)},setWorldTransform:function(e){ne.copy(this.worldTransform.array,e.array),this.decomposeWorldTransform()},decomposeWorldTransform:function(){var e=ne.create();return function(t){var n=this.localTransform,i=this.worldTransform;this._parent?(ne.invert(e,this._parent.worldTransform.array),ne.multiply(n.array,e,i.array)):ne.copy(n.array,i.array);var r=t?null:this.scale;n.decomposeMatrix(r,this.rotation,this.position)}}(),transformNeedsUpdate:function(){return this.position._dirty||this.rotation._dirty||this.scale._dirty},updateLocalTransform:function(){var e=this.position,t=this.rotation,n=this.scale;if(this.transformNeedsUpdate()){var i=this.localTransform.array;ne.fromRotationTranslation(i,t.array,e.array),ne.scale(i,i,n.array),t._dirty=!1,n._dirty=!1,e._dirty=!1,this._needsUpdateWorldTransform=!0}},_updateWorldTransformTopDown:function(){var e=this.localTransform.array,t=this.worldTransform.array;this._parent?ne.multiplyAffine(t,this._parent.worldTransform.array,e):ne.copy(t,e)},updateWorldTransform:function(){for(var e=this;e&&e.getParent()&&e.getParent().transformNeedsUpdate();)e=e.getParent();e.update()},update:function(e){this.autoUpdateLocalTransform?this.updateLocalTransform():e=!0,(e||this._needsUpdateWorldTransform)&&(this._updateWorldTransformTopDown(),e=!0,this._needsUpdateWorldTransform=!1);for(var t=this._children,n=0,i=t.length;n<i;n++)t[n].update(e)},getBoundingBox:function(){function e(r){return!r.invisible&&r.geometry}var t=new xn,n=new ue,i=new ue;return function(r,a){return a=a||new xn,this._parent?ue.invert(i,this._parent.worldTransform):ue.identity(i),this.traverse(function(s){s.geometry&&s.geometry.boundingBox&&(t.copy(s.geometry.boundingBox),ue.multiply(n,i,s.worldTransform),t.applyTransform(n),a.union(t))},this,e),a}}(),getWorldPosition:function(e){this.transformNeedsUpdate()&&this.updateWorldTransform();var t=this.worldTransform.array;if(e){var n=e.array;return n[0]=t[12],n[1]=t[13],n[2]=t[14],e}else return new $(t[12],t[13],t[14])},clone:function(){var e=new this.constructor,t=this._children;e.setName(this.name),e.position.copy(this.position),e.rotation.copy(this.rotation),e.scale.copy(this.scale);for(var n=0;n<t.length;n++)e.add(t[n].clone());return e},rotateAround:function(){var e=new $,t=new ue;return function(n,i,r){e.copy(this.position).subtract(n);var a=this.localTransform;a.identity(),a.translate(n),a.rotate(r,i),t.fromRotationTranslation(this.rotation,e),a.multiply(t),a.scale(this.scale),this.decomposeLocalTransform(),this._needsUpdateWorldTransform=!0}}(),lookAt:function(){var e=new ue;return function(t,n){e.lookAt(this.position,t,n||this.localTransform.y).invert(),this.setLocalTransform(e),this.target=t}}()}),Sn=hi.extend({material:null,geometry:null,mode:ee.TRIANGLES,_renderInfo:null},{__program:null,lightGroup:0,renderOrder:0,culling:!0,cullFace:ee.BACK,frontFace:ee.CCW,frustumCulling:!0,receiveShadow:!0,castShadow:!0,ignorePicking:!1,ignorePreZ:!1,ignoreGBuffer:!1,isRenderable:function(){return this.geometry&&this.material&&this.material.shader&&!this.invisible&&this.geometry.vertexCount>0},beforeRender:function(e){},afterRender:function(e,t){},getBoundingBox:function(e,t){return t=hi.prototype.getBoundingBox.call(this,e,t),this.geometry&&this.geometry.boundingBox&&t.union(this.geometry.boundingBox),t},clone:function(){var e=["castShadow","receiveShadow","mode","culling","cullFace","frontFace","frustumCulling","renderOrder","lineWidth","ignorePicking","ignorePreZ","ignoreGBuffer"];return function(){var t=hi.prototype.clone.call(this);t.geometry=this.geometry,t.material=this.material;for(var n=0;n<e.length;n++){var i=e[n];t[i]!==this[i]&&(t[i]=this[i])}return t}}()});Sn.POINTS=ee.POINTS;Sn.LINES=ee.LINES;Sn.LINE_LOOP=ee.LINE_LOOP;Sn.LINE_STRIP=ee.LINE_STRIP;Sn.TRIANGLES=ee.TRIANGLES;Sn.TRIANGLE_STRIP=ee.TRIANGLE_STRIP;Sn.TRIANGLE_FAN=ee.TRIANGLE_FAN;Sn.BACK=ee.BACK;Sn.FRONT=ee.FRONT;Sn.FRONT_AND_BACK=ee.FRONT_AND_BACK;Sn.CW=ee.CW;Sn.CCW=ee.CCW;var ph=an.extend({scene:null,camera:null,renderer:null},function(){this._ray=new Zo,this._ndc=new In},{pick:function(e,t,n){var i=this.pickAll(e,t,[],n);return i[0]||null},pickAll:function(e,t,n,i){return this.renderer.screenToNDC(e,t,this._ndc),this.camera.castRay(this._ndc,this._ray),n=n||[],this._intersectNode(this.scene,n,i||!1),n.sort(this._intersectionCompareFunc),n},_intersectNode:function(e,t,n){e instanceof Sn&&e.isRenderable()&&(!e.ignorePicking||n)&&(e.mode===ee.TRIANGLES&&e.geometry.isUseIndices()||e.geometry.pickByRay||e.geometry.pick)&&this._intersectRenderable(e,t);for(var i=0;i<e._children.length;i++)this._intersectNode(e._children[i],t,n)},_intersectRenderable:function(){var e=new $,t=new $,n=new $,i=new Zo,r=new ue;return function(a,s){var o=a.isSkinnedMesh();i.copy(this._ray),ue.invert(r,a.worldTransform),o||i.applyTransform(r);var l=a.geometry,c=o?a.skeleton.boundingBox:l.boundingBox;if(!(c&&!i.intersectBoundingBox(c))){if(l.pick){l.pick(this._ndc.x,this._ndc.y,this.renderer,this.camera,a,s);return}else if(l.pickByRay){l.pickByRay(i,a,s);return}var h=a.cullFace===ee.BACK&&a.frontFace===ee.CCW||a.cullFace===ee.FRONT&&a.frontFace===ee.CW,u,f=l.indices,d=l.attributes.position,p=l.attributes.weight,g=l.attributes.joint,v,m=[];if(!(!d||!d.value||!f)){if(o){v=a.skeleton.getSubSkinMatrices(a.__uid__,a.joints);for(var y=0;y<a.joints.length;y++){m[y]=m[y]||[];for(var _=0;_<16;_++)m[y][_]=v[y*16+_]}var x=[],A=[],E=[],w=[],b=[],M=l.attributes.skinnedPosition;(!M||!M.value)&&(l.createAttribute("skinnedPosition","f",3),M=l.attributes.skinnedPosition,M.init(l.vertexCount));for(var y=0;y<l.vertexCount;y++){d.get(y,x),p.get(y,A),g.get(y,E),A[3]=1-A[0]-A[1]-A[2],U.set(w,0,0,0);for(var _=0;_<4;_++)E[_]>=0&&A[_]>1e-4&&(U.transformMat4(b,x,m[E[_]]),U.scaleAndAdd(w,w,b,A[_]));M.set(y,w)}}for(var y=0;y<f.length;y+=3){var T=f[y],P=f[y+1],O=f[y+2],D=o?l.attributes.skinnedPosition:d;if(D.get(T,e.array),D.get(P,t.array),D.get(O,n.array),h?u=i.intersectTriangle(e,t,n,a.culling):u=i.intersectTriangle(e,n,t,a.culling),u){var N=new $;o?$.copy(N,u):$.transformMat4(N,u,a.worldTransform),s.push(new ph.Intersection(u,N,a,[T,P,O],y/3,$.dist(N,this._ray.origin)))}}}}}}(),_intersectionCompareFunc:function(e,t){return e.distance-t.distance}});ph.Intersection=function(e,t,n,i,r,a){this.point=e,this.pointWorld=t,this.target=n,this.triangle=i,this.triangleIndex=r,this.distance=a};const _g=ph;var ss="__dt__",Ua=function(){this._contextId=0,this._caches=[],this._context={}};Ua.prototype={use:function(e,t){var n=this._caches;n[e]||(n[e]={},t&&(n[e]=t())),this._contextId=e,this._context=n[e]},put:function(e,t){this._context[e]=t},get:function(e){return this._context[e]},dirty:function(e){e=e||"";var t=ss+e;this.put(t,!0)},dirtyAll:function(e){e=e||"";for(var t=ss+e,n=this._caches,i=0;i<n.length;i++)n[i]&&(n[i][t]=!0)},fresh:function(e){e=e||"";var t=ss+e;this.put(t,!1)},freshAll:function(e){e=e||"";for(var t=ss+e,n=this._caches,i=0;i<n.length;i++)n[i]&&(n[i][t]=!1)},isDirty:function(e){e=e||"";var t=ss+e,n=this._context;return!n.hasOwnProperty(t)||n[t]===!0},deleteContext:function(e){delete this._caches[e],this._context={}},delete:function(e){delete this._context[e]},clearAll:function(){this._caches={}},getContext:function(){return this._context},eachContext:function(e,t){var n=Object.keys(this._caches);n.forEach(function(i){e&&e.call(t,i)})},miss:function(e){return!this._context.hasOwnProperty(e)}};Ua.prototype.constructor=Ua;var oe=an.extend({width:512,height:512,type:ee.UNSIGNED_BYTE,format:ee.RGBA,wrapS:ee.REPEAT,wrapT:ee.REPEAT,minFilter:ee.LINEAR_MIPMAP_LINEAR,magFilter:ee.LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,sRGB:!0,unpackAlignment:4,premultiplyAlpha:!1,dynamic:!1,NPOT:!1,__used:0},function(){this._cache=new Ua},{getWebGLTexture:function(e){var t=e.gl,n=this._cache;return n.use(e.__uid__),n.miss("webgl_texture")&&n.put("webgl_texture",t.createTexture()),this.dynamic?this.update(e):n.isDirty()&&(this.update(e),n.fresh()),n.get("webgl_texture")},bind:function(){},unbind:function(){},dirty:function(){this._cache&&this._cache.dirtyAll()},update:function(e){},updateCommon:function(e){var t=e.gl;t.pixelStorei(t.UNPACK_FLIP_Y_WEBGL,this.flipY),t.pixelStorei(t.UNPACK_PREMULTIPLY_ALPHA_WEBGL,this.premultiplyAlpha),t.pixelStorei(t.UNPACK_ALIGNMENT,this.unpackAlignment),this.format===ee.DEPTH_COMPONENT&&(this.useMipmap=!1);var n=e.getGLExtension("EXT_sRGB");this.format===oe.SRGB&&!n&&(this.format=oe.RGB),this.format===oe.SRGB_ALPHA&&!n&&(this.format=oe.RGBA),this.NPOT=!this.isPowerOfTwo()},getAvailableWrapS:function(){return this.NPOT?ee.CLAMP_TO_EDGE:this.wrapS},getAvailableWrapT:function(){return this.NPOT?ee.CLAMP_TO_EDGE:this.wrapT},getAvailableMinFilter:function(){var e=this.minFilter;return this.NPOT||!this.useMipmap?e===ee.NEAREST_MIPMAP_NEAREST||e===ee.NEAREST_MIPMAP_LINEAR?ee.NEAREST:e===ee.LINEAR_MIPMAP_LINEAR||e===ee.LINEAR_MIPMAP_NEAREST?ee.LINEAR:e:e},getAvailableMagFilter:function(){return this.magFilter},nextHighestPowerOfTwo:function(e){--e;for(var t=1;t<32;t<<=1)e=e|e>>t;return e+1},dispose:function(e){var t=this._cache;t.use(e.__uid__);var n=t.get("webgl_texture");n&&e.gl.deleteTexture(n),t.deleteContext(e.__uid__)},isRenderable:function(){},isPowerOfTwo:function(){}});Object.defineProperty(oe.prototype,"width",{get:function(){return this._width},set:function(e){this._width=e}});Object.defineProperty(oe.prototype,"height",{get:function(){return this._height},set:function(e){this._height=e}});oe.BYTE=ee.BYTE;oe.UNSIGNED_BYTE=ee.UNSIGNED_BYTE;oe.SHORT=ee.SHORT;oe.UNSIGNED_SHORT=ee.UNSIGNED_SHORT;oe.INT=ee.INT;oe.UNSIGNED_INT=ee.UNSIGNED_INT;oe.FLOAT=ee.FLOAT;oe.HALF_FLOAT=36193;oe.UNSIGNED_INT_24_8_WEBGL=34042;oe.DEPTH_COMPONENT=ee.DEPTH_COMPONENT;oe.DEPTH_STENCIL=ee.DEPTH_STENCIL;oe.ALPHA=ee.ALPHA;oe.RGB=ee.RGB;oe.RGBA=ee.RGBA;oe.LUMINANCE=ee.LUMINANCE;oe.LUMINANCE_ALPHA=ee.LUMINANCE_ALPHA;oe.SRGB=35904;oe.SRGB_ALPHA=35906;oe.COMPRESSED_RGB_S3TC_DXT1_EXT=33776;oe.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777;oe.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778;oe.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779;oe.NEAREST=ee.NEAREST;oe.LINEAR=ee.LINEAR;oe.NEAREST_MIPMAP_NEAREST=ee.NEAREST_MIPMAP_NEAREST;oe.LINEAR_MIPMAP_NEAREST=ee.LINEAR_MIPMAP_NEAREST;oe.NEAREST_MIPMAP_LINEAR=ee.NEAREST_MIPMAP_LINEAR;oe.LINEAR_MIPMAP_LINEAR=ee.LINEAR_MIPMAP_LINEAR;oe.REPEAT=ee.REPEAT;oe.CLAMP_TO_EDGE=ee.CLAMP_TO_EDGE;oe.MIRRORED_REPEAT=ee.MIRRORED_REPEAT;var On=Sn.extend({skeleton:null,joints:null},function(){this.joints||(this.joints=[])},{offsetMatrix:null,isInstancedMesh:function(){return!1},isSkinnedMesh:function(){return!!(this.skeleton&&this.joints&&this.joints.length>0)},clone:function(){var e=Sn.prototype.clone.call(this);return e.skeleton=this.skeleton,this.joints&&(e.joints=this.joints.slice()),e}});On.POINTS=ee.POINTS;On.LINES=ee.LINES;On.LINE_LOOP=ee.LINE_LOOP;On.LINE_STRIP=ee.LINE_STRIP;On.TRIANGLES=ee.TRIANGLES;On.TRIANGLE_STRIP=ee.TRIANGLE_STRIP;On.TRIANGLE_FAN=ee.TRIANGLE_FAN;On.BACK=ee.BACK;On.FRONT=ee.FRONT;On.FRONT_AND_BACK=ee.FRONT_AND_BACK;On.CW=ee.CW;On.CCW=ee.CCW;const zr=On;var Hs={};Hs.isPowerOfTwo=function(e){return(e&e-1)===0};Hs.nextPowerOfTwo=function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,e++,e};Hs.nearestPowerOfTwo=function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))};var yu=Hs.isPowerOfTwo;function Tu(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))}function xg(e,t){var n=Tu(e.width),i=Tu(e.height);t=t||document.createElement("canvas"),t.width=n,t.height=i;var r=t.getContext("2d");return r.drawImage(e.image,0,0,n,i),t}var mh=oe.extend(function(){return{image:null,pixels:null,mipmaps:[],convertToPOT:!1}},{textureType:"texture2D",update:function(e){var t=e.gl;t.bindTexture(t.TEXTURE_2D,this._cache.get("webgl_texture")),this.updateCommon(e);var n=this.format,i=this.type,r=!!(this.convertToPOT&&!this.mipmaps.length&&this.image&&(this.wrapS===oe.REPEAT||this.wrapT===oe.REPEAT)&&this.NPOT);t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,r?this.wrapS:this.getAvailableWrapS()),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,r?this.wrapT:this.getAvailableWrapT()),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,r?this.magFilter:this.getAvailableMagFilter()),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,r?this.minFilter:this.getAvailableMinFilter());var a=e.getGLExtension("EXT_texture_filter_anisotropic");if(a&&this.anisotropic>1&&t.texParameterf(t.TEXTURE_2D,a.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),i===36193){var s=e.getGLExtension("OES_texture_half_float");s||(i=ee.FLOAT)}if(this.mipmaps.length)for(var o=this.width,l=this.height,c=0;c<this.mipmaps.length;c++){var h=this.mipmaps[c];this._updateTextureData(t,h,c,o,l,n,i,!1),o/=2,l/=2}else this._updateTextureData(t,this,0,this.width,this.height,n,i,r),this.useMipmap&&(!this.NPOT||r)&&t.generateMipmap(t.TEXTURE_2D);t.bindTexture(t.TEXTURE_2D,null)},_updateTextureData:function(e,t,n,i,r,a,s,o){if(t.image){var l=t.image;o&&(this._potCanvas=xg(this,this._potCanvas),l=this._potCanvas),e.texImage2D(e.TEXTURE_2D,n,a,a,s,l)}else a<=oe.COMPRESSED_RGBA_S3TC_DXT5_EXT&&a>=oe.COMPRESSED_RGB_S3TC_DXT1_EXT?e.compressedTexImage2D(e.TEXTURE_2D,n,a,i,r,0,t.pixels):e.texImage2D(e.TEXTURE_2D,n,a,i,r,0,a,s,t.pixels)},generateMipmap:function(e){var t=e.gl;this.useMipmap&&!this.NPOT&&(t.bindTexture(t.TEXTURE_2D,this._cache.get("webgl_texture")),t.generateMipmap(t.TEXTURE_2D))},isPowerOfTwo:function(){return yu(this.width)&&yu(this.height)},isRenderable:function(){return this.image?this.image.width>0&&this.image.height>0:!!(this.width&&this.height)},bind:function(e){e.gl.bindTexture(e.gl.TEXTURE_2D,this.getWebGLTexture(e))},unbind:function(e){e.gl.bindTexture(e.gl.TEXTURE_2D,null)},load:function(e,t){var n=lt.createImage();t&&(n.crossOrigin=t);var i=this;return n.onload=function(){i.dirty(),i.trigger("success",i)},n.onerror=function(){i.trigger("error",i)},n.src=e,this.image=n,this}});Object.defineProperty(mh.prototype,"width",{get:function(){return this.image?this.image.width:this._width},set:function(e){this.image?console.warn("Texture from image can't set width"):(this._width!==e&&this.dirty(),this._width=e)}});Object.defineProperty(mh.prototype,"height",{get:function(){return this.image?this.image.height:this._height},set:function(e){this.image?console.warn("Texture from image can't set height"):(this._height!==e&&this.dirty(),this._height=e)}});const We=mh;function ap(e){return{byte:lt.Int8Array,ubyte:lt.Uint8Array,short:lt.Int16Array,ushort:lt.Uint16Array}[e]||lt.Float32Array}function Vl(e){return"attr_"+e}function Fa(e,t,n,i){switch(this.name=e,this.type=t,this.size=n,this.semantic=i||"",this.value=null,n){case 1:this.get=function(r){return this.value[r]},this.set=function(r,a){this.value[r]=a},this.copy=function(r,a){this.value[r]=this.value[r]};break;case 2:this.get=function(r,a){var s=this.value;return a[0]=s[r*2],a[1]=s[r*2+1],a},this.set=function(r,a){var s=this.value;s[r*2]=a[0],s[r*2+1]=a[1]},this.copy=function(r,a){var s=this.value;a*=2,r*=2,s[r]=s[a],s[r+1]=s[a+1]};break;case 3:this.get=function(r,a){var s=r*3,o=this.value;return a[0]=o[s],a[1]=o[s+1],a[2]=o[s+2],a},this.set=function(r,a){var s=r*3,o=this.value;o[s]=a[0],o[s+1]=a[1],o[s+2]=a[2]},this.copy=function(r,a){var s=this.value;a*=3,r*=3,s[r]=s[a],s[r+1]=s[a+1],s[r+2]=s[a+2]};break;case 4:this.get=function(r,a){var s=this.value,o=r*4;return a[0]=s[o],a[1]=s[o+1],a[2]=s[o+2],a[3]=s[o+3],a},this.set=function(r,a){var s=this.value,o=r*4;s[o]=a[0],s[o+1]=a[1],s[o+2]=a[2],s[o+3]=a[3]},this.copy=function(r,a){var s=this.value;a*=4,r*=4,s[r]=s[a],s[r+1]=s[a+1],s[r+2]=s[a+2],s[r+3]=s[a+3]}}}Fa.prototype.init=function(e){if(!this.value||this.value.length!==e*this.size){var t=ap(this.type);this.value=new t(e*this.size)}};Fa.prototype.fromArray=function(e){var t=ap(this.type),n;if(e[0]&&e[0].length){var i=0,r=this.size;n=new t(e.length*r);for(var a=0;a<e.length;a++)for(var s=0;s<r;s++)n[i++]=e[a][s]}else n=new t(e);this.value=n};Fa.prototype.clone=function(e){var t=new Fa(this.name,this.type,this.size,this.semantic);return e&&console.warn("todo"),t};function sp(e,t,n,i,r){this.name=e,this.type=t,this.buffer=n,this.size=i,this.semantic=r,this.symbol="",this.needsRemove=!1}function op(e){this.buffer=e,this.count=0}var En=an.extend(function(){return{attributes:{},indices:null,dynamic:!0,_enabledAttributes:null,__used:0}},function(){this._cache=new Ua,this._attributeList=Object.keys(this.attributes),this.__vaoCache={}},{mainAttribute:"",pick:null,pickByRay:null,dirty:function(){for(var e=this.getEnabledAttributes(),t=0;t<e.length;t++)this.dirtyAttribute(e[t]);this.dirtyIndices(),this._enabledAttributes=null,this._cache.dirty("any")},dirtyIndices:function(){this._cache.dirtyAll("indices")},dirtyAttribute:function(e){this._cache.dirtyAll(Vl(e)),this._cache.dirtyAll("attributes")},getTriangleIndices:function(e,t){if(e<this.triangleCount&&e>=0){t||(t=[]);var n=this.indices;return t[0]=n[e*3],t[1]=n[e*3+1],t[2]=n[e*3+2],t}},setTriangleIndices:function(e,t){var n=this.indices;n[e*3]=t[0],n[e*3+1]=t[1],n[e*3+2]=t[2]},isUseIndices:function(){return!!this.indices},initIndicesFromArray:function(e){var t,n=this.vertexCount>65535?lt.Uint32Array:lt.Uint16Array;if(e[0]&&e[0].length){var i=0,r=3;t=new n(e.length*r);for(var a=0;a<e.length;a++)for(var s=0;s<r;s++)t[i++]=e[a][s]}else t=new n(e);this.indices=t},createAttribute:function(e,t,n,i){var r=new Fa(e,t,n,i);return this.attributes[e]&&this.removeAttribute(e),this.attributes[e]=r,this._attributeList.push(e),r},removeAttribute:function(e){var t=this._attributeList,n=t.indexOf(e);return n>=0?(t.splice(n,1),delete this.attributes[e],!0):!1},getAttribute:function(e){return this.attributes[e]},getEnabledAttributes:function(){var e=this._enabledAttributes,t=this._attributeList;if(e)return e;for(var n=[],i=this.vertexCount,r=0;r<t.length;r++){var a=t[r],s=this.attributes[a];s.value&&s.value.length===i*s.size&&n.push(a)}return this._enabledAttributes=n,n},getBufferChunks:function(e){var t=this._cache;t.use(e.__uid__);var n=t.isDirty("attributes"),i=t.isDirty("indices");if(n||i){this._updateBuffer(e.gl,n,i);for(var r=this.getEnabledAttributes(),a=0;a<r.length;a++)t.fresh(Vl(r[a]));t.fresh("attributes"),t.fresh("indices")}return t.fresh("any"),t.get("chunks")},_updateBuffer:function(e,t,n){var i=this._cache,r=i.get("chunks"),a=!1;r||(r=[],r[0]={attributeBuffers:[],indicesBuffer:null},i.put("chunks",r),a=!0);var s=r[0],o=s.attributeBuffers,l=s.indicesBuffer;if(t||a){var c=this.getEnabledAttributes(),h={};if(!a)for(var u=0;u<o.length;u++)h[o[u].name]=o[u];for(var f=0;f<c.length;f++){var d=c[f],p=this.attributes[d],g;a||(g=h[d]);var v;g?v=g.buffer:v=e.createBuffer(),i.isDirty(Vl(d))&&(e.bindBuffer(e.ARRAY_BUFFER,v),e.bufferData(e.ARRAY_BUFFER,p.value,this.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW)),o[f]=new sp(d,p.type,v,p.size,p.semantic)}for(var u=f;u<o.length;u++)e.deleteBuffer(o[u].buffer);o.length=f}this.isUseIndices()&&(n||a)&&(l||(l=new op(e.createBuffer()),s.indicesBuffer=l),l.count=this.indices.length,e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,l.buffer),e.bufferData(e.ELEMENT_ARRAY_BUFFER,this.indices,this.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW))},dispose:function(e){var t=this._cache;t.use(e.__uid__);var n=t.get("chunks");if(n)for(var i=0;i<n.length;i++){for(var r=n[i],a=0;a<r.attributeBuffers.length;a++){var s=r.attributeBuffers[a];e.gl.deleteBuffer(s.buffer)}r.indicesBuffer&&e.gl.deleteBuffer(r.indicesBuffer.buffer)}if(this.__vaoCache){var o=e.getGLExtension("OES_vertex_array_object");for(var l in this.__vaoCache){var c=this.__vaoCache[l].vao;c&&o.deleteVertexArrayOES(c)}}this.__vaoCache={},t.deleteContext(e.__uid__)}});Object.defineProperty&&(Object.defineProperty(En.prototype,"vertexCount",{enumerable:!1,get:function(){var e=this.attributes[this.mainAttribute];return e||(e=this.attributes[this._attributeList[0]]),!e||!e.value?0:e.value.length/e.size}}),Object.defineProperty(En.prototype,"triangleCount",{enumerable:!1,get:function(){var e=this.indices;return e?e.length/3:0}}));En.STATIC_DRAW=ee.STATIC_DRAW;En.DYNAMIC_DRAW=ee.DYNAMIC_DRAW;En.STREAM_DRAW=ee.STREAM_DRAW;En.AttributeBuffer=sp;En.IndicesBuffer=op;En.Attribute=Fa;var vn=U.create,ta=U.add,Sr=U.set,ni=En.Attribute,je=En.extend(function(){return{attributes:{position:new ni("position","float",3,"POSITION"),texcoord0:new ni("texcoord0","float",2,"TEXCOORD_0"),texcoord1:new ni("texcoord1","float",2,"TEXCOORD_1"),normal:new ni("normal","float",3,"NORMAL"),tangent:new ni("tangent","float",4,"TANGENT"),color:new ni("color","float",4,"COLOR"),weight:new ni("weight","float",3,"WEIGHT"),joint:new ni("joint","float",4,"JOINT"),barycentric:new ni("barycentric","float",3,null)},boundingBox:null}},{mainAttribute:"position",updateBoundingBox:function(){var e=this.boundingBox;e||(e=this.boundingBox=new xn);var t=this.attributes.position.value;if(t&&t.length){var n=e.min,i=e.max,r=n.array,a=i.array;U.set(r,t[0],t[1],t[2]),U.set(a,t[0],t[1],t[2]);for(var s=3;s<t.length;){var o=t[s++],l=t[s++],c=t[s++];o<r[0]&&(r[0]=o),l<r[1]&&(r[1]=l),c<r[2]&&(r[2]=c),o>a[0]&&(a[0]=o),l>a[1]&&(a[1]=l),c>a[2]&&(a[2]=c)}n._dirty=!0,i._dirty=!0}},generateVertexNormals:function(){if(this.vertexCount){var e=this.indices,t=this.attributes,n=t.position.value,i=t.normal.value;if(!i||i.length!==n.length)i=t.normal.value=new lt.Float32Array(n.length);else for(var r=0;r<i.length;r++)i[r]=0;for(var a=vn(),s=vn(),o=vn(),l=vn(),c=vn(),h=vn(),u=e?e.length:this.vertexCount,f,d,p,g=0;g<u;){e?(f=e[g++],d=e[g++],p=e[g++]):(f=g++,d=g++,p=g++),Sr(a,n[f*3],n[f*3+1],n[f*3+2]),Sr(s,n[d*3],n[d*3+1],n[d*3+2]),Sr(o,n[p*3],n[p*3+1],n[p*3+2]),U.sub(l,a,s),U.sub(c,s,o),U.cross(h,l,c);for(var r=0;r<3;r++)i[f*3+r]=i[f*3+r]+h[r],i[d*3+r]=i[d*3+r]+h[r],i[p*3+r]=i[p*3+r]+h[r]}for(var r=0;r<i.length;)Sr(h,i[r],i[r+1],i[r+2]),U.normalize(h,h),i[r++]=h[0],i[r++]=h[1],i[r++]=h[2];this.dirty()}},generateFaceNormals:function(){if(this.vertexCount){this.isUniqueVertex()||this.generateUniqueVertex();var e=this.indices,t=this.attributes,n=t.position.value,i=t.normal.value,r=vn(),a=vn(),s=vn(),o=vn(),l=vn(),c=vn();i||(i=t.normal.value=new Float32Array(n.length));for(var h=e?e.length:this.vertexCount,u,f,d,p=0;p<h;){e?(u=e[p++],f=e[p++],d=e[p++]):(u=p++,f=p++,d=p++),Sr(r,n[u*3],n[u*3+1],n[u*3+2]),Sr(a,n[f*3],n[f*3+1],n[f*3+2]),Sr(s,n[d*3],n[d*3+1],n[d*3+2]),U.sub(o,r,a),U.sub(l,a,s),U.cross(c,o,l),U.normalize(c,c);for(var g=0;g<3;g++)i[u*3+g]=c[g],i[f*3+g]=c[g],i[d*3+g]=c[g]}this.dirty()}},generateTangents:function(){if(this.vertexCount){var e=this.vertexCount,t=this.attributes;t.tangent.value||(t.tangent.value=new Float32Array(e*4));var n=t.texcoord0.value,i=t.position.value,r=t.tangent.value,a=t.normal.value;if(!n){console.warn("Geometry without texcoords can't generate tangents.");return}for(var s=[],o=[],l=0;l<e;l++)s[l]=[0,0,0],o[l]=[0,0,0];for(var c=[0,0,0],h=[0,0,0],u=this.indices,f=u?u.length:this.vertexCount,d,p,g,l=0;l<f;){u?(d=u[l++],p=u[l++],g=u[l++]):(d=l++,p=l++,g=l++);var v=n[d*2],m=n[p*2],y=n[g*2],_=n[d*2+1],x=n[p*2+1],A=n[g*2+1],E=i[d*3],w=i[p*3],b=i[g*3],M=i[d*3+1],T=i[p*3+1],P=i[g*3+1],O=i[d*3+2],D=i[p*3+2],N=i[g*3+2],B=w-E,z=b-E,Y=T-M,F=P-M,J=D-O,V=N-O,ce=m-v,fe=y-v,ye=x-_,W=A-_,Q=1/(ce*W-ye*fe);c[0]=(W*B-ye*z)*Q,c[1]=(W*Y-ye*F)*Q,c[2]=(W*J-ye*V)*Q,h[0]=(ce*z-fe*B)*Q,h[1]=(ce*F-fe*Y)*Q,h[2]=(ce*V-fe*J)*Q,ta(s[d],s[d],c),ta(s[p],s[p],c),ta(s[g],s[g],c),ta(o[d],o[d],h),ta(o[p],o[p],h),ta(o[g],o[g],h)}for(var de=vn(),se=vn(),Me=vn(),l=0;l<e;l++){Me[0]=a[l*3],Me[1]=a[l*3+1],Me[2]=a[l*3+2];var Ae=s[l];U.scale(de,Me,U.dot(Me,Ae)),U.sub(de,Ae,de),U.normalize(de,de),U.cross(se,Me,Ae),r[l*4]=de[0],r[l*4+1]=de[1],r[l*4+2]=de[2],r[l*4+3]=U.dot(se,o[l])<0?-1:1}this.dirty()}},isUniqueVertex:function(){return this.isUseIndices()?this.vertexCount===this.indices.length:!0},generateUniqueVertex:function(){if(!(!this.vertexCount||!this.indices)){this.indices.length>65535&&(this.indices=new lt.Uint32Array(this.indices));for(var e=this.attributes,t=this.indices,n=this.getEnabledAttributes(),i={},r=0;r<n.length;r++){var a=n[r];i[a]=e[a].value,e[a].init(this.indices.length)}for(var s=0,o=0;o<t.length;o++){for(var l=t[o],r=0;r<n.length;r++)for(var a=n[r],c=e[a].value,h=e[a].size,u=0;u<h;u++)c[s*h+u]=i[a][l*h+u];t[o]=s,s++}this.dirty()}},generateBarycentric:function(){if(this.vertexCount){this.isUniqueVertex()||this.generateUniqueVertex();var e=this.attributes,t=e.barycentric.value,n=this.indices;if(!(t&&t.length===n.length*3)){t=e.barycentric.value=new Float32Array(n.length*3);for(var i=0;i<(n?n.length:this.vertexCount/3);)for(var r=0;r<3;r++){var a=n?n[i++]:i*3+r;t[a*3+r]=1}this.dirty()}}},applyTransform:function(e){var t=this.attributes,n=t.position.value,i=t.normal.value,r=t.tangent.value;e=e.array;var a=ne.create();ne.invert(a,e),ne.transpose(a,a);var s=U.transformMat4,o=U.forEach;o(n,3,0,null,s,e),i&&o(i,3,0,null,s,a),r&&o(r,4,0,null,s,a),this.boundingBox&&this.updateBoundingBox()},dispose:function(e){var t=this._cache;t.use(e.__uid__);var n=t.get("chunks");if(n)for(var i=0;i<n.length;i++){for(var r=n[i],a=0;a<r.attributeBuffers.length;a++){var s=r.attributeBuffers[a];e.gl.deleteBuffer(s.buffer)}r.indicesBuffer&&e.gl.deleteBuffer(r.indicesBuffer.buffer)}if(this.__vaoCache){var o=e.getGLExtension("OES_vertex_array_object");for(var l in this.__vaoCache){var c=this.__vaoCache[l].vao;c&&o.deleteVertexArrayOES(c)}}this.__vaoCache={},t.deleteContext(e.__uid__)}});je.STATIC_DRAW=En.STATIC_DRAW;je.DYNAMIC_DRAW=En.DYNAMIC_DRAW;je.STREAM_DRAW=En.STREAM_DRAW;je.AttributeBuffer=En.AttributeBuffer;je.IndicesBuffer=En.IndicesBuffer;je.Attribute=ni;const yg=`vec3 calcAmbientSHLight(int idx, vec3 N) {
 int offset = 9 * idx;
 return ambientSHLightCoefficients[0]
 + ambientSHLightCoefficients[1] * N.x
 + ambientSHLightCoefficients[2] * N.y
 + ambientSHLightCoefficients[3] * N.z
 + ambientSHLightCoefficients[4] * N.x * N.z
 + ambientSHLightCoefficients[5] * N.z * N.y
 + ambientSHLightCoefficients[6] * N.y * N.x
 + ambientSHLightCoefficients[7] * (3.0 * N.z * N.z - 1.0)
 + ambientSHLightCoefficients[8] * (N.x * N.x - N.y * N.y);
}`;var Yn="uniform vec3 ",os="uniform float ",na="@export clay.header.",ia="@end",tn=":unconfigurable;";const Tg=[na+"directional_light",Yn+"directionalLightDirection[DIRECTIONAL_LIGHT_COUNT]"+tn,Yn+"directionalLightColor[DIRECTIONAL_LIGHT_COUNT]"+tn,ia,na+"ambient_light",Yn+"ambientLightColor[AMBIENT_LIGHT_COUNT]"+tn,ia,na+"ambient_sh_light",Yn+"ambientSHLightColor[AMBIENT_SH_LIGHT_COUNT]"+tn,Yn+"ambientSHLightCoefficients[AMBIENT_SH_LIGHT_COUNT * 9]"+tn,yg,ia,na+"ambient_cubemap_light",Yn+"ambientCubemapLightColor[AMBIENT_CUBEMAP_LIGHT_COUNT]"+tn,"uniform samplerCube ambientCubemapLightCubemap[AMBIENT_CUBEMAP_LIGHT_COUNT]"+tn,"uniform sampler2D ambientCubemapLightBRDFLookup[AMBIENT_CUBEMAP_LIGHT_COUNT]"+tn,ia,na+"point_light",Yn+"pointLightPosition[POINT_LIGHT_COUNT]"+tn,os+"pointLightRange[POINT_LIGHT_COUNT]"+tn,Yn+"pointLightColor[POINT_LIGHT_COUNT]"+tn,ia,na+"spot_light",Yn+"spotLightPosition[SPOT_LIGHT_COUNT]"+tn,Yn+"spotLightDirection[SPOT_LIGHT_COUNT]"+tn,os+"spotLightRange[SPOT_LIGHT_COUNT]"+tn,os+"spotLightUmbraAngleCosine[SPOT_LIGHT_COUNT]"+tn,os+"spotLightPenumbraAngleCosine[SPOT_LIGHT_COUNT]"+tn,os+"spotLightFalloffFactor[SPOT_LIGHT_COUNT]"+tn,Yn+"spotLightColor[SPOT_LIGHT_COUNT]"+tn,ia].join(`
`);le.import(Tg);var Qn=hi.extend(function(){return{color:[1,1,1],intensity:1,castShadow:!0,shadowResolution:512,group:0}},{type:"",clone:function(){var e=hi.prototype.clone.call(this);return e.color=Array.prototype.slice.call(this.color),e.intensity=this.intensity,e.castShadow=this.castShadow,e.shadowResolution=this.shadowResolution,e}}),ko=function(e,t){this.normal=e||new $(0,1,0),this.distance=t||0};ko.prototype={constructor:ko,distanceToPoint:function(e){return U.dot(e.array,this.normal.array)-this.distance},projectPoint:function(e,t){t||(t=new $);var n=this.distanceToPoint(e);return U.scaleAndAdd(t.array,e.array,this.normal.array,-n),t._dirty=!0,t},normalize:function(){var e=1/U.len(this.normal.array);U.scale(this.normal.array,e),this.distance*=e},intersectFrustum:function(e){for(var t=e.vertices,n=this.normal.array,i=U.dot(t[0].array,n)>this.distance,r=1;r<8;r++)if(U.dot(t[r].array,n)>this.distance!=i)return!0},intersectLine:function(){var e=U.create();return function(t,n,i){var r=this.distanceToPoint(t),a=this.distanceToPoint(n);if(r>0&&a>0||r<0&&a<0)return null;var s=this.normal.array,o=this.distance,l=t.array;U.sub(e,n.array,t.array),U.normalize(e,e);var c=U.dot(s,e);if(c===0)return null;i||(i=new $);var h=(U.dot(s,l)-o)/c;return U.scaleAndAdd(i.array,l,e,-h),i._dirty=!0,i}}(),applyTransform:function(){var e=ne.create(),t=_e.create(),n=_e.create();return n[3]=1,function(i){i=i.array,U.scale(n,this.normal.array,this.distance),_e.transformMat4(n,n,i),this.distance=U.dot(n,this.normal.array),ne.invert(e,i),ne.transpose(e,e),t[3]=0,U.copy(t,this.normal.array),_e.transformMat4(t,t,e),U.copy(this.normal.array,t)}}(),copy:function(e){U.copy(this.normal.array,e.normal.array),this.normal._dirty=!0,this.distance=e.distance},clone:function(){var e=new ko;return e.copy(this),e}};const lp=ko;var Dt=U.set,Su=U.copy,Eu=U.transformMat4,kl=Math.min,Wl=Math.max,cp=function(){this.planes=[];for(var e=0;e<6;e++)this.planes.push(new lp);this.boundingBox=new xn,this.vertices=[];for(var e=0;e<8;e++)this.vertices[e]=U.fromValues(0,0,0)};cp.prototype={setFromProjection:function(e){var t=this.planes,n=e.array,i=n[0],r=n[1],a=n[2],s=n[3],o=n[4],l=n[5],c=n[6],h=n[7],u=n[8],f=n[9],d=n[10],p=n[11],g=n[12],v=n[13],m=n[14],y=n[15];Dt(t[0].normal.array,s-i,h-o,p-u),t[0].distance=-(y-g),t[0].normalize(),Dt(t[1].normal.array,s+i,h+o,p+u),t[1].distance=-(y+g),t[1].normalize(),Dt(t[2].normal.array,s+r,h+l,p+f),t[2].distance=-(y+v),t[2].normalize(),Dt(t[3].normal.array,s-r,h-l,p-f),t[3].distance=-(y-v),t[3].normalize(),Dt(t[4].normal.array,s-a,h-c,p-d),t[4].distance=-(y-m),t[4].normalize(),Dt(t[5].normal.array,s+a,h+c,p+d),t[5].distance=-(y+m),t[5].normalize();var _=this.boundingBox,x=this.vertices;if(y===0){var A=l/i,E=-m/(d-1),w=-m/(d+1),b=-w/l,M=-E/l;_.min.set(-b*A,-b,w),_.max.set(b*A,b,E),Dt(x[0],-b*A,-b,w),Dt(x[1],-b*A,b,w),Dt(x[2],b*A,-b,w),Dt(x[3],b*A,b,w),Dt(x[4],-M*A,-M,E),Dt(x[5],-M*A,M,E),Dt(x[6],M*A,-M,E),Dt(x[7],M*A,M,E)}else{var T=(-1-g)/i,P=(1-g)/i,O=(1-v)/l,D=(-1-v)/l,N=(-1-m)/d,B=(1-m)/d;_.min.set(Math.min(T,P),Math.min(D,O),Math.min(B,N)),_.max.set(Math.max(P,T),Math.max(O,D),Math.max(N,B));var z=_.min.array,Y=_.max.array;Dt(x[0],z[0],z[1],z[2]),Dt(x[1],z[0],Y[1],z[2]),Dt(x[2],Y[0],z[1],z[2]),Dt(x[3],Y[0],Y[1],z[2]),Dt(x[4],z[0],z[1],Y[2]),Dt(x[5],z[0],Y[1],Y[2]),Dt(x[6],Y[0],z[1],Y[2]),Dt(x[7],Y[0],Y[1],Y[2])}},getTransformedBoundingBox:function(){var e=U.create();return function(t,n){var i=this.vertices,r=n.array,a=t.min,s=t.max,o=a.array,l=s.array,c=i[0];Eu(e,c,r),Su(o,e),Su(l,e);for(var h=1;h<8;h++)c=i[h],Eu(e,c,r),o[0]=kl(e[0],o[0]),o[1]=kl(e[1],o[1]),o[2]=kl(e[2],o[2]),l[0]=Wl(e[0],l[0]),l[1]=Wl(e[1],l[1]),l[2]=Wl(e[2],l[2]);return a._dirty=!0,s._dirty=!0,t}}()};const vh=cp;var Ba=hi.extend(function(){return{projectionMatrix:new ue,invProjectionMatrix:new ue,viewMatrix:new ue,frustum:new vh}},function(){this.update(!0)},{update:function(e){hi.prototype.update.call(this,e),ue.invert(this.viewMatrix,this.worldTransform),this.updateProjectionMatrix(),ue.invert(this.invProjectionMatrix,this.projectionMatrix),this.frustum.setFromProjection(this.projectionMatrix)},setViewMatrix:function(e){ue.copy(this.viewMatrix,e),ue.invert(this.worldTransform,e),this.decomposeWorldTransform()},decomposeProjectionMatrix:function(){},setProjectionMatrix:function(e){ue.copy(this.projectionMatrix,e),ue.invert(this.invProjectionMatrix,e),this.decomposeProjectionMatrix()},updateProjectionMatrix:function(){},castRay:function(){var e=_e.create();return function(t,n){var i=n!==void 0?n:new Zo,r=t.array[0],a=t.array[1];return _e.set(e,r,a,-1,1),_e.transformMat4(e,e,this.invProjectionMatrix.array),_e.transformMat4(e,e,this.worldTransform.array),U.scale(i.origin.array,e,1/e[3]),_e.set(e,r,a,1,1),_e.transformMat4(e,e,this.invProjectionMatrix.array),_e.transformMat4(e,e,this.worldTransform.array),U.scale(e,e,1/e[3]),U.sub(i.direction.array,e,i.origin.array),U.normalize(i.direction.array,i.direction.array),i.direction._dirty=!0,i.origin._dirty=!0,i}}()}),Sg=ne.create(),Mu=ne.create(),Xl={};function Eg(e){var t=[],n=Object.keys(e);n.sort();for(var i=0;i<n.length;i++){var r=n[i];t.push(r+" "+e[r])}var a=t.join(`
`);if(Xl[a])return Xl[a];var s=Nt.genGUID();return Xl[a]=s,s}function vl(){this.opaque=[],this.transparent=[],this._opaqueCount=0,this._transparentCount=0}vl.prototype.startCount=function(){this._opaqueCount=0,this._transparentCount=0};vl.prototype.add=function(e,t){t?this.transparent[this._transparentCount++]=e:this.opaque[this._opaqueCount++]=e};vl.prototype.endCount=function(){this.transparent.length=this._transparentCount,this.opaque.length=this._opaqueCount};var dr=hi.extend(function(){return{material:null,lights:[],viewBoundingBoxLastFrame:new xn,shadowUniforms:{},_cameraList:[],_lightUniforms:{},_previousLightNumber:{},_lightNumber:{},_lightProgramKeys:{},_nodeRepository:{},_renderLists:new $d(20)}},function(){this._scene=this},{addToScene:function(e){e instanceof Ba?(this._cameraList.length>0&&console.warn("Found multiple camera in one scene. Use the fist one."),this._cameraList.push(e)):e instanceof Qn&&this.lights.push(e),e.name&&(this._nodeRepository[e.name]=e)},removeFromScene:function(e){var t;e instanceof Ba?(t=this._cameraList.indexOf(e),t>=0&&this._cameraList.splice(t,1)):e instanceof Qn&&(t=this.lights.indexOf(e),t>=0&&this.lights.splice(t,1)),e.name&&delete this._nodeRepository[e.name]},getNode:function(e){return this._nodeRepository[e]},setMainCamera:function(e){var t=this._cameraList.indexOf(e);t>=0&&this._cameraList.splice(t,1),this._cameraList.unshift(e)},getMainCamera:function(){return this._cameraList[0]},getLights:function(){return this.lights},updateLights:function(){var e=this.lights;this._previousLightNumber=this._lightNumber;for(var t={},n=0;n<e.length;n++){var i=e[n];if(!i.invisible){var r=i.group;t[r]||(t[r]={}),t[r][i.type]=t[r][i.type]||0,t[r][i.type]++}}this._lightNumber=t;for(var a in t)this._lightProgramKeys[a]=Eg(t[a]);this._updateLightUniforms()},cloneNode:function(e){var t=e.clone(),n={};function i(r,a){n[r.__uid__]=a;for(var s=0;s<r._children.length;s++){var o=r._children[s],l=a._children[s];i(o,l)}}return i(e,t),t.traverse(function(r){r.skeleton&&(r.skeleton=r.skeleton.clone(n)),r.material&&(r.material=r.material.clone())}),t},updateRenderList:function(e,t){var n=e.__uid__,i=this._renderLists.get(n);i||(i=new vl,this._renderLists.put(n,i)),i.startCount(),t&&(this.viewBoundingBoxLastFrame.min.set(1/0,1/0,1/0),this.viewBoundingBoxLastFrame.max.set(-1/0,-1/0,-1/0));var r=this.material&&this.material.transparent||!1;return this._doUpdateRenderList(this,e,r,i,t),i.endCount(),i},getRenderList:function(e){return this._renderLists.get(e.__uid__)},_doUpdateRenderList:function(e,t,n,i,r){if(!e.invisible)for(var a=0;a<e._children.length;a++){var s=e._children[a];if(s.isRenderable()){var o=s.isSkinnedMesh()?Sg:s.worldTransform.array,l=s.geometry;ne.multiplyAffine(Mu,t.viewMatrix.array,o),(r&&!l.boundingBox||!this.isFrustumCulled(s,t,Mu))&&i.add(s,s.material.transparent||n)}s._children.length>0&&this._doUpdateRenderList(s,t,n,i,r)}},isFrustumCulled:function(){var e=new xn,t=new ue;return function(n,i,r){var a=n.boundingBox;if(a||(n.skeleton&&n.skeleton.boundingBox?a=n.skeleton.boundingBox:a=n.geometry.boundingBox),!a)return!1;if(t.array=r,e.transformFrom(a,t),n.castShadow&&this.viewBoundingBoxLastFrame.union(e),n.frustumCulling){if(!e.intersectBoundingBox(i.frustum.boundingBox))return!0;t.array=i.projectionMatrix.array,e.max.array[2]>0&&e.min.array[2]<0&&(e.max.array[2]=-1e-20),e.applyProjection(t);var s=e.min.array,o=e.max.array;if(o[0]<-1||s[0]>1||o[1]<-1||s[1]>1||o[2]<-1||s[2]>1)return!0}return!1}}(),_updateLightUniforms:function(){var e=this.lights;e.sort(Mg);var t=this._lightUniforms;for(var n in t)for(var i in t[n])t[n][i].value.length=0;for(var r=0;r<e.length;r++){var a=e[r];if(!a.invisible){var n=a.group;for(var i in a.uniformTemplates){var s=a.uniformTemplates[i],o=s.value(a);if(o!=null){t[n]||(t[n]={}),t[n][i]||(t[n][i]={type:"",value:[]});var l=t[n][i];switch(l.type=s.type+"v",s.type){case"1i":case"1f":case"t":l.value.push(o);break;case"2f":case"3f":case"4f":for(var c=0;c<o.length;c++)l.value.push(o[c]);break;default:console.error("Unkown light uniform type "+s.type)}}}}}},getLightGroups:function(){var e=[];for(var t in this._lightNumber)e.push(t);return e},getNumberChangedLightGroups:function(){var e=[];for(var t in this._lightNumber)this.isLightNumberChanged(t)&&e.push(t);return e},isLightNumberChanged:function(e){var t=this._previousLightNumber,n=this._lightNumber;for(var i in n[e])if(!t[e]||n[e][i]!==t[e][i])return!0;for(var i in t[e])if(!n[e]||n[e][i]!==t[e][i])return!0;return!1},getLightsNumbers:function(e){return this._lightNumber[e]},getProgramKey:function(e){return this._lightProgramKeys[e]},setLightUniforms:function(){function e(t,n,i){for(var r in t){var a=t[r];if(a.type==="tv"){if(!n.hasUniform(r))continue;for(var s=[],o=0;o<a.value.length;o++){var l=a.value[o],c=n.takeCurrentTextureSlot(i,l);s.push(c)}n.setUniform(i.gl,"1iv",r,s)}else n.setUniform(i.gl,a.type,r,a.value)}}return function(t,n,i){e(this._lightUniforms[n],t,i),e(this.shadowUniforms,t,i)}}(),dispose:function(){this.material=null,this._opaqueList=[],this._transparentList=[],this.lights=[],this._lightUniforms={},this._lightNumber={},this._nodeRepository={}}});function Mg(e,t){if(t.castShadow&&!e.castShadow)return!0}var ao=Hs.isPowerOfTwo,wg=["px","nx","py","ny","pz","nz"],Wr=oe.extend(function(){return{image:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},pixels:{px:null,nx:null,py:null,ny:null,pz:null,nz:null},mipmaps:[]}},{textureType:"textureCube",update:function(e){var t=e.gl;t.bindTexture(t.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),this.updateCommon(e);var n=this.format,i=this.type;t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_S,this.getAvailableWrapS()),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_WRAP_T,this.getAvailableWrapT()),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MAG_FILTER,this.getAvailableMagFilter()),t.texParameteri(t.TEXTURE_CUBE_MAP,t.TEXTURE_MIN_FILTER,this.getAvailableMinFilter());var r=e.getGLExtension("EXT_texture_filter_anisotropic");if(r&&this.anisotropic>1&&t.texParameterf(t.TEXTURE_CUBE_MAP,r.TEXTURE_MAX_ANISOTROPY_EXT,this.anisotropic),i===36193){var a=e.getGLExtension("OES_texture_half_float");a||(i=ee.FLOAT)}if(this.mipmaps.length)for(var s=this.width,o=this.height,l=0;l<this.mipmaps.length;l++){var c=this.mipmaps[l];this._updateTextureData(t,c,l,s,o,n,i),s/=2,o/=2}else this._updateTextureData(t,this,0,this.width,this.height,n,i),!this.NPOT&&this.useMipmap&&t.generateMipmap(t.TEXTURE_CUBE_MAP);t.bindTexture(t.TEXTURE_CUBE_MAP,null)},_updateTextureData:function(e,t,n,i,r,a,s){for(var o=0;o<6;o++){var l=wg[o],c=t.image&&t.image[l];c?e.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+o,n,a,a,s,c):e.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+o,n,a,i,r,0,a,s,t.pixels&&t.pixels[l])}},generateMipmap:function(e){var t=e.gl;this.useMipmap&&!this.NPOT&&(t.bindTexture(t.TEXTURE_CUBE_MAP,this._cache.get("webgl_texture")),t.generateMipmap(t.TEXTURE_CUBE_MAP))},bind:function(e){e.gl.bindTexture(e.gl.TEXTURE_CUBE_MAP,this.getWebGLTexture(e))},unbind:function(e){e.gl.bindTexture(e.gl.TEXTURE_CUBE_MAP,null)},isPowerOfTwo:function(){return this.image.px?ao(this.image.px.width)&&ao(this.image.px.height):ao(this.width)&&ao(this.height)},isRenderable:function(){return this.image.px?ra(this.image.px)&&ra(this.image.nx)&&ra(this.image.py)&&ra(this.image.ny)&&ra(this.image.pz)&&ra(this.image.nz):!!(this.width&&this.height)},load:function(e,t){var n=0,i=this;return Nt.each(e,function(r,a){var s=lt.createImage();t&&(s.crossOrigin=t),s.onload=function(){n--,n===0&&(i.dirty(),i.trigger("success",i))},s.onerror=function(){n--},n++,s.src=r,i.image[a]=s}),this}});Object.defineProperty(Wr.prototype,"width",{get:function(){return this.image&&this.image.px?this.image.px.width:this._width},set:function(e){this.image&&this.image.px?console.warn("Texture from image can't set width"):(this._width!==e&&this.dirty(),this._width=e)}});Object.defineProperty(Wr.prototype,"height",{get:function(){return this.image&&this.image.px?this.image.px.height:this._height},set:function(e){this.image&&this.image.px?console.warn("Texture from image can't set height"):(this._height!==e&&this.dirty(),this._height=e)}});function ra(e){return e.width>0&&e.height>0}var Ag=Ba.extend({fov:50,aspect:1,near:.1,far:2e3},{updateProjectionMatrix:function(){var e=this.fov/180*Math.PI;this.projectionMatrix.perspective(e,this.aspect,this.near,this.far)},decomposeProjectionMatrix:function(){var e=this.projectionMatrix.array,t=Math.atan(1/e[5])*2;this.fov=t/Math.PI*180,this.aspect=e[5]/e[0],this.near=e[14]/(e[10]-1),this.far=e[14]/(e[10]+1)},clone:function(){var e=Ba.prototype.clone.call(this);return e.fov=this.fov,e.aspect=this.aspect,e.near=this.near,e.far=this.far,e}});const qt=Ag;var so="framebuffer",Ci="renderbuffer",wu=Ci+"_width",Au=Ci+"_height",Yl=Ci+"_attached",ql="depthtexture_attached",Er=ee.FRAMEBUFFER,ls=ee.RENDERBUFFER,gs=ee.DEPTH_ATTACHMENT,hp=ee.COLOR_ATTACHMENT0,It=an.extend({depthBuffer:!0,viewport:null,_width:0,_height:0,_textures:null,_boundRenderer:null},function(){this._cache=new Ua,this._textures={}},{getTextureWidth:function(){return this._width},getTextureHeight:function(){return this._height},bind:function(e){if(e.__currentFrameBuffer){if(e.__currentFrameBuffer===this)return;console.warn("Renderer already bound with another framebuffer. Unbind it first")}e.__currentFrameBuffer=this;var t=e.gl;t.bindFramebuffer(Er,this._getFrameBufferGL(e)),this._boundRenderer=e;var n=this._cache;n.put("viewport",e.viewport);var i=!1,r,a;for(var s in this._textures){i=!0;var o=this._textures[s];o&&(r=o.texture.width,a=o.texture.height,this._doAttach(e,o.texture,s,o.target))}this._width=r,this._height=a,!i&&this.depthBuffer&&console.error("Must attach texture before bind, or renderbuffer may have incorrect width and height."),this.viewport?e.setViewport(this.viewport):e.setViewport(0,0,r,a,1);var l=n.get("attached_textures");if(l){for(var s in l)if(!this._textures[s]){var c=l[s];this._doDetach(t,s,c)}}if(!n.get(ql)&&this.depthBuffer){n.miss(Ci)&&n.put(Ci,t.createRenderbuffer());var h=n.get(Ci);(r!==n.get(wu)||a!==n.get(Au))&&(t.bindRenderbuffer(ls,h),t.renderbufferStorage(ls,t.DEPTH_COMPONENT16,r,a),n.put(wu,r),n.put(Au,a),t.bindRenderbuffer(ls,null)),n.get(Yl)||(t.framebufferRenderbuffer(Er,gs,ls,h),n.put(Yl,!0))}},unbind:function(e){e.__currentFrameBuffer=null;var t=e.gl;t.bindFramebuffer(Er,null),this._boundRenderer=null,this._cache.use(e.__uid__);var n=this._cache.get("viewport");n&&e.setViewport(n),this.updateMipmap(e)},updateMipmap:function(e){var t=e.gl;for(var n in this._textures){var i=this._textures[n];if(i){var r=i.texture;if(!r.NPOT&&r.useMipmap&&r.minFilter===oe.LINEAR_MIPMAP_LINEAR){var a=r.textureType==="textureCube"?ee.TEXTURE_CUBE_MAP:ee.TEXTURE_2D;t.bindTexture(a,r.getWebGLTexture(e)),t.generateMipmap(a),t.bindTexture(a,null)}}}},checkStatus:function(e){return e.checkFramebufferStatus(Er)},_getFrameBufferGL:function(e){var t=this._cache;return t.use(e.__uid__),t.miss(so)&&t.put(so,e.gl.createFramebuffer()),t.get(so)},attach:function(e,t,n){if(!e.width)throw new Error("The texture attached to color buffer is not a valid.");t=t||hp,n=n||ee.TEXTURE_2D;var i=this._boundRenderer,r=i&&i.gl,a;if(r){var s=this._cache;s.use(i.__uid__),a=s.get("attached_textures")}var o=this._textures[t];if(!(o&&o.target===n&&o.texture===e&&a&&a[t]!=null)){var l=!0;i&&(l=this._doAttach(i,e,t,n),this.viewport||i.setViewport(0,0,e.width,e.height,1)),l&&(this._textures[t]=this._textures[t]||{},this._textures[t].texture=e,this._textures[t].target=n)}},_doAttach:function(e,t,n,i){var r=e.gl,a=t.getWebGLTexture(e),s=this._cache.get("attached_textures");if(s&&s[n]){var o=s[n];if(o.texture===t&&o.target===i)return}n=+n;var l=!0;if(n===gs||n===ee.DEPTH_STENCIL_ATTACHMENT){var c=e.getGLExtension("WEBGL_depth_texture");if(c||(console.error("Depth texture is not supported by the browser"),l=!1),t.format!==ee.DEPTH_COMPONENT&&t.format!==ee.DEPTH_STENCIL&&(console.error("The texture attached to depth buffer is not a valid."),l=!1),l){var h=this._cache.get(Ci);h&&(r.framebufferRenderbuffer(Er,gs,ls,null),r.deleteRenderbuffer(h),this._cache.put(Ci,!1)),this._cache.put(Yl,!1),this._cache.put(ql,!0)}}return r.framebufferTexture2D(Er,n,i,a,0),s||(s={},this._cache.put("attached_textures",s)),s[n]=s[n]||{},s[n].texture=t,s[n].target=i,l},_doDetach:function(e,t,n){e.framebufferTexture2D(Er,t,n,null,0);var i=this._cache.get("attached_textures");i&&i[t]&&(i[t]=null),(t===gs||t===ee.DEPTH_STENCIL_ATTACHMENT)&&this._cache.put(ql,!1)},detach:function(e,t){if(this._textures[e]=null,this._boundRenderer){var n=this._cache;n.use(this._boundRenderer.__uid__),this._doDetach(this._boundRenderer.gl,e,t)}},dispose:function(e){var t=e.gl,n=this._cache;n.use(e.__uid__);var i=n.get(Ci);i&&t.deleteRenderbuffer(i);var r=n.get(so);r&&t.deleteFramebuffer(r),n.deleteContext(e.__uid__),this._textures={}}});It.DEPTH_ATTACHMENT=gs;It.COLOR_ATTACHMENT0=hp;It.STENCIL_ATTACHMENT=ee.STENCIL_ATTACHMENT;It.DEPTH_STENCIL_ATTACHMENT=ee.DEPTH_STENCIL_ATTACHMENT;var bg=["px","nx","py","ny","pz","nz"],gh=an.extend(function(){var e={position:new $,far:1e3,near:.1,texture:null,shadowMapPass:null},t=e._cameras={px:new qt({fov:90}),nx:new qt({fov:90}),py:new qt({fov:90}),ny:new qt({fov:90}),pz:new qt({fov:90}),nz:new qt({fov:90})};return t.px.lookAt($.POSITIVE_X,$.NEGATIVE_Y),t.nx.lookAt($.NEGATIVE_X,$.NEGATIVE_Y),t.py.lookAt($.POSITIVE_Y,$.POSITIVE_Z),t.ny.lookAt($.NEGATIVE_Y,$.NEGATIVE_Z),t.pz.lookAt($.POSITIVE_Z,$.NEGATIVE_Y),t.nz.lookAt($.NEGATIVE_Z,$.NEGATIVE_Y),e._frameBuffer=new It,e},{getCamera:function(e){return this._cameras[e]},render:function(e,t,n){var i=e.gl;n||t.update();for(var r=this.texture.width,a=2*Math.atan(r/(r-.5))/Math.PI*180,s=0;s<6;s++){var o=bg[s],l=this._cameras[o];if($.copy(l.position,this.position),l.far=this.far,l.near=this.near,l.fov=a,this.shadowMapPass){l.update();var c=t.getBoundingBox();c.applyTransform(l.viewMatrix),t.viewBoundingBoxLastFrame.copy(c),this.shadowMapPass.render(e,t,l,!0)}this._frameBuffer.attach(this.texture,i.COLOR_ATTACHMENT0,i.TEXTURE_CUBE_MAP_POSITIVE_X+s),this._frameBuffer.bind(e),e.render(t,l,!0),this._frameBuffer.unbind(e)}},dispose:function(e){this._frameBuffer.dispose(e)}}),Cg=je.extend({dynamic:!1,widthSegments:1,heightSegments:1},function(){this.build()},{build:function(){for(var e=this.heightSegments,t=this.widthSegments,n=this.attributes,i=[],r=[],a=[],s=[],o=0;o<=e;o++)for(var l=o/e,c=0;c<=t;c++){var h=c/t;if(i.push([2*h-1,2*l-1,0]),r&&r.push([h,l]),a&&a.push([0,0,1]),c<t&&o<e){var u=c+o*(t+1);s.push([u,u+1,u+t+1]),s.push([u+t+1,u+1,u+t+2])}}n.position.fromArray(i),n.texcoord0.fromArray(r),n.normal.fromArray(a),this.initIndicesFromArray(s),this.boundingBox=new xn,this.boundingBox.min.set(-1,-1,0),this.boundingBox.max.set(1,1,0)}});const gl=Cg;var Ct=new ue,Rg=je.extend({dynamic:!1,widthSegments:1,heightSegments:1,depthSegments:1,inside:!1},function(){this.build()},{build:function(){var e={px:aa("px",this.depthSegments,this.heightSegments),nx:aa("nx",this.depthSegments,this.heightSegments),py:aa("py",this.widthSegments,this.depthSegments),ny:aa("ny",this.widthSegments,this.depthSegments),pz:aa("pz",this.widthSegments,this.heightSegments),nz:aa("nz",this.widthSegments,this.heightSegments)},t=["position","texcoord0","normal"],n=0,i=0;for(var r in e)n+=e[r].vertexCount,i+=e[r].indices.length;for(var a=0;a<t.length;a++)this.attributes[t[a]].init(n);this.indices=new lt.Uint16Array(i);var s=0,o=0;for(var r in e){for(var l=e[r],a=0;a<t.length;a++)for(var c=t[a],h=l.attributes[c].value,u=l.attributes[c].size,f=c==="normal",d=0;d<h.length;d++){var p=h[d];this.inside&&f&&(p=-p),this.attributes[c].value[d+u*o]=p}for(var g=l.indices.length,d=0;d<l.indices.length;d++)this.indices[d+s]=o+l.indices[this.inside?g-d-1:d];s+=l.indices.length,o+=l.vertexCount}this.boundingBox=new xn,this.boundingBox.max.set(1,1,1),this.boundingBox.min.set(-1,-1,-1)}});function aa(e,t,n){Ct.identity();var i=new gl({widthSegments:t,heightSegments:n});switch(e){case"px":ue.translate(Ct,Ct,$.POSITIVE_X),ue.rotateY(Ct,Ct,Math.PI/2);break;case"nx":ue.translate(Ct,Ct,$.NEGATIVE_X),ue.rotateY(Ct,Ct,-Math.PI/2);break;case"py":ue.translate(Ct,Ct,$.POSITIVE_Y),ue.rotateX(Ct,Ct,-Math.PI/2);break;case"ny":ue.translate(Ct,Ct,$.NEGATIVE_Y),ue.rotateX(Ct,Ct,Math.PI/2);break;case"pz":ue.translate(Ct,Ct,$.POSITIVE_Z);break;case"nz":ue.translate(Ct,Ct,$.NEGATIVE_Z),ue.rotateY(Ct,Ct,Math.PI);break}return i.applyTransform(Ct),i}const up=Rg,Lg=`@export clay.skybox.vertex
#define SHADER_NAME skybox
uniform mat4 world : WORLD;
uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;
attribute vec3 position : POSITION;
varying vec3 v_WorldPosition;
void main()
{
 v_WorldPosition = (world * vec4(position, 1.0)).xyz;
 gl_Position = worldViewProjection * vec4(position, 1.0);
}
@end
@export clay.skybox.fragment
#define PI 3.1415926
uniform mat4 viewInverse : VIEWINVERSE;
#ifdef EQUIRECTANGULAR
uniform sampler2D environmentMap;
#else
uniform samplerCube environmentMap;
#endif
uniform float lod: 0.0;
varying vec3 v_WorldPosition;
@import clay.util.rgbm
@import clay.util.srgb
@import clay.util.ACES
void main()
{
 vec3 eyePos = viewInverse[3].xyz;
 vec3 V = normalize(v_WorldPosition - eyePos);
#ifdef EQUIRECTANGULAR
 float phi = acos(V.y);
 float theta = atan(-V.x, V.z) + PI * 0.5;
 vec2 uv = vec2(theta / 2.0 / PI, phi / PI);
 vec4 texel = decodeHDR(texture2D(environmentMap, fract(uv)));
#else
 #if defined(LOD) || defined(SUPPORT_TEXTURE_LOD)
 vec4 texel = decodeHDR(textureCubeLodEXT(environmentMap, V, lod));
 #else
 vec4 texel = decodeHDR(textureCube(environmentMap, V));
 #endif
#endif
#ifdef SRGB_DECODE
 texel = sRGBToLinear(texel);
#endif
#ifdef TONEMAPPING
 texel.rgb = ACESToneMapping(texel.rgb);
#endif
#ifdef SRGB_ENCODE
 texel = linearTosRGB(texel);
#endif
 gl_FragColor = encodeHDR(vec4(texel.rgb, 1.0));
}
@end`;le.import(Lg);var Pg=zr.extend(function(){var e=new le({vertex:le.source("clay.skybox.vertex"),fragment:le.source("clay.skybox.fragment")}),t=new Wn({shader:e,depthMask:!1});return{scene:null,geometry:new up,material:t,environmentMap:null,culling:!1,_dummyCamera:new qt}},function(){var e=this.scene;e&&this.attachScene(e),this.environmentMap&&this.setEnvironmentMap(this.environmentMap)},{attachScene:function(e){this.scene&&this.detachScene(),e.skybox=this,this.scene=e,e.on("beforerender",this._beforeRenderScene,this)},detachScene:function(){this.scene&&(this.scene.off("beforerender",this._beforeRenderScene),this.scene.skybox=null),this.scene=null},dispose:function(e){this.detachScene(),this.geometry.dispose(e)},setEnvironmentMap:function(e){e.textureType==="texture2D"?(this.material.define("EQUIRECTANGULAR"),e.minFilter=oe.LINEAR):this.material.undefine("EQUIRECTANGULAR"),this.material.set("environmentMap",e)},getEnvironmentMap:function(){return this.material.get("environmentMap")},_beforeRenderScene:function(e,t,n){this.renderSkybox(e,n)},renderSkybox:function(e,t){var n=this._dummyCamera;n.aspect=e.getViewportAspect(),n.fov=t.fov||50,n.updateProjectionMatrix(),ue.invert(n.invProjectionMatrix,n.projectionMatrix),n.worldTransform.copy(t.worldTransform),n.viewMatrix.copy(t.viewMatrix),this.position.copy(t.getWorldPosition()),this.update(),e.gl.disable(e.gl.BLEND),this.material.get("lod")>0?this.material.define("fragment","LOD"):this.material.undefine("fragment","LOD"),e.renderPass([this],n)}});const bs=Pg;var Dg=542327876,Ng=131072,Ig=512,Og=4;function _h(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}var Ug=31,Fg=_h("DXT1"),Bg=_h("DXT3"),zg=_h("DXT5"),Gg=0,Hg=1,Vg=2,kg=3,Wg=4,Xg=7,Yg=20,qg=21,jg=28,Zg={parse:function(e,t){var n=new Int32Array(e,0,Ug);if(n[Gg]!==Dg||!n(Yg)&Og)return null;var i=n(qg),r=n[Wg],a=n[kg],s=n[jg]&Ig,o=n[Vg]&Ng,l,c;switch(i){case Fg:l=8,c=oe.COMPRESSED_RGB_S3TC_DXT1_EXT;break;case Bg:l=16,c=oe.COMPRESSED_RGBA_S3TC_DXT3_EXT;break;case zg:l=16,c=oe.COMPRESSED_RGBA_S3TC_DXT5_EXT;break;default:return null}var h=n[Hg]+4,u=s?6:1,f=1;o&&(f=Math.max(1,n[Xg]));for(var d=[],p=0;p<u;p++){var g=r,v=a;d[p]=new We({width:g,height:v,format:c});for(var m=[],y=0;y<f;y++){var _=Math.max(4,g)/4*Math.max(4,v)/4*l,x=new Uint8Array(e,h,_);h+=_,g*=.5,v*=.5,m[y]=x}d[p].pixels=m[0],o&&(d[p].mipmaps=m)}if(t)t.width=d[0].width,t.height=d[0].height,t.format=d[0].format,t.pixels=d[0].pixels,t.mipmaps=d[0].mipmaps;else return d[0]}},Wo=String.fromCharCode,Kg=8,$g=32767;function Jg(e,t,n,i){if(e[3]>0){var r=Math.pow(2,e[3]-128-8+i);t[n+0]=e[0]*r,t[n+1]=e[1]*r,t[n+2]=e[2]*r}else t[n+0]=0,t[n+1]=0,t[n+2]=0;return t[n+3]=1,t}function Qg(e,t,n){for(var i="",r=t;r<n;r++)i+=Wo(e[r]);return i}function e_(e,t){t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3]}function bu(e,t,n,i){for(var r=0,a=0,s=i;s>0;)if(e[a][0]=t[n++],e[a][1]=t[n++],e[a][2]=t[n++],e[a][3]=t[n++],e[a][0]===1&&e[a][1]===1&&e[a][2]===1){for(var o=e[a][3]<<r>>>0;o>0;o--)e_(e[a-1],e[a]),a++,s--;r+=8}else a++,s--,r=0;return n}function t_(e,t,n,i){if(i<Kg|i>$g)return bu(e,t,n,i);var r=t[n++];if(r!=2)return bu(e,t,n-1,i);if(e[0][1]=t[n++],e[0][2]=t[n++],r=t[n++],(e[0][2]<<8>>>0|r)>>>0!==i)return null;for(var r=0;r<4;r++)for(var a=0;a<i;){var s=t[n++];if(s>128){s=(s&127)>>>0;for(var o=t[n++];s--;)e[a++][r]=o}else for(;s--;)e[a++][r]=t[n++]}return n}var n_={parseRGBE:function(e,t,n){n==null&&(n=0);var i=new Uint8Array(e),r=i.length;if(Qg(i,0,2)==="#?"){for(var a=2;a<r&&!(Wo(i[a])===`
`&&Wo(i[a+1])===`
`);a++);if(!(a>=r)){a+=2;for(var s="";a<r;a++){var o=Wo(i[a]);if(o===`
`)break;s+=o}var l=s.split(" "),c=parseInt(l[1]),h=parseInt(l[3]);if(!(!h||!c)){for(var u=a+1,f=[],d=0;d<h;d++){f[d]=[];for(var p=0;p<4;p++)f[d][p]=0}for(var g=new Float32Array(h*c*4),v=0,m=0;m<c;m++){var u=t_(f,i,u,h);if(!u)return null;for(var d=0;d<h;d++)Jg(f[d],g,v,n),v+=4}return t||(t=new We),t.width=h,t.height=c,t.pixels=g,t.type=oe.FLOAT,t}}}},parseRGBEFromPNG:function(e){}};const i_=n_;var Xo={loadTexture:function(e,t,n,i){var r;if(typeof t=="function"?(n=t,i=n,t={}):t=t||{},typeof e=="string"){if(e.match(/.hdr$/)||t.fileType==="hdr")return r=new We({width:0,height:0,sRGB:!1}),Xo._fetchTexture(e,function(a){i_.parseRGBE(a,r,t.exposure),r.dirty(),n&&n(r)},i),r;e.match(/.dds$/)||t.fileType==="dds"?(r=new We({width:0,height:0}),Xo._fetchTexture(e,function(a){Zg.parse(a,r),r.dirty(),n&&n(r)},i)):(r=new We,r.load(e),r.success(n),r.error(i))}else typeof e=="object"&&typeof e.px<"u"&&(r=new Wr,r.load(e),r.success(n),r.error(i));return r},loadPanorama:function(e,t,n,i,r,a){var s=this;typeof i=="function"?(r=i,a=r,i={}):i=i||{},Xo.loadTexture(t,i,function(o){o.flipY=i.flipY||!1,s.panoramaToCubeMap(e,o,n,i),o.dispose(e),r&&r(n)},a)},panoramaToCubeMap:function(e,t,n,i){var r=new gh,a=new bs({scene:new dr});return a.setEnvironmentMap(t),i=i||{},i.encodeRGBM&&a.material.define("fragment","RGBM_ENCODE"),n.sRGB=t.sRGB,r.texture=n,r.render(e,a.scene),r.texture=null,r.dispose(e),n},heightToNormal:function(e,t){var n=document.createElement("canvas"),i=n.width=e.width,r=n.height=e.height,a=n.getContext("2d");a.drawImage(e,0,0,i,r),t=t||!1;for(var s=a.getImageData(0,0,i,r),o=a.createImageData(i,r),l=0;l<s.data.length;l+=4){if(t){var c=s.data[l],h=s.data[l+1],u=s.data[l+2],f=Math.abs(c-h)+Math.abs(h-u);if(f>20)return console.warn("Given image is not a height map"),e}var d,p,g,v;l%(i*4)===0?(d=s.data[l],g=s.data[l+4]):l%(i*4)===(i-1)*4?(d=s.data[l-4],g=s.data[l]):(d=s.data[l-4],g=s.data[l+4]),l<i*4?(p=s.data[l],v=s.data[l+i*4]):l>i*(r-1)*4?(p=s.data[l-i*4],v=s.data[l]):(p=s.data[l-i*4],v=s.data[l+i*4]),o.data[l]=d-g+127,o.data[l+1]=p-v+127,o.data[l+2]=255,o.data[l+3]=255}return a.putImageData(o,0,0),n},isHeightImage:function(e,t,n){if(!e||!e.width||!e.height)return!1;var i=document.createElement("canvas"),r=i.getContext("2d"),a=t||32;n=n||20,i.width=i.height=a,r.drawImage(e,0,0,a,a);for(var s=r.getImageData(0,0,a,a),o=0;o<s.data.length;o+=4){var l=s.data[o],c=s.data[o+1],h=s.data[o+2],u=Math.abs(l-c)+Math.abs(c-h);if(u>n)return!1}return!0},_fetchTexture:function(e,t,n){lt.request.get({url:e,responseType:"arraybuffer",onload:t,onerror:n})},createChessboard:function(e,t,n,i){e=e||512,t=t||64,n=n||"black",i=i||"white";var r=Math.ceil(e/t),a=document.createElement("canvas");a.width=e,a.height=e;var s=a.getContext("2d");s.fillStyle=i,s.fillRect(0,0,e,e),s.fillStyle=n;for(var o=0;o<r;o++)for(var l=0;l<r;l++){var c=l%2?o%2:o%2-1;c&&s.fillRect(o*t,l*t,t,t)}var h=new We({image:a,anisotropic:8});return h},createBlank:function(e){var t=document.createElement("canvas");t.width=1,t.height=1;var n=t.getContext("2d");n.fillStyle=e,n.fillRect(0,0,1,1);var i=new We({image:t});return i}};const Vr=Xo;var Yc=["mousedown","mouseup","mousemove","mouseover","mouseout","click","dblclick","contextmenu"];function qc(e){return"_on"+e}var jc=function(e){var t=this;this._texture=new We({anisotropic:32,flipY:!1,surface:this,dispose:function(n){t.dispose(),We.prototype.dispose.call(this,n)}}),Yc.forEach(function(n){this[qc(n)]=function(i){i.triangle&&this._meshes.forEach(function(r){this.dispatchEvent(n,r,i.triangle,i.point)},this)}},this),this._meshes=[],e&&this.setECharts(e),this.onupdate=null};jc.prototype={constructor:jc,getTexture:function(){return this._texture},setECharts:function(e){this._chart=e;var t=e.getDom();if(!(t instanceof HTMLCanvasElement))console.error("ECharts must init on canvas if it is used as texture."),t=document.createElement("canvas");else{var n=this,i=e.getZr(),r=i.__oldRefreshImmediately||i.refreshImmediately;i.refreshImmediately=function(){r.call(this),n._texture.dirty(),n.onupdate&&n.onupdate()},i.__oldRefreshImmediately=r}this._texture.image=t,this._texture.dirty(),this.onupdate&&this.onupdate()},dispatchEvent:function(){var e=new $,t=new $,n=new $,i=new In,r=new In,a=new In,s=new In,o=new $;return function(l,c,h,u){var f=c.geometry,d=f.attributes.position,p=f.attributes.texcoord0,g=$.dot,v=$.cross;d.get(h[0],e.array),d.get(h[1],t.array),d.get(h[2],n.array),p.get(h[0],i.array),p.get(h[1],r.array),p.get(h[2],a.array),v(o,t,n);var m=g(e,o),y=g(u,o)/m;v(o,n,e);var _=g(u,o)/m;v(o,e,t);var x=g(u,o)/m;In.scale(s,i,y),In.scaleAndAdd(s,s,r,_),In.scaleAndAdd(s,s,a,x);var A=s.x*this._chart.getWidth(),E=s.y*this._chart.getHeight();this._chart.getZr().handler.dispatch(l,{zrX:A,zrY:E})}}(),attachToMesh:function(e){this._meshes.indexOf(e)>=0||(Yc.forEach(function(t){e.on(t,this[qc(t)],this)},this),this._meshes.push(e))},detachFromMesh:function(e){var t=this._meshes.indexOf(e);t>=0&&this._meshes.splice(t,1),Yc.forEach(function(n){e.off(n,this[qc(n)])},this)},dispose:function(){this._meshes.forEach(function(e){this.detachFromMesh(e)},this)}};var r_=Ba.extend({left:-1,right:1,near:-1,far:1,top:1,bottom:-1},{updateProjectionMatrix:function(){this.projectionMatrix.ortho(this.left,this.right,this.bottom,this.top,this.near,this.far)},decomposeProjectionMatrix:function(){var e=this.projectionMatrix.array;this.left=(-1-e[12])/e[0],this.right=(1-e[12])/e[0],this.top=(1-e[13])/e[5],this.bottom=(-1-e[13])/e[5],this.near=-(-1-e[14])/e[10],this.far=-(1-e[14])/e[10]},clone:function(){var e=Ba.prototype.clone.call(this);return e.left=this.left,e.right=this.right,e.near=this.near,e.far=this.far,e.top=this.top,e.bottom=this.bottom,e}});const za=r_,a_=`
@export clay.compositor.vertex
uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;
attribute vec3 position : POSITION;
attribute vec2 texcoord : TEXCOORD_0;
varying vec2 v_Texcoord;
void main()
{
 v_Texcoord = texcoord;
 gl_Position = worldViewProjection * vec4(position, 1.0);
}
@end`;le.import(a_);var s_=new gl,Cu=new zr({geometry:s_,frustumCulling:!1}),o_=new za,l_=an.extend(function(){return{fragment:"",outputs:null,material:null,blendWithPrevious:!1,clearColor:!1,clearDepth:!0}},function(){var e=new le(le.source("clay.compositor.vertex"),this.fragment),t=new Wn({shader:e});t.enableTexturesAll(),this.material=t},{setUniform:function(e,t){this.material.setUniform(e,t)},getUniform:function(e){var t=this.material.uniforms[e];if(t)return t.value},attachOutput:function(e,t){this.outputs||(this.outputs={}),t=t||ee.COLOR_ATTACHMENT0,this.outputs[t]=e},detachOutput:function(e){for(var t in this.outputs)this.outputs[t]===e&&(this.outputs[t]=null)},bind:function(e,t){if(this.outputs)for(var n in this.outputs){var i=this.outputs[n];i&&t.attach(i,n)}t&&t.bind(e)},unbind:function(e,t){t.unbind(e)},render:function(e,t){var n=e.gl;if(t){this.bind(e,t);var i=e.getGLExtension("EXT_draw_buffers");if(i&&this.outputs){var r=[];for(var a in this.outputs)a=+a,a>=n.COLOR_ATTACHMENT0&&a<=n.COLOR_ATTACHMENT0+8&&r.push(a);i.drawBuffersEXT(r)}}this.trigger("beforerender",this,e);var s=this.clearDepth?n.DEPTH_BUFFER_BIT:0;if(n.depthMask(!0),this.clearColor){s=s|n.COLOR_BUFFER_BIT,n.colorMask(!0,!0,!0,!0);var o=this.clearColor;Array.isArray(o)&&n.clearColor(o[0],o[1],o[2],o[3])}n.clear(s),this.blendWithPrevious?(n.enable(n.BLEND),this.material.transparent=!0):(n.disable(n.BLEND),this.material.transparent=!1),this.renderQuad(e),this.trigger("afterrender",this,e),t&&this.unbind(e,t)},renderQuad:function(e){Cu.material=this.material,e.renderPass([Cu],o_)},dispose:function(e){}});const Bt=l_,c_=`#define SAMPLE_NUMBER 1024
#define PI 3.14159265358979
uniform sampler2D normalDistribution;
uniform vec2 viewportSize : [512, 256];
const vec3 N = vec3(0.0, 0.0, 1.0);
const float fSampleNumber = float(SAMPLE_NUMBER);
vec3 importanceSampleNormal(float i, float roughness, vec3 N) {
 vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;
 vec3 upVector = abs(N.y) > 0.999 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 1.0, 0.0);
 vec3 tangentX = normalize(cross(N, upVector));
 vec3 tangentZ = cross(N, tangentX);
 return normalize(tangentX * H.x + N * H.y + tangentZ * H.z);
}
float G_Smith(float roughness, float NoV, float NoL) {
 float k = roughness * roughness / 2.0;
 float G1V = NoV / (NoV * (1.0 - k) + k);
 float G1L = NoL / (NoL * (1.0 - k) + k);
 return G1L * G1V;
}
void main() {
 vec2 uv = gl_FragCoord.xy / viewportSize;
 float NoV = uv.x;
 float roughness = uv.y;
 vec3 V;
 V.x = sqrt(1.0 - NoV * NoV);
 V.y = 0.0;
 V.z = NoV;
 float A = 0.0;
 float B = 0.0;
 for (int i = 0; i < SAMPLE_NUMBER; i++) {
 vec3 H = importanceSampleNormal(float(i) / fSampleNumber, roughness, N);
 vec3 L = reflect(-V, H);
 float NoL = clamp(L.z, 0.0, 1.0);
 float NoH = clamp(H.z, 0.0, 1.0);
 float VoH = clamp(dot(V, H), 0.0, 1.0);
 if (NoL > 0.0) {
 float G = G_Smith(roughness, NoV, NoL);
 float G_Vis = G * VoH / (NoH * NoV);
 float Fc = pow(1.0 - VoH, 5.0);
 A += (1.0 - Fc) * G_Vis;
 B += Fc * G_Vis;
 }
 }
 gl_FragColor = vec4(vec2(A, B) / fSampleNumber, 0.0, 1.0);
}
`,h_=`#define SHADER_NAME prefilter
#define SAMPLE_NUMBER 1024
#define PI 3.14159265358979
uniform mat4 viewInverse : VIEWINVERSE;
uniform samplerCube environmentMap;
uniform sampler2D normalDistribution;
uniform float roughness : 0.5;
varying vec2 v_Texcoord;
varying vec3 v_WorldPosition;
@import clay.util.rgbm
vec3 importanceSampleNormal(float i, float roughness, vec3 N) {
 vec3 H = texture2D(normalDistribution, vec2(roughness, i)).rgb;
 vec3 upVector = abs(N.y) > 0.999 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 1.0, 0.0);
 vec3 tangentX = normalize(cross(N, upVector));
 vec3 tangentZ = cross(N, tangentX);
 return normalize(tangentX * H.x + N * H.y + tangentZ * H.z);
}
void main() {
 vec3 eyePos = viewInverse[3].xyz;
 vec3 V = normalize(v_WorldPosition - eyePos);
 vec3 N = V;
 vec3 prefilteredColor = vec3(0.0);
 float totalWeight = 0.0;
 float fMaxSampleNumber = float(SAMPLE_NUMBER);
 for (int i = 0; i < SAMPLE_NUMBER; i++) {
 vec3 H = importanceSampleNormal(float(i) / fMaxSampleNumber, roughness, N);
 vec3 L = reflect(-V, H);
 float NoL = clamp(dot(N, L), 0.0, 1.0);
 if (NoL > 0.0) {
 prefilteredColor += decodeHDR(textureCube(environmentMap, L)).rgb * NoL;
 totalWeight += NoL;
 }
 }
 gl_FragColor = encodeHDR(vec4(prefilteredColor / totalWeight, 1.0));
}
`;var ui={},jl=["px","nx","py","ny","pz","nz"];ui.prefilterEnvironmentMap=function(e,t,n,i,r){(!r||!i)&&(i=ui.generateNormalDistribution(),r=ui.integrateBRDF(e,i)),n=n||{};var a=n.width||64,s=n.height||64,o=n.type||t.type,l=new Wr({width:a,height:s,type:o,flipY:!1,mipmaps:[]});l.isPowerOfTwo()||console.warn("Width and height must be power of two to enable mipmap.");var c=Math.min(a,s),h=Math.log(c)/Math.log(2)+1,u=new Wn({shader:new le({vertex:le.source("clay.skybox.vertex"),fragment:h_})});u.set("normalDistribution",i),n.encodeRGBM&&u.define("fragment","RGBM_ENCODE"),n.decodeRGBM&&u.define("fragment","RGBM_DECODE");var f=new dr,d;if(t.textureType==="texture2D"){var p=new Wr({width:a,height:s,type:o===oe.FLOAT?oe.HALF_FLOAT:o});Vr.panoramaToCubeMap(e,t,p,{encodeRGBM:n.decodeRGBM}),t=p}d=new bs({scene:f,material:u}),d.material.set("environmentMap",t);var g=new gh({texture:l});n.encodeRGBM&&(o=l.type=oe.UNSIGNED_BYTE);for(var v=new We({width:a,height:s,type:o}),m=new It({depthBuffer:!1}),y=lt[o===oe.UNSIGNED_BYTE?"Uint8Array":"Float32Array"],_=0;_<h;_++){l.mipmaps[_]={pixels:{}},d.material.set("roughness",_/(h-1));for(var x=v.width,A=2*Math.atan(x/(x-.5))/Math.PI*180,E=0;E<jl.length;E++){var w=new y(v.width*v.height*4);m.attach(v),m.bind(e);var b=g.getCamera(jl[E]);b.fov=A,e.render(f,b),e.gl.readPixels(0,0,v.width,v.height,oe.RGBA,o,w),m.unbind(e),l.mipmaps[_].pixels[jl[E]]=w}v.width/=2,v.height/=2,v.dirty()}return m.dispose(e),v.dispose(e),d.dispose(e),i.dispose(e),{environmentMap:l,brdfLookup:r,normalDistribution:i,maxMipmapLevel:h}};ui.integrateBRDF=function(e,t){t=t||ui.generateNormalDistribution();var n=new It({depthBuffer:!1}),i=new Bt({fragment:c_}),r=new We({width:512,height:256,type:oe.HALF_FLOAT,wrapS:oe.CLAMP_TO_EDGE,wrapT:oe.CLAMP_TO_EDGE,minFilter:oe.NEAREST,magFilter:oe.NEAREST,useMipmap:!1});return i.setUniform("normalDistribution",t),i.setUniform("viewportSize",[512,256]),i.attachOutput(r),i.render(e,n),n.dispose(e),r};ui.generateNormalDistribution=function(n,i){for(var n=n||256,i=i||1024,r=new We({width:n,height:i,type:oe.FLOAT,minFilter:oe.NEAREST,magFilter:oe.NEAREST,wrapS:oe.CLAMP_TO_EDGE,wrapT:oe.CLAMP_TO_EDGE,useMipmap:!1}),a=new Float32Array(i*n*4),s=[],o=0;o<n;o++){for(var l=o/n,c=l*l,h=0;h<i;h++){var u=(h<<16|h>>>16)>>>0;u=((u&1431655765)<<1|(u&2863311530)>>>1)>>>0,u=((u&858993459)<<2|(u&3435973836)>>>2)>>>0,u=((u&252645135)<<4|(u&4042322160)>>>4)>>>0,u=(((u&16711935)<<8|(u&4278255360)>>>8)>>>0)/4294967296;var f=Math.sqrt((1-u)/(1+(c*c-1)*u));s[h]=f}for(var h=0;h<i;h++){var d=(h*n+o)*4,f=s[h],p=Math.sqrt(1-f*f),g=h/i,v=2*Math.PI*g;a[d]=p*Math.cos(v),a[d+1]=f,a[d+2]=p*Math.sin(v),a[d+3]=1}}return r.pixels=a,r};var u_=Qn.extend({cubemap:null,castShadow:!1,_normalDistribution:null,_brdfLookup:null},{type:"AMBIENT_CUBEMAP_LIGHT",prefilter:function(e,t){if(!e.getGLExtension("EXT_shader_texture_lod")){console.warn("Device not support textureCubeLodEXT");return}this._brdfLookup||(this._normalDistribution=ui.generateNormalDistribution(),this._brdfLookup=ui.integrateBRDF(e,this._normalDistribution));var n=this.cubemap;if(!n.__prefiltered){var i=ui.prefilterEnvironmentMap(e,n,{encodeRGBM:!0,width:t,height:t},this._normalDistribution,this._brdfLookup);this.cubemap=i.environmentMap,this.cubemap.__prefiltered=!0,n.dispose(e)}},getBRDFLookup:function(){return this._brdfLookup},uniformTemplates:{ambientCubemapLightColor:{type:"3f",value:function(e){var t=e.color,n=e.intensity;return[t[0]*n,t[1]*n,t[2]*n]}},ambientCubemapLightCubemap:{type:"t",value:function(e){return e.cubemap}},ambientCubemapLightBRDFLookup:{type:"t",value:function(e){return e._brdfLookup}}}});const f_=u_;var d_=Qn.extend({castShadow:!1,coefficients:[]},function(){this._coefficientsTmpArr=new lt.Float32Array(9*3)},{type:"AMBIENT_SH_LIGHT",uniformTemplates:{ambientSHLightColor:{type:"3f",value:function(e){var t=e.color,n=e.intensity;return[t[0]*n,t[1]*n,t[2]*n]}},ambientSHLightCoefficients:{type:"3f",value:function(e){for(var t=e._coefficientsTmpArr,n=0;n<e.coefficients.length;n++)t[n]=e.coefficients[n];return t}}}});const p_=d_;var fp={},Gr=["px","nx","py","ny","pz","nz"];function m_(e,t){var n=e[0],i=e[1],r=e[2];return t===0?1:t===1?n:t===2?i:t===3?r:t===4?n*r:t===5?i*r:t===6?n*i:t===7?3*r*r-1:n*n-i*i}var v_={px:[2,1,0,-1,-1,1],nx:[2,1,0,1,-1,-1],py:[0,2,1,1,-1,-1],ny:[0,2,1,1,1,1],pz:[0,1,2,-1,-1,-1],nz:[0,1,2,1,-1,1]};function g_(e,t,n,i){for(var r=new lt.Float32Array(27),a=U.create(),s=U.create(),o=U.create(),l=0;l<9;l++){for(var c=U.create(),h=0;h<Gr.length;h++){for(var u=t[Gr[h]],f=U.create(),d=0,p=0,g=v_[Gr[h]],v=0;v<i;v++)for(var m=0;m<n;m++){a[0]=m/(n-1)*2-1,a[1]=v/(i-1)*2-1,a[2]=-1,U.normalize(a,a),o[0]=a[g[0]]*g[3],o[1]=a[g[1]]*g[4],o[2]=a[g[2]]*g[5],s[0]=u[p++]/255,s[1]=u[p++]/255,s[2]=u[p++]/255;var y=u[p++]/255*8.12;s[0]*=y,s[1]*=y,s[2]*=y,U.scaleAndAdd(f,f,s,m_(o,l)*-a[2]),d+=-a[2]}U.scaleAndAdd(c,c,f,1/d)}r[l*3]=c[0]/6,r[l*3+1]=c[1]/6,r[l*3+2]=c[2]/6}return r}fp.projectEnvironmentMap=function(e,t,n){n=n||{},n.lod=n.lod||0;var i,r=new dr,a=64;t.textureType==="texture2D"?i=new bs({scene:r,environmentMap:t}):(a=t.image&&t.image.px?t.image.px.width:t.width,i=new bs({scene:r,environmentMap:t}));var s=Math.ceil(a/Math.pow(2,n.lod)),o=Math.ceil(a/Math.pow(2,n.lod)),l=new We({width:s,height:o}),c=new It;i.material.define("fragment","RGBM_ENCODE"),n.decodeRGBM&&i.material.define("fragment","RGBM_DECODE"),i.material.set("lod",n.lod);for(var h=new gh({texture:l}),u={},f=0;f<Gr.length;f++){u[Gr[f]]=new Uint8Array(s*o*4);var d=h.getCamera(Gr[f]);d.fov=90,c.attach(l),c.bind(e),e.render(r,d),e.gl.readPixels(0,0,s,o,oe.RGBA,oe.UNSIGNED_BYTE,u[Gr[f]]),c.unbind(e)}return i.dispose(e),c.dispose(e),l.dispose(e),g_(e,u,s,o)};var Ye={firstNotNull:function(){for(var e=0,t=arguments.length;e<t;e++)if(arguments[e]!=null)return arguments[e]},queryDataIndex:function(e,t){if(t.dataIndexInside!=null)return t.dataIndexInside;if(t.dataIndex!=null)return pi(t.dataIndex)?Yh(t.dataIndex,function(n){return e.indexOfRawIndex(n)}):e.indexOfRawIndex(t.dataIndex);if(t.name!=null)return pi(t.name)?Yh(t.name,function(n){return e.indexOfName(n)}):e.indexOfName(t.name)}},__=je.extend({dynamic:!1,widthSegments:40,heightSegments:20,phiStart:0,phiLength:Math.PI*2,thetaStart:0,thetaLength:Math.PI,radius:1},function(){this.build()},{build:function(){var e=this.heightSegments,t=this.widthSegments,n=this.attributes.position,i=this.attributes.texcoord0,r=this.attributes.normal,a=(t+1)*(e+1);n.init(a),i.init(a),r.init(a);var s=a>65535?Uint32Array:Uint16Array,o=this.indices=new s(t*e*6),l,c,h,u,f,d,p,_=this.radius,g=this.phiStart,v=this.phiLength,m=this.thetaStart,y=this.thetaLength,_=this.radius,x=[],A=[],E=0,w=1/_;for(p=0;p<=e;p++)for(d=0;d<=t;d++)u=d/t,f=p/e,l=-_*Math.cos(g+u*v)*Math.sin(m+f*y),c=_*Math.cos(m+f*y),h=_*Math.sin(g+u*v)*Math.sin(m+f*y),x[0]=l,x[1]=c,x[2]=h,A[0]=u,A[1]=f,n.set(E,x),i.set(E,A),x[0]*=w,x[1]*=w,x[2]*=w,r.set(E,x),E++;var b,M,T,P,O=t+1,D=0;for(p=0;p<e;p++)for(d=0;d<t;d++)M=p*O+d,b=p*O+d+1,P=(p+1)*O+d+1,T=(p+1)*O+d,o[D++]=b,o[D++]=M,o[D++]=P,o[D++]=M,o[D++]=T,o[D++]=P;this.boundingBox=new xn,this.boundingBox.max.set(_,_,_),this.boundingBox.min.set(-_,-_,-_)}});const x_=__;var y_=Qn.extend({castShadow:!1},{type:"AMBIENT_LIGHT",uniformTemplates:{ambientLightColor:{type:"3f",value:function(e){var t=e.color,n=e.intensity;return[t[0]*n,t[1]*n,t[2]*n]}}}});const T_=y_;var S_=Qn.extend({shadowBias:.001,shadowSlopeScale:2,shadowCascade:1,cascadeSplitLogFactor:.2},{type:"DIRECTIONAL_LIGHT",uniformTemplates:{directionalLightDirection:{type:"3f",value:function(e){return e.__dir=e.__dir||new $,e.__dir.copy(e.worldTransform.z).normalize().negate().array}},directionalLightColor:{type:"3f",value:function(e){var t=e.color,n=e.intensity;return[t[0]*n,t[1]*n,t[2]*n]}}},clone:function(){var e=Qn.prototype.clone.call(this);return e.shadowBias=this.shadowBias,e.shadowSlopeScale=this.shadowSlopeScale,e}});const E_=S_;var M_=Qn.extend({range:100,castShadow:!1},{type:"POINT_LIGHT",uniformTemplates:{pointLightPosition:{type:"3f",value:function(e){return e.getWorldPosition().array}},pointLightRange:{type:"1f",value:function(e){return e.range}},pointLightColor:{type:"3f",value:function(e){var t=e.color,n=e.intensity;return[t[0]*n,t[1]*n,t[2]*n]}}},clone:function(){var e=Qn.prototype.clone.call(this);return e.range=this.range,e}});const w_=M_;var A_=Qn.extend({range:20,umbraAngle:30,penumbraAngle:45,falloffFactor:2,shadowBias:.001,shadowSlopeScale:2},{type:"SPOT_LIGHT",uniformTemplates:{spotLightPosition:{type:"3f",value:function(e){return e.getWorldPosition().array}},spotLightRange:{type:"1f",value:function(e){return e.range}},spotLightUmbraAngleCosine:{type:"1f",value:function(e){return Math.cos(e.umbraAngle*Math.PI/180)}},spotLightPenumbraAngleCosine:{type:"1f",value:function(e){return Math.cos(e.penumbraAngle*Math.PI/180)}},spotLightFalloffFactor:{type:"1f",value:function(e){return e.falloffFactor}},spotLightDirection:{type:"3f",value:function(e){return e.__dir=e.__dir||new $,e.__dir.copy(e.worldTransform.z).negate().array}},spotLightColor:{type:"3f",value:function(e){var t=e.color,n=e.intensity;return[t[0]*n,t[1]*n,t[2]*n]}}},clone:function(){var e=Qn.prototype.clone.call(this);return e.range=this.range,e.umbraAngle=this.umbraAngle,e.penumbraAngle=this.penumbraAngle,e.falloffFactor=this.falloffFactor,e.shadowBias=this.shadowBias,e.shadowSlopeScale=this.shadowSlopeScale,e}});const b_=A_;var nt=function(e,t,n,i){e=e||0,t=t||0,n=n||0,i=i||0,this.array=_e.fromValues(e,t,n,i),this._dirty=!0};nt.prototype={constructor:nt,add:function(e){return _e.add(this.array,this.array,e.array),this._dirty=!0,this},set:function(e,t,n,i){return this.array[0]=e,this.array[1]=t,this.array[2]=n,this.array[3]=i,this._dirty=!0,this},setArray:function(e){return this.array[0]=e[0],this.array[1]=e[1],this.array[2]=e[2],this.array[3]=e[3],this._dirty=!0,this},clone:function(){return new nt(this.x,this.y,this.z,this.w)},copy:function(e){return _e.copy(this.array,e.array),this._dirty=!0,this},dist:function(e){return _e.dist(this.array,e.array)},distance:function(e){return _e.distance(this.array,e.array)},div:function(e){return _e.div(this.array,this.array,e.array),this._dirty=!0,this},divide:function(e){return _e.divide(this.array,this.array,e.array),this._dirty=!0,this},dot:function(e){return _e.dot(this.array,e.array)},len:function(){return _e.len(this.array)},length:function(){return _e.length(this.array)},lerp:function(e,t,n){return _e.lerp(this.array,e.array,t.array,n),this._dirty=!0,this},min:function(e){return _e.min(this.array,this.array,e.array),this._dirty=!0,this},max:function(e){return _e.max(this.array,this.array,e.array),this._dirty=!0,this},mul:function(e){return _e.mul(this.array,this.array,e.array),this._dirty=!0,this},multiply:function(e){return _e.multiply(this.array,this.array,e.array),this._dirty=!0,this},negate:function(){return _e.negate(this.array,this.array),this._dirty=!0,this},normalize:function(){return _e.normalize(this.array,this.array),this._dirty=!0,this},random:function(e){return _e.random(this.array,e),this._dirty=!0,this},scale:function(e){return _e.scale(this.array,this.array,e),this._dirty=!0,this},scaleAndAdd:function(e,t){return _e.scaleAndAdd(this.array,this.array,e.array,t),this._dirty=!0,this},sqrDist:function(e){return _e.sqrDist(this.array,e.array)},squaredDistance:function(e){return _e.squaredDistance(this.array,e.array)},sqrLen:function(){return _e.sqrLen(this.array)},squaredLength:function(){return _e.squaredLength(this.array)},sub:function(e){return _e.sub(this.array,this.array,e.array),this._dirty=!0,this},subtract:function(e){return _e.subtract(this.array,this.array,e.array),this._dirty=!0,this},transformMat4:function(e){return _e.transformMat4(this.array,this.array,e.array),this._dirty=!0,this},transformQuat:function(e){return _e.transformQuat(this.array,this.array,e.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};var cs=Object.defineProperty;if(cs){var oo=nt.prototype;cs(oo,"x",{get:function(){return this.array[0]},set:function(e){this.array[0]=e,this._dirty=!0}}),cs(oo,"y",{get:function(){return this.array[1]},set:function(e){this.array[1]=e,this._dirty=!0}}),cs(oo,"z",{get:function(){return this.array[2]},set:function(e){this.array[2]=e,this._dirty=!0}}),cs(oo,"w",{get:function(){return this.array[3]},set:function(e){this.array[3]=e,this._dirty=!0}})}nt.add=function(e,t,n){return _e.add(e.array,t.array,n.array),e._dirty=!0,e};nt.set=function(e,t,n,i,r){_e.set(e.array,t,n,i,r),e._dirty=!0};nt.copy=function(e,t){return _e.copy(e.array,t.array),e._dirty=!0,e};nt.dist=function(e,t){return _e.distance(e.array,t.array)};nt.distance=nt.dist;nt.div=function(e,t,n){return _e.divide(e.array,t.array,n.array),e._dirty=!0,e};nt.divide=nt.div;nt.dot=function(e,t){return _e.dot(e.array,t.array)};nt.len=function(e){return _e.length(e.array)};nt.lerp=function(e,t,n,i){return _e.lerp(e.array,t.array,n.array,i),e._dirty=!0,e};nt.min=function(e,t,n){return _e.min(e.array,t.array,n.array),e._dirty=!0,e};nt.max=function(e,t,n){return _e.max(e.array,t.array,n.array),e._dirty=!0,e};nt.mul=function(e,t,n){return _e.multiply(e.array,t.array,n.array),e._dirty=!0,e};nt.multiply=nt.mul;nt.negate=function(e,t){return _e.negate(e.array,t.array),e._dirty=!0,e};nt.normalize=function(e,t){return _e.normalize(e.array,t.array),e._dirty=!0,e};nt.random=function(e,t){return _e.random(e.array,t),e._dirty=!0,e};nt.scale=function(e,t,n){return _e.scale(e.array,t.array,n),e._dirty=!0,e};nt.scaleAndAdd=function(e,t,n,i){return _e.scaleAndAdd(e.array,t.array,n.array,i),e._dirty=!0,e};nt.sqrDist=function(e,t){return _e.sqrDist(e.array,t.array)};nt.squaredDistance=nt.sqrDist;nt.sqrLen=function(e){return _e.sqrLen(e.array)};nt.squaredLength=nt.sqrLen;nt.sub=function(e,t,n){return _e.subtract(e.array,t.array,n.array),e._dirty=!0,e};nt.subtract=nt.sub;nt.transformMat4=function(e,t,n){return _e.transformMat4(e.array,t.array,n.array),e._dirty=!0,e};nt.transformQuat=function(e,t,n){return _e.transformQuat(e.array,t.array,n.array),e._dirty=!0,e};const C_=nt;var pn={};pn.create=function(){var e=new sn(4);return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e};pn.clone=function(e){var t=new sn(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t};pn.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e};pn.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e};pn.transpose=function(e,t){if(e===t){var n=t[1];e[1]=t[2],e[2]=n}else e[0]=t[0],e[1]=t[2],e[2]=t[1],e[3]=t[3];return e};pn.invert=function(e,t){var n=t[0],i=t[1],r=t[2],a=t[3],s=n*a-r*i;return s?(s=1/s,e[0]=a*s,e[1]=-i*s,e[2]=-r*s,e[3]=n*s,e):null};pn.adjoint=function(e,t){var n=t[0];return e[0]=t[3],e[1]=-t[1],e[2]=-t[2],e[3]=n,e};pn.determinant=function(e){return e[0]*e[3]-e[2]*e[1]};pn.multiply=function(e,t,n){var i=t[0],r=t[1],a=t[2],s=t[3],o=n[0],l=n[1],c=n[2],h=n[3];return e[0]=i*o+a*l,e[1]=r*o+s*l,e[2]=i*c+a*h,e[3]=r*c+s*h,e};pn.mul=pn.multiply;pn.rotate=function(e,t,n){var i=t[0],r=t[1],a=t[2],s=t[3],o=Math.sin(n),l=Math.cos(n);return e[0]=i*l+a*o,e[1]=r*l+s*o,e[2]=i*-o+a*l,e[3]=r*-o+s*l,e};pn.scale=function(e,t,n){var i=t[0],r=t[1],a=t[2],s=t[3],o=n[0],l=n[1];return e[0]=i*o,e[1]=r*o,e[2]=a*l,e[3]=s*l,e};pn.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2))};pn.LDU=function(e,t,n,i){return e[2]=i[2]/i[0],n[0]=i[0],n[1]=i[1],n[3]=i[3]-e[2]*n[1],[e,t,n]};const Pt=pn;var Tn=function(){this.array=Pt.create(),this._dirty=!0};Tn.prototype={constructor:Tn,setArray:function(e){for(var t=0;t<this.array.length;t++)this.array[t]=e[t];return this._dirty=!0,this},clone:function(){return new Tn().copy(this)},copy:function(e){return Pt.copy(this.array,e.array),this._dirty=!0,this},adjoint:function(){return Pt.adjoint(this.array,this.array),this._dirty=!0,this},determinant:function(){return Pt.determinant(this.array)},identity:function(){return Pt.identity(this.array),this._dirty=!0,this},invert:function(){return Pt.invert(this.array,this.array),this._dirty=!0,this},mul:function(e){return Pt.mul(this.array,this.array,e.array),this._dirty=!0,this},mulLeft:function(e){return Pt.mul(this.array,e.array,this.array),this._dirty=!0,this},multiply:function(e){return Pt.multiply(this.array,this.array,e.array),this._dirty=!0,this},multiplyLeft:function(e){return Pt.multiply(this.array,e.array,this.array),this._dirty=!0,this},rotate:function(e){return Pt.rotate(this.array,this.array,e),this._dirty=!0,this},scale:function(e){return Pt.scale(this.array,this.array,e.array),this._dirty=!0,this},transpose:function(){return Pt.transpose(this.array,this.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};Tn.adjoint=function(e,t){return Pt.adjoint(e.array,t.array),e._dirty=!0,e};Tn.copy=function(e,t){return Pt.copy(e.array,t.array),e._dirty=!0,e};Tn.determinant=function(e){return Pt.determinant(e.array)};Tn.identity=function(e){return Pt.identity(e.array),e._dirty=!0,e};Tn.invert=function(e,t){return Pt.invert(e.array,t.array),e._dirty=!0,e};Tn.mul=function(e,t,n){return Pt.mul(e.array,t.array,n.array),e._dirty=!0,e};Tn.multiply=Tn.mul;Tn.rotate=function(e,t,n){return Pt.rotate(e.array,t.array,n),e._dirty=!0,e};Tn.scale=function(e,t,n){return Pt.scale(e.array,t.array,n.array),e._dirty=!0,e};Tn.transpose=function(e,t){return Pt.transpose(e.array,t.array),e._dirty=!0,e};const R_=Tn;var Rn={};Rn.create=function(){var e=new sn(6);return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e};Rn.clone=function(e){var t=new sn(6);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t};Rn.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e};Rn.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=1,e[4]=0,e[5]=0,e};Rn.invert=function(e,t){var n=t[0],i=t[1],r=t[2],a=t[3],s=t[4],o=t[5],l=n*a-i*r;return l?(l=1/l,e[0]=a*l,e[1]=-i*l,e[2]=-r*l,e[3]=n*l,e[4]=(r*o-a*s)*l,e[5]=(i*s-n*o)*l,e):null};Rn.determinant=function(e){return e[0]*e[3]-e[1]*e[2]};Rn.multiply=function(e,t,n){var i=t[0],r=t[1],a=t[2],s=t[3],o=t[4],l=t[5],c=n[0],h=n[1],u=n[2],f=n[3],d=n[4],p=n[5];return e[0]=i*c+a*h,e[1]=r*c+s*h,e[2]=i*u+a*f,e[3]=r*u+s*f,e[4]=i*d+a*p+o,e[5]=r*d+s*p+l,e};Rn.mul=Rn.multiply;Rn.rotate=function(e,t,n){var i=t[0],r=t[1],a=t[2],s=t[3],o=t[4],l=t[5],c=Math.sin(n),h=Math.cos(n);return e[0]=i*h+a*c,e[1]=r*h+s*c,e[2]=i*-c+a*h,e[3]=r*-c+s*h,e[4]=o,e[5]=l,e};Rn.scale=function(e,t,n){var i=t[0],r=t[1],a=t[2],s=t[3],o=t[4],l=t[5],c=n[0],h=n[1];return e[0]=i*c,e[1]=r*c,e[2]=a*h,e[3]=s*h,e[4]=o,e[5]=l,e};Rn.translate=function(e,t,n){var i=t[0],r=t[1],a=t[2],s=t[3],o=t[4],l=t[5],c=n[0],h=n[1];return e[0]=i,e[1]=r,e[2]=a,e[3]=s,e[4]=i*c+a*h+o,e[5]=r*c+s*h+l,e};Rn.frob=function(e){return Math.sqrt(Math.pow(e[0],2)+Math.pow(e[1],2)+Math.pow(e[2],2)+Math.pow(e[3],2)+Math.pow(e[4],2)+Math.pow(e[5],2)+1)};const Ft=Rn;var bn=function(){this.array=Ft.create(),this._dirty=!0};bn.prototype={constructor:bn,setArray:function(e){for(var t=0;t<this.array.length;t++)this.array[t]=e[t];return this._dirty=!0,this},clone:function(){return new bn().copy(this)},copy:function(e){return Ft.copy(this.array,e.array),this._dirty=!0,this},determinant:function(){return Ft.determinant(this.array)},identity:function(){return Ft.identity(this.array),this._dirty=!0,this},invert:function(){return Ft.invert(this.array,this.array),this._dirty=!0,this},mul:function(e){return Ft.mul(this.array,this.array,e.array),this._dirty=!0,this},mulLeft:function(e){return Ft.mul(this.array,e.array,this.array),this._dirty=!0,this},multiply:function(e){return Ft.multiply(this.array,this.array,e.array),this._dirty=!0,this},multiplyLeft:function(e){return Ft.multiply(this.array,e.array,this.array),this._dirty=!0,this},rotate:function(e){return Ft.rotate(this.array,this.array,e),this._dirty=!0,this},scale:function(e){return Ft.scale(this.array,this.array,e.array),this._dirty=!0,this},translate:function(e){return Ft.translate(this.array,this.array,e.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};bn.copy=function(e,t){return Ft.copy(e.array,t.array),e._dirty=!0,e};bn.determinant=function(e){return Ft.determinant(e.array)};bn.identity=function(e){return Ft.identity(e.array),e._dirty=!0,e};bn.invert=function(e,t){return Ft.invert(e.array,t.array),e._dirty=!0,e};bn.mul=function(e,t,n){return Ft.mul(e.array,t.array,n.array),e._dirty=!0,e};bn.multiply=bn.mul;bn.rotate=function(e,t,n){return Ft.rotate(e.array,t.array,n),e._dirty=!0,e};bn.scale=function(e,t,n){return Ft.scale(e.array,t.array,n.array),e._dirty=!0,e};bn.translate=function(e,t,n){return Ft.translate(e.array,t.array,n.array),e._dirty=!0,e};const L_=bn;var Xt=function(){this.array=Re.create(),this._dirty=!0};Xt.prototype={constructor:Xt,setArray:function(e){for(var t=0;t<this.array.length;t++)this.array[t]=e[t];return this._dirty=!0,this},adjoint:function(){return Re.adjoint(this.array,this.array),this._dirty=!0,this},clone:function(){return new Xt().copy(this)},copy:function(e){return Re.copy(this.array,e.array),this._dirty=!0,this},determinant:function(){return Re.determinant(this.array)},fromMat2d:function(e){return Re.fromMat2d(this.array,e.array),this._dirty=!0,this},fromMat4:function(e){return Re.fromMat4(this.array,e.array),this._dirty=!0,this},fromQuat:function(e){return Re.fromQuat(this.array,e.array),this._dirty=!0,this},identity:function(){return Re.identity(this.array),this._dirty=!0,this},invert:function(){return Re.invert(this.array,this.array),this._dirty=!0,this},mul:function(e){return Re.mul(this.array,this.array,e.array),this._dirty=!0,this},mulLeft:function(e){return Re.mul(this.array,e.array,this.array),this._dirty=!0,this},multiply:function(e){return Re.multiply(this.array,this.array,e.array),this._dirty=!0,this},multiplyLeft:function(e){return Re.multiply(this.array,e.array,this.array),this._dirty=!0,this},rotate:function(e){return Re.rotate(this.array,this.array,e),this._dirty=!0,this},scale:function(e){return Re.scale(this.array,this.array,e.array),this._dirty=!0,this},translate:function(e){return Re.translate(this.array,this.array,e.array),this._dirty=!0,this},normalFromMat4:function(e){return Re.normalFromMat4(this.array,e.array),this._dirty=!0,this},transpose:function(){return Re.transpose(this.array,this.array),this._dirty=!0,this},toString:function(){return"["+Array.prototype.join.call(this.array,",")+"]"},toArray:function(){return Array.prototype.slice.call(this.array)}};Xt.adjoint=function(e,t){return Re.adjoint(e.array,t.array),e._dirty=!0,e};Xt.copy=function(e,t){return Re.copy(e.array,t.array),e._dirty=!0,e};Xt.determinant=function(e){return Re.determinant(e.array)};Xt.identity=function(e){return Re.identity(e.array),e._dirty=!0,e};Xt.invert=function(e,t){return Re.invert(e.array,t.array),e};Xt.mul=function(e,t,n){return Re.mul(e.array,t.array,n.array),e._dirty=!0,e};Xt.multiply=Xt.mul;Xt.fromMat2d=function(e,t){return Re.fromMat2d(e.array,t.array),e._dirty=!0,e};Xt.fromMat4=function(e,t){return Re.fromMat4(e.array,t.array),e._dirty=!0,e};Xt.fromQuat=function(e,t){return Re.fromQuat(e.array,t.array),e._dirty=!0,e};Xt.normalFromMat4=function(e,t){return Re.normalFromMat4(e.array,t.array),e._dirty=!0,e};Xt.rotate=function(e,t,n){return Re.rotate(e.array,t.array,n),e._dirty=!0,e};Xt.scale=function(e,t,n){return Re.scale(e.array,t.array,n.array),e._dirty=!0,e};Xt.transpose=function(e,t){return Re.transpose(e.array,t.array),e._dirty=!0,e};Xt.translate=function(e,t,n){return Re.translate(e.array,t.array,n.array),e._dirty=!0,e};const P_=Xt;var D_={_animators:null,getAnimators:function(){return this._animators=this._animators||[],this._animators},animate:function(e,t){this._animators=this._animators||[];var n=this,i;if(e){for(var r=e.split("."),a=n,s=0,o=r.length;s<o;s++)a&&(a=a[r[s]]);a&&(i=a)}else i=n;if(i==null)throw new Error("Target "+e+" not exists");var l=this._animators,c=new uv(i,t),h=this;return c.during(function(){h.__zr&&h.__zr.refresh()}).done(function(){var u=l.indexOf(c);u>=0&&l.splice(u,1)}),l.push(c),this.__zr&&this.__zr.animation.addAnimator(c),c},stopAnimation:function(e){this._animators=this._animators||[];for(var t=this._animators,n=t.length,i=0;i<n;i++)t[i].stop(e);return t.length=0,this},addAnimatorsToZr:function(e){if(this._animators)for(var t=0;t<this._animators.length;t++)e.animation.addAnimator(this._animators[t])},removeAnimatorsFromZr:function(e){if(this._animators)for(var t=0;t<this._animators.length;t++)e.animation.removeAnimator(this._animators[t])}};const N_=D_,dp=`
@export clay.util.rand
highp float rand(vec2 uv) {
 const highp float a = 12.9898, b = 78.233, c = 43758.5453;
 highp float dt = dot(uv.xy, vec2(a,b)), sn = mod(dt, 3.141592653589793);
 return fract(sin(sn) * c);
}
@end
@export clay.util.calculate_attenuation
uniform float attenuationFactor : 5.0;
float lightAttenuation(float dist, float range)
{
 float attenuation = 1.0;
 attenuation = dist*dist/(range*range+1.0);
 float att_s = attenuationFactor;
 attenuation = 1.0/(attenuation*att_s+1.0);
 att_s = 1.0/(att_s+1.0);
 attenuation = attenuation - att_s;
 attenuation /= 1.0 - att_s;
 return clamp(attenuation, 0.0, 1.0);
}
@end
@export clay.util.edge_factor
#ifdef SUPPORT_STANDARD_DERIVATIVES
float edgeFactor(float width)
{
 vec3 d = fwidth(v_Barycentric);
 vec3 a3 = smoothstep(vec3(0.0), d * width, v_Barycentric);
 return min(min(a3.x, a3.y), a3.z);
}
#else
float edgeFactor(float width)
{
 return 1.0;
}
#endif
@end
@export clay.util.encode_float
vec4 encodeFloat(const in float depth)
{
 const vec4 bitShifts = vec4(256.0*256.0*256.0, 256.0*256.0, 256.0, 1.0);
 const vec4 bit_mask = vec4(0.0, 1.0/256.0, 1.0/256.0, 1.0/256.0);
 vec4 res = fract(depth * bitShifts);
 res -= res.xxyz * bit_mask;
 return res;
}
@end
@export clay.util.decode_float
float decodeFloat(const in vec4 color)
{
 const vec4 bitShifts = vec4(1.0/(256.0*256.0*256.0), 1.0/(256.0*256.0), 1.0/256.0, 1.0);
 return dot(color, bitShifts);
}
@end
@export clay.util.float
@import clay.util.encode_float
@import clay.util.decode_float
@end
@export clay.util.rgbm_decode
vec3 RGBMDecode(vec4 rgbm, float range) {
 return range * rgbm.rgb * rgbm.a;
}
@end
@export clay.util.rgbm_encode
vec4 RGBMEncode(vec3 color, float range) {
 if (dot(color, color) == 0.0) {
 return vec4(0.0);
 }
 vec4 rgbm;
 color /= range;
 rgbm.a = clamp(max(max(color.r, color.g), max(color.b, 1e-6)), 0.0, 1.0);
 rgbm.a = ceil(rgbm.a * 255.0) / 255.0;
 rgbm.rgb = color / rgbm.a;
 return rgbm;
}
@end
@export clay.util.rgbm
@import clay.util.rgbm_decode
@import clay.util.rgbm_encode
vec4 decodeHDR(vec4 color)
{
#if defined(RGBM_DECODE) || defined(RGBM)
 return vec4(RGBMDecode(color, 8.12), 1.0);
#else
 return color;
#endif
}
vec4 encodeHDR(vec4 color)
{
#if defined(RGBM_ENCODE) || defined(RGBM)
 return RGBMEncode(color.xyz, 8.12);
#else
 return color;
#endif
}
@end
@export clay.util.srgb
vec4 sRGBToLinear(in vec4 value) {
 return vec4(mix(pow(value.rgb * 0.9478672986 + vec3(0.0521327014), vec3(2.4)), value.rgb * 0.0773993808, vec3(lessThanEqual(value.rgb, vec3(0.04045)))), value.w);
}
vec4 linearTosRGB(in vec4 value) {
 return vec4(mix(pow(value.rgb, vec3(0.41666)) * 1.055 - vec3(0.055), value.rgb * 12.92, vec3(lessThanEqual(value.rgb, vec3(0.0031308)))), value.w);
}
@end
@export clay.chunk.skinning_header
#ifdef SKINNING
attribute vec3 weight : WEIGHT;
attribute vec4 joint : JOINT;
#ifdef USE_SKIN_MATRICES_TEXTURE
uniform sampler2D skinMatricesTexture : ignore;
uniform float skinMatricesTextureSize: ignore;
mat4 getSkinMatrix(sampler2D tex, float idx) {
 float j = idx * 4.0;
 float x = mod(j, skinMatricesTextureSize);
 float y = floor(j / skinMatricesTextureSize) + 0.5;
 vec2 scale = vec2(skinMatricesTextureSize);
 return mat4(
 texture2D(tex, vec2(x + 0.5, y) / scale),
 texture2D(tex, vec2(x + 1.5, y) / scale),
 texture2D(tex, vec2(x + 2.5, y) / scale),
 texture2D(tex, vec2(x + 3.5, y) / scale)
 );
}
mat4 getSkinMatrix(float idx) {
 return getSkinMatrix(skinMatricesTexture, idx);
}
#else
uniform mat4 skinMatrix[JOINT_COUNT] : SKIN_MATRIX;
mat4 getSkinMatrix(float idx) {
 return skinMatrix[int(idx)];
}
#endif
#endif
@end
@export clay.chunk.skin_matrix
mat4 skinMatrixWS = getSkinMatrix(joint.x) * weight.x;
if (weight.y > 1e-4)
{
 skinMatrixWS += getSkinMatrix(joint.y) * weight.y;
}
if (weight.z > 1e-4)
{
 skinMatrixWS += getSkinMatrix(joint.z) * weight.z;
}
float weightW = 1.0-weight.x-weight.y-weight.z;
if (weightW > 1e-4)
{
 skinMatrixWS += getSkinMatrix(joint.w) * weightW;
}
@end
@export clay.chunk.instancing_header
#ifdef INSTANCING
attribute vec4 instanceMat1;
attribute vec4 instanceMat2;
attribute vec4 instanceMat3;
#endif
@end
@export clay.chunk.instancing_matrix
mat4 instanceMat = mat4(
 vec4(instanceMat1.xyz, 0.0),
 vec4(instanceMat2.xyz, 0.0),
 vec4(instanceMat3.xyz, 0.0),
 vec4(instanceMat1.w, instanceMat2.w, instanceMat3.w, 1.0)
);
@end
@export clay.util.parallax_correct
vec3 parallaxCorrect(in vec3 dir, in vec3 pos, in vec3 boxMin, in vec3 boxMax) {
 vec3 first = (boxMax - pos) / dir;
 vec3 second = (boxMin - pos) / dir;
 vec3 further = max(first, second);
 float dist = min(further.x, min(further.y, further.z));
 vec3 fixedPos = pos + dir * dist;
 vec3 boxCenter = (boxMax + boxMin) * 0.5;
 return normalize(fixedPos - boxCenter);
}
@end
@export clay.util.clamp_sample
vec4 clampSample(const in sampler2D texture, const in vec2 coord)
{
#ifdef STEREO
 float eye = step(0.5, coord.x) * 0.5;
 vec2 coordClamped = clamp(coord, vec2(eye, 0.0), vec2(0.5 + eye, 1.0));
#else
 vec2 coordClamped = clamp(coord, vec2(0.0), vec2(1.0));
#endif
 return texture2D(texture, coordClamped);
}
@end
@export clay.util.ACES
vec3 ACESToneMapping(vec3 color)
{
 const float A = 2.51;
 const float B = 0.03;
 const float C = 2.43;
 const float D = 0.59;
 const float E = 0.14;
 return (color * (A * color + B)) / (color * (C * color + D) + E);
}
@end`,I_=`
@export ecgl.common.transformUniforms
uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;
uniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;
uniform mat4 world : WORLD;
@end

@export ecgl.common.attributes
attribute vec3 position : POSITION;
attribute vec2 texcoord : TEXCOORD_0;
attribute vec3 normal : NORMAL;
@end

@export ecgl.common.uv.header
uniform vec2 uvRepeat : [1.0, 1.0];
uniform vec2 uvOffset : [0.0, 0.0];
uniform vec2 detailUvRepeat : [1.0, 1.0];
uniform vec2 detailUvOffset : [0.0, 0.0];

varying vec2 v_Texcoord;
varying vec2 v_DetailTexcoord;
@end

@export ecgl.common.uv.main
v_Texcoord = texcoord * uvRepeat + uvOffset;
v_DetailTexcoord = texcoord * detailUvRepeat + detailUvOffset;
@end

@export ecgl.common.uv.fragmentHeader
varying vec2 v_Texcoord;
varying vec2 v_DetailTexcoord;
@end


@export ecgl.common.albedo.main

 vec4 albedoTexel = vec4(1.0);
#ifdef DIFFUSEMAP_ENABLED
 albedoTexel = texture2D(diffuseMap, v_Texcoord);
 #ifdef SRGB_DECODE
 albedoTexel = sRGBToLinear(albedoTexel);
 #endif
#endif

#ifdef DETAILMAP_ENABLED
 vec4 detailTexel = texture2D(detailMap, v_DetailTexcoord);
 #ifdef SRGB_DECODE
 detailTexel = sRGBToLinear(detailTexel);
 #endif
 albedoTexel.rgb = mix(albedoTexel.rgb, detailTexel.rgb, detailTexel.a);
 albedoTexel.a = detailTexel.a + (1.0 - detailTexel.a) * albedoTexel.a;
#endif

@end

@export ecgl.common.wireframe.vertexHeader

#ifdef WIREFRAME_QUAD
attribute vec4 barycentric;
varying vec4 v_Barycentric;
#elif defined(WIREFRAME_TRIANGLE)
attribute vec3 barycentric;
varying vec3 v_Barycentric;
#endif

@end

@export ecgl.common.wireframe.vertexMain

#if defined(WIREFRAME_QUAD) || defined(WIREFRAME_TRIANGLE)
 v_Barycentric = barycentric;
#endif

@end


@export ecgl.common.wireframe.fragmentHeader

uniform float wireframeLineWidth : 1;
uniform vec4 wireframeLineColor: [0, 0, 0, 0.5];

#ifdef WIREFRAME_QUAD
varying vec4 v_Barycentric;
float edgeFactor () {
 vec4 d = fwidth(v_Barycentric);
 vec4 a4 = smoothstep(vec4(0.0), d * wireframeLineWidth, v_Barycentric);
 return min(min(min(a4.x, a4.y), a4.z), a4.w);
}
#elif defined(WIREFRAME_TRIANGLE)
varying vec3 v_Barycentric;
float edgeFactor () {
 vec3 d = fwidth(v_Barycentric);
 vec3 a3 = smoothstep(vec3(0.0), d * wireframeLineWidth, v_Barycentric);
 return min(min(a3.x, a3.y), a3.z);
}
#endif

@end


@export ecgl.common.wireframe.fragmentMain

#if defined(WIREFRAME_QUAD) || defined(WIREFRAME_TRIANGLE)
 if (wireframeLineWidth > 0.) {
 vec4 lineColor = wireframeLineColor;
#ifdef SRGB_DECODE
 lineColor = sRGBToLinear(lineColor);
#endif

 gl_FragColor.rgb = mix(gl_FragColor.rgb, lineColor.rgb, (1.0 - edgeFactor()) * lineColor.a);
 }
#endif
@end




@export ecgl.common.bumpMap.header

#ifdef BUMPMAP_ENABLED
uniform sampler2D bumpMap;
uniform float bumpScale : 1.0;


vec3 bumpNormal(vec3 surfPos, vec3 surfNormal, vec3 baseNormal)
{
 vec2 dSTdx = dFdx(v_Texcoord);
 vec2 dSTdy = dFdy(v_Texcoord);

 float Hll = bumpScale * texture2D(bumpMap, v_Texcoord).x;
 float dHx = bumpScale * texture2D(bumpMap, v_Texcoord + dSTdx).x - Hll;
 float dHy = bumpScale * texture2D(bumpMap, v_Texcoord + dSTdy).x - Hll;

 vec3 vSigmaX = dFdx(surfPos);
 vec3 vSigmaY = dFdy(surfPos);
 vec3 vN = surfNormal;

 vec3 R1 = cross(vSigmaY, vN);
 vec3 R2 = cross(vN, vSigmaX);

 float fDet = dot(vSigmaX, R1);

 vec3 vGrad = sign(fDet) * (dHx * R1 + dHy * R2);
 return normalize(abs(fDet) * baseNormal - vGrad);

}
#endif

@end

@export ecgl.common.normalMap.vertexHeader

#ifdef NORMALMAP_ENABLED
attribute vec4 tangent : TANGENT;
varying vec3 v_Tangent;
varying vec3 v_Bitangent;
#endif

@end

@export ecgl.common.normalMap.vertexMain

#ifdef NORMALMAP_ENABLED
 if (dot(tangent, tangent) > 0.0) {
 v_Tangent = normalize((worldInverseTranspose * vec4(tangent.xyz, 0.0)).xyz);
 v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);
 }
#endif

@end


@export ecgl.common.normalMap.fragmentHeader

#ifdef NORMALMAP_ENABLED
uniform sampler2D normalMap;
varying vec3 v_Tangent;
varying vec3 v_Bitangent;
#endif

@end

@export ecgl.common.normalMap.fragmentMain
#ifdef NORMALMAP_ENABLED
 if (dot(v_Tangent, v_Tangent) > 0.0) {
 vec3 normalTexel = texture2D(normalMap, v_DetailTexcoord).xyz;
 if (dot(normalTexel, normalTexel) > 0.0) { N = normalTexel * 2.0 - 1.0;
 mat3 tbn = mat3(v_Tangent, v_Bitangent, v_Normal);
 N = normalize(tbn * N);
 }
 }
#endif
@end



@export ecgl.common.vertexAnimation.header

#ifdef VERTEX_ANIMATION
attribute vec3 prevPosition;
attribute vec3 prevNormal;
uniform float percent;
#endif

@end

@export ecgl.common.vertexAnimation.main

#ifdef VERTEX_ANIMATION
 vec3 pos = mix(prevPosition, position, percent);
 vec3 norm = mix(prevNormal, normal, percent);
#else
 vec3 pos = position;
 vec3 norm = normal;
#endif

@end


@export ecgl.common.ssaoMap.header
#ifdef SSAOMAP_ENABLED
uniform sampler2D ssaoMap;
uniform vec4 viewport : VIEWPORT;
#endif
@end

@export ecgl.common.ssaoMap.main
 float ao = 1.0;
#ifdef SSAOMAP_ENABLED
 ao = texture2D(ssaoMap, (gl_FragCoord.xy - viewport.xy) / viewport.zw).r;
#endif
@end




@export ecgl.common.diffuseLayer.header

#if (LAYER_DIFFUSEMAP_COUNT > 0)
uniform float layerDiffuseIntensity[LAYER_DIFFUSEMAP_COUNT];
uniform sampler2D layerDiffuseMap[LAYER_DIFFUSEMAP_COUNT];
#endif

@end

@export ecgl.common.emissiveLayer.header

#if (LAYER_EMISSIVEMAP_COUNT > 0)
uniform float layerEmissionIntensity[LAYER_EMISSIVEMAP_COUNT];
uniform sampler2D layerEmissiveMap[LAYER_EMISSIVEMAP_COUNT];
#endif

@end

@export ecgl.common.layers.header
@import ecgl.common.diffuseLayer.header
@import ecgl.common.emissiveLayer.header
@end

@export ecgl.common.diffuseLayer.main

#if (LAYER_DIFFUSEMAP_COUNT > 0)
 for (int _idx_ = 0; _idx_ < LAYER_DIFFUSEMAP_COUNT; _idx_++) {{
 float intensity = layerDiffuseIntensity[_idx_];
 vec4 texel2 = texture2D(layerDiffuseMap[_idx_], v_Texcoord);
 #ifdef SRGB_DECODE
 texel2 = sRGBToLinear(texel2);
 #endif
 albedoTexel.rgb = mix(albedoTexel.rgb, texel2.rgb * intensity, texel2.a);
 albedoTexel.a = texel2.a + (1.0 - texel2.a) * albedoTexel.a;
 }}
#endif

@end

@export ecgl.common.emissiveLayer.main

#if (LAYER_EMISSIVEMAP_COUNT > 0)
 for (int _idx_ = 0; _idx_ < LAYER_EMISSIVEMAP_COUNT; _idx_++)
 {{
 vec4 texel2 = texture2D(layerEmissiveMap[_idx_], v_Texcoord) * layerEmissionIntensity[_idx_];
 #ifdef SRGB_DECODE
 texel2 = sRGBToLinear(texel2);
 #endif
 float intensity = layerEmissionIntensity[_idx_];
 gl_FragColor.rgb += texel2.rgb * texel2.a * intensity;
 }}
#endif

@end
`,O_=`@export ecgl.color.vertex

uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;

@import ecgl.common.uv.header

attribute vec2 texcoord : TEXCOORD_0;
attribute vec3 position: POSITION;

@import ecgl.common.wireframe.vertexHeader

#ifdef VERTEX_COLOR
attribute vec4 a_Color : COLOR;
varying vec4 v_Color;
#endif

#ifdef VERTEX_ANIMATION
attribute vec3 prevPosition;
uniform float percent : 1.0;
#endif

#ifdef ATMOSPHERE_ENABLED
attribute vec3 normal: NORMAL;
uniform mat4 worldInverseTranspose : WORLDINVERSETRANSPOSE;
varying vec3 v_Normal;
#endif

void main()
{
#ifdef VERTEX_ANIMATION
 vec3 pos = mix(prevPosition, position, percent);
#else
 vec3 pos = position;
#endif

 gl_Position = worldViewProjection * vec4(pos, 1.0);

 @import ecgl.common.uv.main

#ifdef VERTEX_COLOR
 v_Color = a_Color;
#endif

#ifdef ATMOSPHERE_ENABLED
 v_Normal = normalize((worldInverseTranspose * vec4(normal, 0.0)).xyz);
#endif

 @import ecgl.common.wireframe.vertexMain

}

@end

@export ecgl.color.fragment

#define LAYER_DIFFUSEMAP_COUNT 0
#define LAYER_EMISSIVEMAP_COUNT 0

uniform sampler2D diffuseMap;
uniform sampler2D detailMap;

uniform vec4 color : [1.0, 1.0, 1.0, 1.0];

#ifdef ATMOSPHERE_ENABLED
uniform mat4 viewTranspose: VIEWTRANSPOSE;
uniform vec3 glowColor;
uniform float glowPower;
varying vec3 v_Normal;
#endif

#ifdef VERTEX_COLOR
varying vec4 v_Color;
#endif

@import ecgl.common.layers.header

@import ecgl.common.uv.fragmentHeader

@import ecgl.common.wireframe.fragmentHeader

@import clay.util.srgb

void main()
{
#ifdef SRGB_DECODE
 gl_FragColor = sRGBToLinear(color);
#else
 gl_FragColor = color;
#endif

#ifdef VERTEX_COLOR
 gl_FragColor *= v_Color;
#endif

 @import ecgl.common.albedo.main

 @import ecgl.common.diffuseLayer.main

 gl_FragColor *= albedoTexel;

#ifdef ATMOSPHERE_ENABLED
 float atmoIntensity = pow(1.0 - dot(v_Normal, (viewTranspose * vec4(0.0, 0.0, 1.0, 0.0)).xyz), glowPower);
 gl_FragColor.rgb += glowColor * atmoIntensity;
#endif

 @import ecgl.common.emissiveLayer.main

 @import ecgl.common.wireframe.fragmentMain

}
@end`,U_=`/**
 * http: */

@export ecgl.lambert.vertex

@import ecgl.common.transformUniforms

@import ecgl.common.uv.header


@import ecgl.common.attributes

@import ecgl.common.wireframe.vertexHeader

#ifdef VERTEX_COLOR
attribute vec4 a_Color : COLOR;
varying vec4 v_Color;
#endif


@import ecgl.common.vertexAnimation.header


varying vec3 v_Normal;
varying vec3 v_WorldPosition;

void main()
{
 @import ecgl.common.uv.main

 @import ecgl.common.vertexAnimation.main


 gl_Position = worldViewProjection * vec4(pos, 1.0);

 v_Normal = normalize((worldInverseTranspose * vec4(norm, 0.0)).xyz);
 v_WorldPosition = (world * vec4(pos, 1.0)).xyz;

#ifdef VERTEX_COLOR
 v_Color = a_Color;
#endif

 @import ecgl.common.wireframe.vertexMain
}

@end


@export ecgl.lambert.fragment

#define LAYER_DIFFUSEMAP_COUNT 0
#define LAYER_EMISSIVEMAP_COUNT 0

#define NORMAL_UP_AXIS 1
#define NORMAL_FRONT_AXIS 2

@import ecgl.common.uv.fragmentHeader

varying vec3 v_Normal;
varying vec3 v_WorldPosition;

uniform sampler2D diffuseMap;
uniform sampler2D detailMap;

@import ecgl.common.layers.header

uniform float emissionIntensity: 1.0;

uniform vec4 color : [1.0, 1.0, 1.0, 1.0];

uniform mat4 viewInverse : VIEWINVERSE;

#ifdef ATMOSPHERE_ENABLED
uniform mat4 viewTranspose: VIEWTRANSPOSE;
uniform vec3 glowColor;
uniform float glowPower;
#endif

#ifdef AMBIENT_LIGHT_COUNT
@import clay.header.ambient_light
#endif
#ifdef AMBIENT_SH_LIGHT_COUNT
@import clay.header.ambient_sh_light
#endif

#ifdef DIRECTIONAL_LIGHT_COUNT
@import clay.header.directional_light
#endif

#ifdef VERTEX_COLOR
varying vec4 v_Color;
#endif


@import ecgl.common.ssaoMap.header

@import ecgl.common.bumpMap.header

@import clay.util.srgb

@import ecgl.common.wireframe.fragmentHeader

@import clay.plugin.compute_shadow_map

void main()
{
#ifdef SRGB_DECODE
 gl_FragColor = sRGBToLinear(color);
#else
 gl_FragColor = color;
#endif

#ifdef VERTEX_COLOR
 #ifdef SRGB_DECODE
 gl_FragColor *= sRGBToLinear(v_Color);
 #else
 gl_FragColor *= v_Color;
 #endif
#endif

 @import ecgl.common.albedo.main

 @import ecgl.common.diffuseLayer.main

 gl_FragColor *= albedoTexel;

 vec3 N = v_Normal;
#ifdef DOUBLE_SIDED
 vec3 eyePos = viewInverse[3].xyz;
 vec3 V = normalize(eyePos - v_WorldPosition);

 if (dot(N, V) < 0.0) {
 N = -N;
 }
#endif

 float ambientFactor = 1.0;

#ifdef BUMPMAP_ENABLED
 N = bumpNormal(v_WorldPosition, v_Normal, N);
 ambientFactor = dot(v_Normal, N);
#endif

 vec3 N2 = vec3(N.x, N[NORMAL_UP_AXIS], N[NORMAL_FRONT_AXIS]);

 vec3 diffuseColor = vec3(0.0, 0.0, 0.0);

 @import ecgl.common.ssaoMap.main

#ifdef AMBIENT_LIGHT_COUNT
 for(int i = 0; i < AMBIENT_LIGHT_COUNT; i++)
 {
 diffuseColor += ambientLightColor[i] * ambientFactor * ao;
 }
#endif
#ifdef AMBIENT_SH_LIGHT_COUNT
 for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)
 {{
 diffuseColor += calcAmbientSHLight(_idx_, N2) * ambientSHLightColor[_idx_] * ao;
 }}
#endif
#ifdef DIRECTIONAL_LIGHT_COUNT
#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)
 float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];
 if(shadowEnabled)
 {
 computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);
 }
#endif
 for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)
 {
 vec3 lightDirection = -directionalLightDirection[i];
 vec3 lightColor = directionalLightColor[i];

 float shadowContrib = 1.0;
#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)
 if (shadowEnabled)
 {
 shadowContrib = shadowContribsDir[i];
 }
#endif

 float ndl = dot(N, normalize(lightDirection)) * shadowContrib;

 diffuseColor += lightColor * clamp(ndl, 0.0, 1.0);
 }
#endif

 gl_FragColor.rgb *= diffuseColor;

#ifdef ATMOSPHERE_ENABLED
 float atmoIntensity = pow(1.0 - dot(v_Normal, (viewTranspose * vec4(0.0, 0.0, 1.0, 0.0)).xyz), glowPower);
 gl_FragColor.rgb += glowColor * atmoIntensity;
#endif

 @import ecgl.common.emissiveLayer.main

 @import ecgl.common.wireframe.fragmentMain
}

@end`,F_=`@export ecgl.realistic.vertex

@import ecgl.common.transformUniforms

@import ecgl.common.uv.header

@import ecgl.common.attributes


@import ecgl.common.wireframe.vertexHeader

#ifdef VERTEX_COLOR
attribute vec4 a_Color : COLOR;
varying vec4 v_Color;
#endif

#ifdef NORMALMAP_ENABLED
attribute vec4 tangent : TANGENT;
varying vec3 v_Tangent;
varying vec3 v_Bitangent;
#endif

@import ecgl.common.vertexAnimation.header

varying vec3 v_Normal;
varying vec3 v_WorldPosition;

void main()
{

 @import ecgl.common.uv.main

 @import ecgl.common.vertexAnimation.main

 gl_Position = worldViewProjection * vec4(pos, 1.0);

 v_Normal = normalize((worldInverseTranspose * vec4(norm, 0.0)).xyz);
 v_WorldPosition = (world * vec4(pos, 1.0)).xyz;

#ifdef VERTEX_COLOR
 v_Color = a_Color;
#endif

#ifdef NORMALMAP_ENABLED
 v_Tangent = normalize((worldInverseTranspose * vec4(tangent.xyz, 0.0)).xyz);
 v_Bitangent = normalize(cross(v_Normal, v_Tangent) * tangent.w);
#endif

 @import ecgl.common.wireframe.vertexMain

}

@end



@export ecgl.realistic.fragment

#define LAYER_DIFFUSEMAP_COUNT 0
#define LAYER_EMISSIVEMAP_COUNT 0
#define PI 3.14159265358979
#define ROUGHNESS_CHANEL 0
#define METALNESS_CHANEL 1

#define NORMAL_UP_AXIS 1
#define NORMAL_FRONT_AXIS 2

#ifdef VERTEX_COLOR
varying vec4 v_Color;
#endif

@import ecgl.common.uv.fragmentHeader

varying vec3 v_Normal;
varying vec3 v_WorldPosition;

uniform sampler2D diffuseMap;

uniform sampler2D detailMap;
uniform sampler2D metalnessMap;
uniform sampler2D roughnessMap;

@import ecgl.common.layers.header

uniform float emissionIntensity: 1.0;

uniform vec4 color : [1.0, 1.0, 1.0, 1.0];

uniform float metalness : 0.0;
uniform float roughness : 0.5;

uniform mat4 viewInverse : VIEWINVERSE;

#ifdef ATMOSPHERE_ENABLED
uniform mat4 viewTranspose: VIEWTRANSPOSE;
uniform vec3 glowColor;
uniform float glowPower;
#endif

#ifdef AMBIENT_LIGHT_COUNT
@import clay.header.ambient_light
#endif

#ifdef AMBIENT_SH_LIGHT_COUNT
@import clay.header.ambient_sh_light
#endif

#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT
@import clay.header.ambient_cubemap_light
#endif

#ifdef DIRECTIONAL_LIGHT_COUNT
@import clay.header.directional_light
#endif

@import ecgl.common.normalMap.fragmentHeader

@import ecgl.common.ssaoMap.header

@import ecgl.common.bumpMap.header

@import clay.util.srgb

@import clay.util.rgbm

@import ecgl.common.wireframe.fragmentHeader

@import clay.plugin.compute_shadow_map

vec3 F_Schlick(float ndv, vec3 spec) {
 return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);
}

float D_Phong(float g, float ndh) {
 float a = pow(8192.0, g);
 return (a + 2.0) / 8.0 * pow(ndh, a);
}

void main()
{
 vec4 albedoColor = color;

 vec3 eyePos = viewInverse[3].xyz;
 vec3 V = normalize(eyePos - v_WorldPosition);
#ifdef VERTEX_COLOR
 #ifdef SRGB_DECODE
 albedoColor *= sRGBToLinear(v_Color);
 #else
 albedoColor *= v_Color;
 #endif
#endif

 @import ecgl.common.albedo.main

 @import ecgl.common.diffuseLayer.main

 albedoColor *= albedoTexel;

 float m = metalness;

#ifdef METALNESSMAP_ENABLED
 float m2 = texture2D(metalnessMap, v_DetailTexcoord)[METALNESS_CHANEL];
 m = clamp(m2 + (m - 0.5) * 2.0, 0.0, 1.0);
#endif

 vec3 baseColor = albedoColor.rgb;
 albedoColor.rgb = baseColor * (1.0 - m);
 vec3 specFactor = mix(vec3(0.04), baseColor, m);

 float g = 1.0 - roughness;

#ifdef ROUGHNESSMAP_ENABLED
 float g2 = 1.0 - texture2D(roughnessMap, v_DetailTexcoord)[ROUGHNESS_CHANEL];
 g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);
#endif

 vec3 N = v_Normal;

#ifdef DOUBLE_SIDED
 if (dot(N, V) < 0.0) {
 N = -N;
 }
#endif

 float ambientFactor = 1.0;

#ifdef BUMPMAP_ENABLED
 N = bumpNormal(v_WorldPosition, v_Normal, N);
 ambientFactor = dot(v_Normal, N);
#endif

@import ecgl.common.normalMap.fragmentMain

 vec3 N2 = vec3(N.x, N[NORMAL_UP_AXIS], N[NORMAL_FRONT_AXIS]);

 vec3 diffuseTerm = vec3(0.0);
 vec3 specularTerm = vec3(0.0);

 float ndv = clamp(dot(N, V), 0.0, 1.0);
 vec3 fresnelTerm = F_Schlick(ndv, specFactor);

 @import ecgl.common.ssaoMap.main

#ifdef AMBIENT_LIGHT_COUNT
 for(int _idx_ = 0; _idx_ < AMBIENT_LIGHT_COUNT; _idx_++)
 {{
 diffuseTerm += ambientLightColor[_idx_] * ambientFactor * ao;
 }}
#endif

#ifdef AMBIENT_SH_LIGHT_COUNT
 for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)
 {{
 diffuseTerm += calcAmbientSHLight(_idx_, N2) * ambientSHLightColor[_idx_] * ao;
 }}
#endif

#ifdef DIRECTIONAL_LIGHT_COUNT
#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)
 float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];
 if(shadowEnabled)
 {
 computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);
 }
#endif
 for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++)
 {{
 vec3 L = -directionalLightDirection[_idx_];
 vec3 lc = directionalLightColor[_idx_];

 vec3 H = normalize(L + V);
 float ndl = clamp(dot(N, normalize(L)), 0.0, 1.0);
 float ndh = clamp(dot(N, H), 0.0, 1.0);

 float shadowContrib = 1.0;
#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)
 if (shadowEnabled)
 {
 shadowContrib = shadowContribsDir[_idx_];
 }
#endif

 vec3 li = lc * ndl * shadowContrib;

 diffuseTerm += li;
 specularTerm += li * fresnelTerm * D_Phong(g, ndh);
 }}
#endif


#ifdef AMBIENT_CUBEMAP_LIGHT_COUNT
 vec3 L = reflect(-V, N);
 L = vec3(L.x, L[NORMAL_UP_AXIS], L[NORMAL_FRONT_AXIS]);
 float rough2 = clamp(1.0 - g, 0.0, 1.0);
 float bias2 = rough2 * 5.0;
 vec2 brdfParam2 = texture2D(ambientCubemapLightBRDFLookup[0], vec2(rough2, ndv)).xy;
 vec3 envWeight2 = specFactor * brdfParam2.x + brdfParam2.y;
 vec3 envTexel2;
 for(int _idx_ = 0; _idx_ < AMBIENT_CUBEMAP_LIGHT_COUNT; _idx_++)
 {{
 envTexel2 = RGBMDecode(textureCubeLodEXT(ambientCubemapLightCubemap[_idx_], L, bias2), 8.12);
 specularTerm += ambientCubemapLightColor[_idx_] * envTexel2 * envWeight2 * ao;
 }}
#endif

 gl_FragColor.rgb = albedoColor.rgb * diffuseTerm + specularTerm;
 gl_FragColor.a = albedoColor.a;

#ifdef ATMOSPHERE_ENABLED
 float atmoIntensity = pow(1.0 - dot(v_Normal, (viewTranspose * vec4(0.0, 0.0, 1.0, 0.0)).xyz), glowPower);
 gl_FragColor.rgb += glowColor * atmoIntensity;
#endif

#ifdef SRGB_ENCODE
 gl_FragColor = linearTosRGB(gl_FragColor);
#endif

 @import ecgl.common.emissiveLayer.main

 @import ecgl.common.wireframe.fragmentMain
}

@end`,B_=`@export ecgl.hatching.vertex

@import ecgl.realistic.vertex

@end


@export ecgl.hatching.fragment

#define NORMAL_UP_AXIS 1
#define NORMAL_FRONT_AXIS 2

@import ecgl.common.uv.fragmentHeader

varying vec3 v_Normal;
varying vec3 v_WorldPosition;

uniform vec4 color : [0.0, 0.0, 0.0, 1.0];
uniform vec4 paperColor : [1.0, 1.0, 1.0, 1.0];

uniform mat4 viewInverse : VIEWINVERSE;

#ifdef AMBIENT_LIGHT_COUNT
@import clay.header.ambient_light
#endif
#ifdef AMBIENT_SH_LIGHT_COUNT
@import clay.header.ambient_sh_light
#endif

#ifdef DIRECTIONAL_LIGHT_COUNT
@import clay.header.directional_light
#endif

#ifdef VERTEX_COLOR
varying vec4 v_Color;
#endif


@import ecgl.common.ssaoMap.header

@import ecgl.common.bumpMap.header

@import clay.util.srgb

@import ecgl.common.wireframe.fragmentHeader

@import clay.plugin.compute_shadow_map

uniform sampler2D hatch1;
uniform sampler2D hatch2;
uniform sampler2D hatch3;
uniform sampler2D hatch4;
uniform sampler2D hatch5;
uniform sampler2D hatch6;

float shade(in float tone) {
 vec4 c = vec4(1. ,1., 1., 1.);
 float step = 1. / 6.;
 vec2 uv = v_DetailTexcoord;
 if (tone <= step / 2.0) {
 c = mix(vec4(0.), texture2D(hatch6, uv), 12. * tone);
 }
 else if (tone <= step) {
 c = mix(texture2D(hatch6, uv), texture2D(hatch5, uv), 6. * tone);
 }
 if(tone > step && tone <= 2. * step){
 c = mix(texture2D(hatch5, uv), texture2D(hatch4, uv) , 6. * (tone - step));
 }
 if(tone > 2. * step && tone <= 3. * step){
 c = mix(texture2D(hatch4, uv), texture2D(hatch3, uv), 6. * (tone - 2. * step));
 }
 if(tone > 3. * step && tone <= 4. * step){
 c = mix(texture2D(hatch3, uv), texture2D(hatch2, uv), 6. * (tone - 3. * step));
 }
 if(tone > 4. * step && tone <= 5. * step){
 c = mix(texture2D(hatch2, uv), texture2D(hatch1, uv), 6. * (tone - 4. * step));
 }
 if(tone > 5. * step){
 c = mix(texture2D(hatch1, uv), vec4(1.), 6. * (tone - 5. * step));
 }

 return c.r;
}

const vec3 w = vec3(0.2125, 0.7154, 0.0721);

void main()
{
#ifdef SRGB_DECODE
 vec4 inkColor = sRGBToLinear(color);
#else
 vec4 inkColor = color;
#endif

#ifdef VERTEX_COLOR
 #ifdef SRGB_DECODE
 inkColor *= sRGBToLinear(v_Color);
 #else
 inkColor *= v_Color;
 #endif
#endif

 vec3 N = v_Normal;
#ifdef DOUBLE_SIDED
 vec3 eyePos = viewInverse[3].xyz;
 vec3 V = normalize(eyePos - v_WorldPosition);

 if (dot(N, V) < 0.0) {
 N = -N;
 }
#endif

 float tone = 0.0;

 float ambientFactor = 1.0;

#ifdef BUMPMAP_ENABLED
 N = bumpNormal(v_WorldPosition, v_Normal, N);
 ambientFactor = dot(v_Normal, N);
#endif

 vec3 N2 = vec3(N.x, N[NORMAL_UP_AXIS], N[NORMAL_FRONT_AXIS]);

 @import ecgl.common.ssaoMap.main

#ifdef AMBIENT_LIGHT_COUNT
 for(int i = 0; i < AMBIENT_LIGHT_COUNT; i++)
 {
 tone += dot(ambientLightColor[i], w) * ambientFactor * ao;
 }
#endif
#ifdef AMBIENT_SH_LIGHT_COUNT
 for(int _idx_ = 0; _idx_ < AMBIENT_SH_LIGHT_COUNT; _idx_++)
 {{
 tone += dot(calcAmbientSHLight(_idx_, N2) * ambientSHLightColor[_idx_], w) * ao;
 }}
#endif
#ifdef DIRECTIONAL_LIGHT_COUNT
#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)
 float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];
 if(shadowEnabled)
 {
 computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);
 }
#endif
 for(int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++)
 {
 vec3 lightDirection = -directionalLightDirection[i];
 float lightTone = dot(directionalLightColor[i], w);

 float shadowContrib = 1.0;
#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)
 if (shadowEnabled)
 {
 shadowContrib = shadowContribsDir[i];
 }
#endif

 float ndl = dot(N, normalize(lightDirection)) * shadowContrib;

 tone += lightTone * clamp(ndl, 0.0, 1.0);
 }
#endif

 gl_FragColor = mix(inkColor, paperColor, shade(clamp(tone, 0.0, 1.0)));
 }
@end
`,z_=`@export ecgl.sm.depth.vertex

uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;

attribute vec3 position : POSITION;
attribute vec2 texcoord : TEXCOORD_0;

#ifdef VERTEX_ANIMATION
attribute vec3 prevPosition;
uniform float percent : 1.0;
#endif

varying vec4 v_ViewPosition;
varying vec2 v_Texcoord;

void main(){

#ifdef VERTEX_ANIMATION
 vec3 pos = mix(prevPosition, position, percent);
#else
 vec3 pos = position;
#endif

 v_ViewPosition = worldViewProjection * vec4(pos, 1.0);
 gl_Position = v_ViewPosition;

 v_Texcoord = texcoord;

}
@end



@export ecgl.sm.depth.fragment

@import clay.sm.depth.fragment

@end`;Object.assign(hi.prototype,N_);le.import(dp);le.import(ip);le.import(I_);le.import(O_);le.import(U_);le.import(F_);le.import(B_);le.import(z_);function G_(e){return!e||e==="none"}function pp(e){return e instanceof HTMLCanvasElement||e instanceof HTMLImageElement||e instanceof Image}function H_(e){return e.getZr&&e.setOption}var V_=dr.prototype.addToScene,k_=dr.prototype.removeFromScene;dr.prototype.addToScene=function(e){if(V_.call(this,e),this.__zr){var t=this.__zr;e.traverse(function(n){n.__zr=t,n.addAnimatorsToZr&&n.addAnimatorsToZr(t)})}};dr.prototype.removeFromScene=function(e){k_.call(this,e),e.traverse(function(t){var n=t.__zr;t.__zr=null,n&&t.removeAnimatorsFromZr&&t.removeAnimatorsFromZr(n)})};Wn.prototype.setTextureImage=function(e,t,n,i){if(this.shader){var r=n.getZr(),a=this,s;return a.autoUpdateTextureStatus=!1,a.disableTexture(e),G_(t)||(s=R.loadTexture(t,n,i,function(o){a.enableTexture(e),r&&r.refresh()}),a.set(e,s)),s}};var R={};R.Renderer=Ss;R.Node=hi;R.Mesh=zr;R.Shader=le;R.Material=Wn;R.Texture=oe;R.Texture2D=We;R.Geometry=je;R.SphereGeometry=x_;R.PlaneGeometry=gl;R.CubeGeometry=up;R.AmbientLight=T_;R.DirectionalLight=E_;R.PointLight=w_;R.SpotLight=b_;R.PerspectiveCamera=qt;R.OrthographicCamera=za;R.Vector2=In;R.Vector3=$;R.Vector4=C_;R.Quaternion=rp;R.Matrix2=R_;R.Matrix2d=L_;R.Matrix3=P_;R.Matrix4=ue;R.Plane=lp;R.Ray=Zo;R.BoundingBox=xn;R.Frustum=vh;var lo=null;function W_(){return lo!==null||(lo=Vr.createBlank("rgba(255,255,255,0)").image),lo}function Ru(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))}function Lu(e){if((e.wrapS===oe.REPEAT||e.wrapT===oe.REPEAT)&&e.image){var t=Ru(e.width),n=Ru(e.height);if(t!==e.width||n!==e.height){var i=document.createElement("canvas");i.width=t,i.height=n;var r=i.getContext("2d");r.drawImage(e.image,0,0,t,n),e.image=i}}}R.loadTexture=function(e,t,n,i){typeof n=="function"&&(i=n,n={}),n=n||{};for(var r=Object.keys(n).sort(),a="",s=0;s<r.length;s++)a+=r[s]+"_"+n[r[s]]+"_";var o=t.__textureCache=t.__textureCache||new fv(20);if(H_(e)){var l=e.__textureid__,c=o.get(a+l);if(c)c.texture.surface.setECharts(e),i&&i(c.texture);else{var h=new jc(e);h.onupdate=function(){t.getZr().refresh()},c={texture:h.getTexture()};for(var s=0;s<r.length;s++)c.texture[r[s]]=n[r[s]];l=e.__textureid__||"__ecgl_ec__"+c.texture.__uid__,e.__textureid__=l,o.put(a+l,c),i&&i(c.texture)}return c.texture}else if(pp(e)){var l=e.__textureid__,c=o.get(a+l);if(!c){c={texture:new R.Texture2D({image:e})};for(var s=0;s<r.length;s++)c.texture[r[s]]=n[r[s]];l=e.__textureid__||"__ecgl_image__"+c.texture.__uid__,e.__textureid__=l,o.put(a+l,c),Lu(c.texture),i&&i(c.texture)}return c.texture}else{var c=o.get(a+e);if(c)c.callbacks?c.callbacks.push(i):i&&i(c.texture);else if(e.match(/.hdr$|^data:application\/octet-stream/)){c={callbacks:[i]};var u=Vr.loadTexture(e,{exposure:n.exposure,fileType:"hdr"},function(){u.dirty(),c.callbacks.forEach(function(p){p&&p(u)}),c.callbacks=null});c.texture=u,o.put(a+e,c)}else{for(var u=new R.Texture2D({image:new Image}),s=0;s<r.length;s++)u[r[s]]=n[r[s]];c={texture:u,callbacks:[i]};var f=u.image;f.onload=function(){u.image=f,Lu(u),u.dirty(),c.callbacks.forEach(function(g){g&&g(u)}),c.callbacks=null},f.crossOrigin="Anonymous",f.src=e,u.image=W_(),o.put(a+e,c)}return c.texture}};R.createAmbientCubemap=function(e,t,n,i){e=e||{};var r=e.texture,a=Ye.firstNotNull(e.exposure,1),s=new f_({intensity:Ye.firstNotNull(e.specularIntensity,1)}),o=new p_({intensity:Ye.firstNotNull(e.diffuseIntensity,1),coefficients:[.844,.712,.691,-.037,.083,.167,.343,.288,.299,-.041,-.021,-.009,-.003,-.041,-.064,-.011,-.007,-.004,-.031,.034,.081,-.06,-.049,-.06,.046,.056,.05]});return s.cubemap=R.loadTexture(r,n,{exposure:a},function(){s.cubemap.flipY=!1,s.prefilter(t,32),o.coefficients=fp.projectEnvironmentMap(t,s.cubemap,{lod:1}),i&&i()}),{specular:s,diffuse:o}};R.createBlankTexture=Vr.createBlank;R.isImage=pp;R.additiveBlend=function(e){e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE)};R.parseColor=function(e,t){return e instanceof Array?(t||(t=[]),t[0]=e[0],t[1]=e[1],t[2]=e[2],e.length>3?t[3]=e[3]:t[3]=1,t):(t=kd(e||"#000",t)||[0,0,0,0],t[0]/=255,t[1]/=255,t[2]/=255,t)};R.directionFromAlphaBeta=function(e,t){var n=e/180*Math.PI+Math.PI/2,i=-t/180*Math.PI+Math.PI/2,r=[],a=Math.sin(n);return r[0]=a*Math.cos(i),r[1]=-Math.cos(n),r[2]=a*Math.sin(i),r};R.getShadowResolution=function(e){var t=1024;switch(e){case"low":t=512;break;case"medium":break;case"high":t=2048;break;case"ultra":t=4096;break}return t};R.COMMON_SHADERS=["lambert","color","realistic","hatching","shadow"];R.createShader=function(e){e==="ecgl.shadow"&&(e="ecgl.displayShadow");var t=le.source(e+".vertex"),n=le.source(e+".fragment");t||console.error("Vertex shader of '%s' not exits",e),n||console.error("Fragment shader of '%s' not exits",e);var i=new le(t,n);return i.name=e,i};R.createMaterial=function(e,t){t instanceof Array||(t=[t]);var n=R.createShader(e),i=new Wn({shader:n});return t.forEach(function(r){typeof r=="string"&&i.define(r)}),i};R.setMaterialFromModel=function(e,t,n,i){t.autoUpdateTextureStatus=!1;var r=n.getModel(e+"Material"),a=r.get("detailTexture"),s=Ye.firstNotNull(r.get("textureTiling"),1),o=Ye.firstNotNull(r.get("textureOffset"),0);typeof s=="number"&&(s=[s,s]),typeof o=="number"&&(o=[o,o]);var l=s[0]>1||s[1]>1?R.Texture.REPEAT:R.Texture.CLAMP_TO_EDGE,c={anisotropic:8,wrapS:l,wrapT:l};if(e==="realistic"){var h=r.get("roughness"),u=r.get("metalness");u!=null?isNaN(u)&&(t.setTextureImage("metalnessMap",u,i,c),u=Ye.firstNotNull(r.get("metalnessAdjust"),.5)):u=0,h!=null?isNaN(h)&&(t.setTextureImage("roughnessMap",h,i,c),h=Ye.firstNotNull(r.get("roughnessAdjust"),.5)):h=.5;var f=r.get("normalTexture");t.setTextureImage("detailMap",a,i,c),t.setTextureImage("normalMap",f,i,c),t.set({roughness:h,metalness:u,detailUvRepeat:s,detailUvOffset:o})}else if(e==="lambert")t.setTextureImage("detailMap",a,i,c),t.set({detailUvRepeat:s,detailUvOffset:o});else if(e==="color")t.setTextureImage("detailMap",a,i,c),t.set({detailUvRepeat:s,detailUvOffset:o});else if(e==="hatching"){var d=r.get("hatchingTextures")||[];d.length<6;for(var p=0;p<6;p++)t.setTextureImage("hatch"+(p+1),d[p],i,{anisotropic:8,wrapS:R.Texture.REPEAT,wrapT:R.Texture.REPEAT});t.set({detailUvRepeat:s,detailUvOffset:o})}};R.updateVertexAnimation=function(e,t,n,i){var r=i.get("animation"),a=i.get("animationDurationUpdate"),s=i.get("animationEasingUpdate"),o=n.shadowDepthMaterial;if(r&&t&&a>0&&t.geometry.vertexCount===n.geometry.vertexCount){n.material.define("vertex","VERTEX_ANIMATION"),n.ignorePreZ=!0,o&&o.define("vertex","VERTEX_ANIMATION");for(var l=0;l<e.length;l++)n.geometry.attributes[e[l][0]].value=t.geometry.attributes[e[l][1]].value;n.geometry.dirty(),n.__percent=0,n.material.set("percent",0),n.stopAnimation(),n.animate().when(a,{__percent:1}).during(function(){n.material.set("percent",n.__percent),o&&o.set("percent",n.__percent)}).done(function(){n.ignorePreZ=!1,n.material.undefine("vertex","VERTEX_ANIMATION"),o&&o.undefine("vertex","VERTEX_ANIMATION")}).start(s)}else n.material.undefine("vertex","VERTEX_ANIMATION"),o&&o.undefine("vertex","VERTEX_ANIMATION")};var xt=function(e,t){this.id=e,this.zr=t;try{this.renderer=new Ss({clearBit:0,devicePixelRatio:t.painter.dpr,preserveDrawingBuffer:!0,premultipliedAlpha:!0}),this.renderer.resize(t.painter.getWidth(),t.painter.getHeight())}catch(i){this.renderer=null,this.dom=document.createElement("div"),this.dom.style.cssText="position:absolute; left: 0; top: 0; right: 0; bottom: 0;",this.dom.className="ecgl-nowebgl",this.dom.innerHTML="Sorry, your browser does not support WebGL",console.error(i);return}this.onglobalout=this.onglobalout.bind(this),t.on("globalout",this.onglobalout),this.dom=this.renderer.canvas;var n=this.dom.style;n.position="absolute",n.left="0",n.top="0",this.views=[],this._picking=new _g({renderer:this.renderer}),this._viewsToDispose=[],this._accumulatingId=0,this._zrEventProxy=new Wd({shape:{x:-1,y:-1,width:2,height:2},__isGLToZRProxy:!0}),this._backgroundColor=null,this._disposed=!1};xt.prototype.setUnpainted=function(){};xt.prototype.addView=function(e){if(e.layer!==this){var t=this._viewsToDispose.indexOf(e);t>=0&&this._viewsToDispose.splice(t,1),this.views.push(e),e.layer=this;var n=this.zr;e.scene.traverse(function(i){i.__zr=n,i.addAnimatorsToZr&&i.addAnimatorsToZr(n)})}};function mp(e){var t=e.__zr;e.__zr=null,t&&e.removeAnimatorsFromZr&&e.removeAnimatorsFromZr(t)}xt.prototype.removeView=function(e){if(e.layer===this){var t=this.views.indexOf(e);t>=0&&(this.views.splice(t,1),e.scene.traverse(mp,this),e.layer=null,this._viewsToDispose.push(e))}};xt.prototype.removeViewsAll=function(){this.views.forEach(function(e){e.scene.traverse(mp,this),e.layer=null,this._viewsToDispose.push(e)},this),this.views.length=0};xt.prototype.resize=function(e,t){var n=this.renderer;n.resize(e,t)};xt.prototype.clear=function(){var e=this.renderer.gl,t=this._backgroundColor||[0,0,0,0];e.clearColor(t[0],t[1],t[2],t[3]),e.depthMask(!0),e.colorMask(!0,!0,!0,!0),e.clear(e.DEPTH_BUFFER_BIT|e.COLOR_BUFFER_BIT)};xt.prototype.clearDepth=function(){var e=this.renderer.gl;e.clear(e.DEPTH_BUFFER_BIT)};xt.prototype.clearColor=function(){var e=this.renderer.gl;e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT)};xt.prototype.needsRefresh=function(){this.zr.refresh()};xt.prototype.refresh=function(e){this._backgroundColor=e?R.parseColor(e):[0,0,0,0],this.renderer.clearColor=this._backgroundColor;for(var t=0;t<this.views.length;t++)this.views[t].prepareRender(this.renderer);this._doRender(!1),this._trackAndClean();for(var t=0;t<this._viewsToDispose.length;t++)this._viewsToDispose[t].dispose(this.renderer);this._viewsToDispose.length=0,this._startAccumulating()};xt.prototype.renderToCanvas=function(e){this._startAccumulating(!0),e.drawImage(this.dom,0,0,e.canvas.width,e.canvas.height)};xt.prototype._doRender=function(e){this.clear(),this.renderer.saveViewport();for(var t=0;t<this.views.length;t++)this.views[t].render(this.renderer,e);this.renderer.restoreViewport()};xt.prototype._stopAccumulating=function(){this._accumulatingId=0,clearTimeout(this._accumulatingTimeout)};var X_=1;xt.prototype._startAccumulating=function(e){var t=this;this._stopAccumulating();for(var n=!1,i=0;i<this.views.length;i++)n=this.views[i].needsAccumulate()||n;if(!n)return;function r(a){if(!(!t._accumulatingId||a!==t._accumulatingId)){for(var s=!0,o=0;o<t.views.length;o++)s=t.views[o].isAccumulateFinished()&&n;s||(t._doRender(!0),e?r(a):Hc(function(){r(a)}))}}this._accumulatingId=X_++,e?r(t._accumulatingId):this._accumulatingTimeout=setTimeout(function(){r(t._accumulatingId)},50)};xt.prototype._trackAndClean=function(){var e=[],t=[];this._textureList&&(Ko(this._textureList),Ko(this._geometriesList));for(var n=0;n<this.views.length;n++)Y_(this.views[n].scene,e,t);this._textureList&&($o(this.renderer,this._textureList),$o(this.renderer,this._geometriesList)),this._textureList=e,this._geometriesList=t};function Ko(e){for(var t=0;t<e.length;t++)e[t].__used__=0}function $o(e,t){for(var n=0;n<t.length;n++)t[n].__used__||t[n].dispose(e)}function co(e,t){e.__used__=e.__used__||0,e.__used__++,e.__used__===1&&t.push(e)}function Y_(e,t,n){var i,r;e.traverse(function(s){if(s.isRenderable()){var o=s.geometry,l=s.material;if(l!==i)for(var c=l.getTextureUniforms(),h=0;h<c.length;h++){var u=c[h],f=l.uniforms[u].value;if(f){if(f instanceof oe)co(f,t);else if(f instanceof Array)for(var d=0;d<f.length;d++)f[d]instanceof oe&&co(f[d],t)}}o!==r&&co(o,n),i=l,r=o}});for(var a=0;a<e.lights.length;a++)e.lights[a].cubemap&&co(e.lights[a].cubemap,t)}xt.prototype.dispose=function(){this._disposed||(this._stopAccumulating(),this._textureList&&(Ko(this._textureList),Ko(this._geometriesList),$o(this.renderer,this._textureList),$o(this.renderer,this._geometriesList)),this.zr.off("globalout",this.onglobalout),this._disposed=!0)};xt.prototype.onmousedown=function(e){if(!(e.target&&e.target.__isGLToZRProxy)){e=e.event;var t=this.pickObject(e.offsetX,e.offsetY);t&&(this._dispatchEvent("mousedown",e,t),this._dispatchDataEvent("mousedown",e,t)),this._downX=e.offsetX,this._downY=e.offsetY}};xt.prototype.onmousemove=function(e){if(!(e.target&&e.target.__isGLToZRProxy)){e=e.event;var t=this.pickObject(e.offsetX,e.offsetY),n=t&&t.target,i=this._hovered;this._hovered=t,i&&n!==i.target&&(i.relatedTarget=n,this._dispatchEvent("mouseout",e,i),this.zr.setCursorStyle("default")),this._dispatchEvent("mousemove",e,t),t&&(this.zr.setCursorStyle("pointer"),(!i||n!==i.target)&&this._dispatchEvent("mouseover",e,t)),this._dispatchDataEvent("mousemove",e,t)}};xt.prototype.onmouseup=function(e){if(!(e.target&&e.target.__isGLToZRProxy)){e=e.event;var t=this.pickObject(e.offsetX,e.offsetY);t&&(this._dispatchEvent("mouseup",e,t),this._dispatchDataEvent("mouseup",e,t)),this._upX=e.offsetX,this._upY=e.offsetY}};xt.prototype.onclick=xt.prototype.dblclick=function(e){if(!(e.target&&e.target.__isGLToZRProxy)){var t=this._upX-this._downX,n=this._upY-this._downY;if(!(Math.sqrt(t*t+n*n)>20)){e=e.event;var i=this.pickObject(e.offsetX,e.offsetY);i&&(this._dispatchEvent(e.type,e,i),this._dispatchDataEvent(e.type,e,i));var r=this._clickToSetFocusPoint(e);if(r){var a=r.view.setDOFFocusOnPoint(r.distance);a&&this.zr.refresh()}}}};xt.prototype._clickToSetFocusPoint=function(e){for(var t=this.renderer,n=t.viewport,i=this.views.length-1;i>=0;i--){var r=this.views[i];if(r.hasDOF()&&r.containPoint(e.offsetX,e.offsetY)){this._picking.scene=r.scene,this._picking.camera=r.camera,t.viewport=r.viewport;var a=this._picking.pick(e.offsetX,e.offsetY,!0);if(a)return a.view=r,a}}t.viewport=n};xt.prototype.onglobalout=function(e){var t=this._hovered;t&&this._dispatchEvent("mouseout",e,{target:t.target})};xt.prototype.pickObject=function(e,t){for(var n=[],i=this.renderer,r=i.viewport,a=0;a<this.views.length;a++){var s=this.views[a];s.containPoint(e,t)&&(this._picking.scene=s.scene,this._picking.camera=s.camera,i.viewport=s.viewport,this._picking.pickAll(e,t,n))}return i.viewport=r,n.sort(function(o,l){return o.distance-l.distance}),n[0]};xt.prototype._dispatchEvent=function(e,t,n){n||(n={});var i=n.target;for(n.cancelBubble=!1,n.event=t,n.type=e,n.offsetX=t.offsetX,n.offsetY=t.offsetY;i&&(i.trigger(e,n),i=i.getParent(),!n.cancelBubble););this._dispatchToView(e,n)};xt.prototype._dispatchDataEvent=function(e,t,n){var i=n&&n.target,r=i&&i.dataIndex,a=i&&i.seriesIndex,s=i&&i.eventData,o=!1,l=this._zrEventProxy;l.x=t.offsetX,l.y=t.offsetY,l.update();var c={target:l};const h=dv(l);e==="mousemove"&&(r!=null?r!==this._lastDataIndex&&(parseInt(this._lastDataIndex,10)>=0&&(h.dataIndex=this._lastDataIndex,h.seriesIndex=this._lastSeriesIndex,this.zr.handler.dispatchToElement(c,"mouseout",t)),o=!0):s!=null&&s!==this._lastEventData&&(this._lastEventData!=null&&(h.eventData=this._lastEventData,this.zr.handler.dispatchToElement(c,"mouseout",t)),o=!0),this._lastEventData=s,this._lastDataIndex=r,this._lastSeriesIndex=a),h.eventData=s,h.dataIndex=r,h.seriesIndex=a,(s!=null||parseInt(r,10)>=0&&parseInt(a,10)>=0)&&(this.zr.handler.dispatchToElement(c,e,t),o&&this.zr.handler.dispatchToElement(c,"mouseover",t))};xt.prototype._dispatchToView=function(e,t){for(var n=0;n<this.views.length;n++)this.views[n].containPoint(t.offsetX,t.offsetY)&&this.views[n].trigger(e,t)};Object.assign(xt.prototype,dh);const vp=xt;var q_=["bar3D","line3D","map3D","scatter3D","surface","lines3D","scatterGL","scatter3D"];function _s(e,t){if(e&&e[t]&&(e[t].normal||e[t].emphasis)){var n=e[t].normal,i=e[t].emphasis;n&&(e[t]=n),i&&(e.emphasis=e.emphasis||{},e.emphasis[t]=i)}}function j_(e){_s(e,"itemStyle"),_s(e,"lineStyle"),_s(e,"areaStyle"),_s(e,"label")}function ho(e){e&&(e instanceof Array||(e=[e]),mi(e,function(t){if(t.axisLabel){var n=t.axisLabel;Object.assign(n,n.textStyle),n.textStyle=null}}))}function Z_(e){mi(e.series,function(t){pv(q_,t.type)>=0&&(j_(t),t.coordinateSystem==="mapbox"&&(t.coordinateSystem="mapbox3D",e.mapbox3D=e.mapbox))}),ho(e.xAxis3D),ho(e.yAxis3D),ho(e.zAxis3D),ho(e.grid3D),_s(e.geo3D)}function gp(e){this._layers={},this._zr=e}gp.prototype.update=function(e,t){var n=this,i=t.getZr();if(!i.getWidth()||!i.getHeight()){console.warn("Dom has no width or height");return}function r(o){i.setSleepAfterStill(0);var l;o.coordinateSystem&&o.coordinateSystem.model,l=o.get("zlevel");var c=n._layers,h=c[l];if(!h){if(h=c[l]=new vp("gl-"+l,i),i.painter.isSingleCanvas()){h.virtual=!0;var u=new _v({z:1e4,style:{image:h.renderer.canvas},silent:!0});h.__hostImage=u,i.add(u)}i.painter.insertLayer(l,h)}return h.__hostImage&&h.__hostImage.setStyle({width:h.renderer.getWidth(),height:h.renderer.getHeight()}),h}function a(o,l){o&&o.traverse(function(c){c.isRenderable&&c.isRenderable()&&(c.ignorePicking=c.$ignorePicking!=null?c.$ignorePicking:l)})}for(var s in this._layers)this._layers[s].removeViewsAll();e.eachComponent(function(o,l){if(o!=="series"){var c=t.getViewOfComponentModel(l),h=l.coordinateSystem;if(c.__ecgl__){var u;if(h){if(!h.viewGL){console.error("Can't find viewGL in coordinateSystem of component "+l.id);return}u=h.viewGL}else{if(!l.viewGL){console.error("Can't find viewGL of component "+l.id);return}u=h.viewGL}var u=h.viewGL,f=r(l);f.addView(u),c.afterRender&&c.afterRender(l,e,t,f),a(c.groupGL,l.get("silent"))}}}),e.eachSeries(function(o){var l=t.getViewOfSeriesModel(o),c=o.coordinateSystem;if(l.__ecgl__){if(c&&!c.viewGL&&!l.viewGL){console.error("Can't find viewGL of series "+l.id);return}var h=c&&c.viewGL||l.viewGL,u=r(o);u.addView(h),l.afterRender&&l.afterRender(o,e,t,u),a(l.groupGL,o.get("silent"))}})};mv(function(e){var t=e.getZr(),n=t.painter.dispose;t.painter.dispose=function(){typeof this.eachOtherLayer=="function"&&this.eachOtherLayer(function(i){i instanceof vp&&i.dispose()}),n.call(this)},t.painter.getRenderedCanvas=function(i){if(i=i||{},this._singleCanvas)return this._layers[0].dom;var r=document.createElement("canvas"),a=i.pixelRatio||this.dpr;r.width=this.getWidth()*a,r.height=this.getHeight()*a;var s=r.getContext("2d");s.dpr=a,s.clearRect(0,0,r.width,r.height),i.backgroundColor&&(s.fillStyle=i.backgroundColor,s.fillRect(0,0,r.width,r.height));var o=this.storage.getDisplayList(!0),l={},c,h=this;function u(g,v){var m=h._zlevelList;g==null&&(g=-1/0);for(var y,_=0;_<m.length;_++){var x=m[_],A=h._layers[x];if(!A.__builtin__&&x>g&&x<v){y=A;break}}y&&y.renderToCanvas&&(s.save(),y.renderToCanvas(s),s.restore())}for(var f={ctx:s},d=0;d<o.length;d++){var p=o[d];p.zlevel!==c&&(u(c,p.zlevel),c=p.zlevel),this._doPaintEl(p,f,!0,null,l)}return u(c,1/0),r}});vv(function(e,t){var n=t.getZr(),i=n.__egl=n.__egl||new gp(n);i.update(e,t)});gv(Z_);const _l={defaultOption:{viewControl:{projection:"perspective",autoRotate:!1,autoRotateDirection:"cw",autoRotateSpeed:10,autoRotateAfterStill:3,damping:.8,rotateSensitivity:1,zoomSensitivity:1,panSensitivity:1,panMouseButton:"middle",rotateMouseButton:"left",distance:150,minDistance:40,maxDistance:400,orthographicSize:150,maxOrthographicSize:400,minOrthographicSize:20,center:[0,0,0],alpha:0,beta:0,minAlpha:-90,maxAlpha:90}},setView:function(e){e=e||{},this.option.viewControl=this.option.viewControl||{},e.alpha!=null&&(this.option.viewControl.alpha=e.alpha),e.beta!=null&&(this.option.viewControl.beta=e.beta),e.distance!=null&&(this.option.viewControl.distance=e.distance),e.center!=null&&(this.option.viewControl.center=e.center)}},Ka={defaultOption:{postEffect:{enable:!1,bloom:{enable:!0,intensity:.1},depthOfField:{enable:!1,focalRange:20,focalDistance:50,blurRadius:10,fstop:2.8,quality:"medium"},screenSpaceAmbientOcclusion:{enable:!1,radius:2,quality:"medium",intensity:1},screenSpaceReflection:{enable:!1,quality:"medium",maxRoughness:.8},colorCorrection:{enable:!0,exposure:0,brightness:0,contrast:1,saturation:1,lookupTexture:""},edge:{enable:!1},FXAA:{enable:!1}},temporalSuperSampling:{enable:"auto"}}},$a={defaultOption:{light:{main:{shadow:!1,shadowQuality:"high",color:"#fff",intensity:1,alpha:0,beta:0},ambient:{color:"#fff",intensity:.2},ambientCubemap:{texture:null,exposure:1,diffuseIntensity:.5,specularIntensity:.5}}}};var xl=ja.extend({type:"grid3D",dependencies:["xAxis3D","yAxis3D","zAxis3D"],defaultOption:{show:!0,zlevel:-10,left:0,top:0,width:"100%",height:"100%",environment:"auto",boxWidth:100,boxHeight:100,boxDepth:100,axisPointer:{show:!0,lineStyle:{color:"rgba(0, 0, 0, 0.8)",width:1},label:{show:!0,formatter:null,margin:8,textStyle:{fontSize:14,color:"#fff",backgroundColor:"rgba(0,0,0,0.5)",padding:3,borderRadius:3}}},axisLine:{show:!0,lineStyle:{color:"#333",width:2,type:"solid"}},axisTick:{show:!0,inside:!1,length:3,lineStyle:{width:1}},axisLabel:{show:!0,inside:!1,rotate:0,margin:8,textStyle:{fontSize:12}},splitLine:{show:!0,lineStyle:{color:["#ccc"],width:1,type:"solid"}},splitArea:{show:!1,areaStyle:{color:["rgba(250,250,250,0.3)","rgba(200,200,200,0.3)"]}},light:{main:{alpha:30,beta:40},ambient:{intensity:.4}},viewControl:{alpha:20,beta:40,autoRotate:!1,distance:200,minDistance:40,maxDistance:400}}});pt(xl.prototype,_l);pt(xl.prototype,Ka);pt(xl.prototype,$a);const K_=xl;var hs=Ye.firstNotNull,Pu={left:0,middle:1,right:2};function Du(e){return e instanceof Array||(e=[e,e]),e}var _p=an.extend(function(){return{zr:null,viewGL:null,_center:new $,minDistance:.5,maxDistance:1.5,maxOrthographicSize:300,minOrthographicSize:30,minAlpha:-90,maxAlpha:90,minBeta:-1/0,maxBeta:1/0,autoRotateAfterStill:0,autoRotateDirection:"cw",autoRotateSpeed:60,damping:.8,rotateSensitivity:1,zoomSensitivity:1,panSensitivity:1,panMouseButton:"middle",rotateMouseButton:"left",_mode:"rotate",_camera:null,_needsUpdate:!1,_rotating:!1,_phi:0,_theta:0,_mouseX:0,_mouseY:0,_rotateVelocity:new In,_panVelocity:new In,_distance:500,_zoomSpeed:0,_stillTimeout:0,_animators:[]}},function(){["_mouseDownHandler","_mouseWheelHandler","_mouseMoveHandler","_mouseUpHandler","_pinchHandler","_contextMenuHandler","_update"].forEach(function(e){this[e]=this[e].bind(this)},this)},{init:function(){var e=this.zr;e&&(e.on("mousedown",this._mouseDownHandler),e.on("globalout",this._mouseUpHandler),e.on("mousewheel",this._mouseWheelHandler),e.on("pinch",this._pinchHandler),e.animation.on("frame",this._update),e.dom.addEventListener("contextmenu",this._contextMenuHandler))},dispose:function(){var e=this.zr;e&&(e.off("mousedown",this._mouseDownHandler),e.off("mousemove",this._mouseMoveHandler),e.off("mouseup",this._mouseUpHandler),e.off("mousewheel",this._mouseWheelHandler),e.off("pinch",this._pinchHandler),e.off("globalout",this._mouseUpHandler),e.dom.removeEventListener("contextmenu",this._contextMenuHandler),e.animation.off("frame",this._update)),this.stopAllAnimation()},getDistance:function(){return this._distance},setDistance:function(e){this._distance=e,this._needsUpdate=!0},getOrthographicSize:function(){return this._orthoSize},setOrthographicSize:function(e){this._orthoSize=e,this._needsUpdate=!0},getAlpha:function(){return this._theta/Math.PI*180},getBeta:function(){return-this._phi/Math.PI*180},getCenter:function(){return this._center.toArray()},setAlpha:function(e){e=Math.max(Math.min(this.maxAlpha,e),this.minAlpha),this._theta=e/180*Math.PI,this._needsUpdate=!0},setBeta:function(e){e=Math.max(Math.min(this.maxBeta,e),this.minBeta),this._phi=-e/180*Math.PI,this._needsUpdate=!0},setCenter:function(e){this._center.setArray(e)},setViewGL:function(e){this.viewGL=e},getCamera:function(){return this.viewGL.camera},setFromViewControlModel:function(e,t){t=t||{};var n=t.baseDistance||0,i=t.baseOrthoSize||1,r=e.get("projection");r!=="perspective"&&r!=="orthographic"&&r!=="isometric"&&(r="perspective"),this._projection=r,this.viewGL.setProjection(r);var a=e.get("distance")+n,s=e.get("orthographicSize")+i;[["damping",.8],["autoRotate",!1],["autoRotateAfterStill",3],["autoRotateDirection","cw"],["autoRotateSpeed",10],["minDistance",30],["maxDistance",400],["minOrthographicSize",30],["maxOrthographicSize",300],["minAlpha",-90],["maxAlpha",90],["minBeta",-1/0],["maxBeta",1/0],["rotateSensitivity",1],["zoomSensitivity",1],["panSensitivity",1],["panMouseButton","left"],["rotateMouseButton","middle"]].forEach(function(f){this[f[0]]=hs(e.get(f[0]),f[1])},this),this.minDistance+=n,this.maxDistance+=n,this.minOrthographicSize+=i,this.maxOrthographicSize+=i;var o=e.ecModel,l={};["animation","animationDurationUpdate","animationEasingUpdate"].forEach(function(f){l[f]=hs(e.get(f),o&&o.get(f))});var c=hs(t.alpha,e.get("alpha"))||0,h=hs(t.beta,e.get("beta"))||0,u=hs(t.center,e.get("center"))||[0,0,0];l.animation&&l.animationDurationUpdate>0&&this._notFirst?this.animateTo({alpha:c,beta:h,center:u,distance:a,orthographicSize:s,easing:l.animationEasingUpdate,duration:l.animationDurationUpdate}):(this.setDistance(a),this.setAlpha(c),this.setBeta(h),this.setCenter(u),this.setOrthographicSize(s)),this._notFirst=!0,this._validateProperties()},_validateProperties:function(){},animateTo:function(e){var t=this.zr,n=this,i={},r={};return e.distance!=null&&(i.distance=this.getDistance(),r.distance=e.distance),e.orthographicSize!=null&&(i.orthographicSize=this.getOrthographicSize(),r.orthographicSize=e.orthographicSize),e.alpha!=null&&(i.alpha=this.getAlpha(),r.alpha=e.alpha),e.beta!=null&&(i.beta=this.getBeta(),r.beta=e.beta),e.center!=null&&(i.center=this.getCenter(),r.center=e.center),this._addAnimator(t.animation.animate(i).when(e.duration||1e3,r).during(function(){i.alpha!=null&&n.setAlpha(i.alpha),i.beta!=null&&n.setBeta(i.beta),i.distance!=null&&n.setDistance(i.distance),i.center!=null&&n.setCenter(i.center),i.orthographicSize!=null&&n.setOrthographicSize(i.orthographicSize),n._needsUpdate=!0})).start(e.easing||"linear")},stopAllAnimation:function(){for(var e=0;e<this._animators.length;e++)this._animators[e].stop();this._animators.length=0},update:function(){this._needsUpdate=!0,this._update(20)},_isAnimating:function(){return this._animators.length>0},_update:function(e){if(this._rotating){var t=(this.autoRotateDirection==="cw"?1:-1)*this.autoRotateSpeed/180*Math.PI;this._phi-=t*e/1e3,this._needsUpdate=!0}else this._rotateVelocity.len()>0&&(this._needsUpdate=!0);(Math.abs(this._zoomSpeed)>.1||this._panVelocity.len()>0)&&(this._needsUpdate=!0),this._needsUpdate&&(e=Math.min(e,50),this._updateDistanceOrSize(e),this._updatePan(e),this._updateRotate(e),this._updateTransform(),this.getCamera().update(),this.zr&&this.zr.refresh(),this.trigger("update"),this._needsUpdate=!1)},_updateRotate:function(e){var t=this._rotateVelocity;this._phi=t.y*e/20+this._phi,this._theta=t.x*e/20+this._theta,this.setAlpha(this.getAlpha()),this.setBeta(this.getBeta()),this._vectorDamping(t,Math.pow(this.damping,e/16))},_updateDistanceOrSize:function(e){this._projection==="perspective"?this._setDistance(this._distance+this._zoomSpeed*e/20):this._setOrthoSize(this._orthoSize+this._zoomSpeed*e/20),this._zoomSpeed*=Math.pow(this.damping,e/16)},_setDistance:function(e){this._distance=Math.max(Math.min(e,this.maxDistance),this.minDistance)},_setOrthoSize:function(e){this._orthoSize=Math.max(Math.min(e,this.maxOrthographicSize),this.minOrthographicSize);var t=this.getCamera(),n=this._orthoSize,i=n/this.viewGL.viewport.height*this.viewGL.viewport.width;t.left=-i/2,t.right=i/2,t.top=n/2,t.bottom=-n/2},_updatePan:function(e){var t=this._panVelocity,n=this._distance,i=this.getCamera(),r=i.worldTransform.y,a=i.worldTransform.x;this._center.scaleAndAdd(a,-t.x*n/200).scaleAndAdd(r,-t.y*n/200),this._vectorDamping(t,0)},_updateTransform:function(){var e=this.getCamera(),t=new $,n=this._theta+Math.PI/2,i=this._phi+Math.PI/2,r=Math.sin(n);t.x=r*Math.cos(i),t.y=-Math.cos(n),t.z=r*Math.sin(i),e.position.copy(this._center).scaleAndAdd(t,this._distance),e.rotation.identity().rotateY(-this._phi).rotateX(-this._theta)},_startCountingStill:function(){clearTimeout(this._stillTimeout);var e=this.autoRotateAfterStill,t=this;!isNaN(e)&&e>0&&(this._stillTimeout=setTimeout(function(){t._rotating=!0},e*1e3))},_vectorDamping:function(e,t){var n=e.len();n=n*t,n<1e-4&&(n=0),e.normalize().scale(n)},_decomposeTransform:function(){if(this.getCamera()){this.getCamera().updateWorldTransform();var e=this.getCamera().worldTransform.z,t=Math.asin(e.y),n=Math.atan2(e.x,e.z);this._theta=t,this._phi=-n,this.setBeta(this.getBeta()),this.setAlpha(this.getAlpha()),this.getCamera().aspect?this._setDistance(this.getCamera().position.dist(this._center)):this._setOrthoSize(this.getCamera().top-this.getCamera().bottom)}},_mouseDownHandler:function(e){if(!e.target&&!this._isAnimating()){var t=e.offsetX,n=e.offsetY;this.viewGL&&!this.viewGL.containPoint(t,n)||(this.zr.on("mousemove",this._mouseMoveHandler),this.zr.on("mouseup",this._mouseUpHandler),e.event.targetTouches?e.event.targetTouches.length===1&&(this._mode="rotate"):e.event.button===Pu[this.rotateMouseButton]?this._mode="rotate":e.event.button===Pu[this.panMouseButton]?this._mode="pan":this._mode="",this._rotateVelocity.set(0,0),this._rotating=!1,this.autoRotate&&this._startCountingStill(),this._mouseX=e.offsetX,this._mouseY=e.offsetY)}},_mouseMoveHandler:function(e){if(!(e.target&&e.target.__isGLToZRProxy)&&!this._isAnimating()){var t=Du(this.panSensitivity),n=Du(this.rotateSensitivity);this._mode==="rotate"?(this._rotateVelocity.y=(e.offsetX-this._mouseX)/this.zr.getHeight()*2*n[0],this._rotateVelocity.x=(e.offsetY-this._mouseY)/this.zr.getWidth()*2*n[1]):this._mode==="pan"&&(this._panVelocity.x=(e.offsetX-this._mouseX)/this.zr.getWidth()*t[0]*400,this._panVelocity.y=(-e.offsetY+this._mouseY)/this.zr.getHeight()*t[1]*400),this._mouseX=e.offsetX,this._mouseY=e.offsetY,e.event.preventDefault()}},_mouseWheelHandler:function(e){if(!this._isAnimating()){var t=e.event.wheelDelta||-e.event.detail;this._zoomHandler(e,t)}},_pinchHandler:function(e){this._isAnimating()||(this._zoomHandler(e,e.pinchScale>1?1:-1),this._mode="")},_zoomHandler:function(e,t){if(t!==0){var n=e.offsetX,i=e.offsetY;if(!(this.viewGL&&!this.viewGL.containPoint(n,i))){var r;this._projection==="perspective"?r=Math.max(Math.max(Math.min(this._distance-this.minDistance,this.maxDistance-this._distance))/20,.5):r=Math.max(Math.max(Math.min(this._orthoSize-this.minOrthographicSize,this.maxOrthographicSize-this._orthoSize))/20,.5),this._zoomSpeed=(t>0?-1:1)*r*this.zoomSensitivity,this._rotating=!1,this.autoRotate&&this._mode==="rotate"&&this._startCountingStill(),e.event.preventDefault()}}},_mouseUpHandler:function(){this.zr.off("mousemove",this._mouseMoveHandler),this.zr.off("mouseup",this._mouseUpHandler)},_isRightMouseButtonUsed:function(){return this.rotateMouseButton==="right"||this.panMouseButton==="right"},_contextMenuHandler:function(e){this._isRightMouseButtonUsed()&&e.preventDefault()},_addAnimator:function(e){var t=this._animators;return t.push(e),e.done(function(){var n=t.indexOf(e);n>=0&&t.splice(n,1)}),e}});Object.defineProperty(_p.prototype,"autoRotate",{get:function(e){return this._autoRotate},set:function(e){this._autoRotate=e,this._rotating=e}});const yl=_p,Vs={convertToDynamicArray:function(e){e&&this.resetOffset();var t=this.attributes;for(var n in t)e||!t[n].value?t[n].value=[]:t[n].value=Array.prototype.slice.call(t[n].value);e||!this.indices?this.indices=[]:this.indices=Array.prototype.slice.call(this.indices)},convertToTypedArray:function(){var e=this.attributes;for(var t in e)e[t].value&&e[t].value.length>0?e[t].value=new Float32Array(e[t].value):e[t].value=null;this.indices&&this.indices.length>0&&(this.indices=this.vertexCount>65535?new Uint32Array(this.indices):new Uint16Array(this.indices)),this.dirty()}},Ot={vec2:Le,vec3:U,vec4:_e,mat2:Pt,mat2d:Ft,mat3:Re,mat4:ne,quat:Oe};var Zl=Ot.vec3,Nu=[[0,0],[1,1]],pr=je.extend(function(){return{segmentScale:1,dynamic:!0,useNativeLine:!0,attributes:{position:new je.Attribute("position","float",3,"POSITION"),positionPrev:new je.Attribute("positionPrev","float",3),positionNext:new je.Attribute("positionNext","float",3),prevPositionPrev:new je.Attribute("prevPositionPrev","float",3),prevPosition:new je.Attribute("prevPosition","float",3),prevPositionNext:new je.Attribute("prevPositionNext","float",3),offset:new je.Attribute("offset","float",1),color:new je.Attribute("color","float",4,"COLOR")}}},{resetOffset:function(){this._vertexOffset=0,this._triangleOffset=0,this._itemVertexOffsets=[]},setVertexCount:function(e){var t=this.attributes;this.vertexCount!==e&&(t.position.init(e),t.color.init(e),this.useNativeLine||(t.positionPrev.init(e),t.positionNext.init(e),t.offset.init(e)),e>65535?this.indices instanceof Uint16Array&&(this.indices=new Uint32Array(this.indices)):this.indices instanceof Uint32Array&&(this.indices=new Uint16Array(this.indices)))},setTriangleCount:function(e){this.triangleCount!==e&&(e===0?this.indices=null:this.indices=this.vertexCount>65535?new Uint32Array(e*3):new Uint16Array(e*3))},_getCubicCurveApproxStep:function(e,t,n,i){var r=Zl.dist(e,t)+Zl.dist(n,t)+Zl.dist(i,n),a=1/(r+1)*this.segmentScale;return a},getCubicCurveVertexCount:function(e,t,n,i){var r=this._getCubicCurveApproxStep(e,t,n,i),a=Math.ceil(1/r);return this.useNativeLine?a*2:a*2+2},getCubicCurveTriangleCount:function(e,t,n,i){var r=this._getCubicCurveApproxStep(e,t,n,i),a=Math.ceil(1/r);return this.useNativeLine?0:a*2},getLineVertexCount:function(){return this.getPolylineVertexCount(Nu)},getLineTriangleCount:function(){return this.getPolylineTriangleCount(Nu)},getPolylineVertexCount:function(e){var t;if(typeof e=="number")t=e;else{var n=typeof e[0]!="number";t=n?e.length:e.length/3}return this.useNativeLine?(t-1)*2:(t-1)*2+2},getPolylineTriangleCount:function(e){var t;if(typeof e=="number")t=e;else{var n=typeof e[0]!="number";t=n?e.length:e.length/3}return this.useNativeLine?0:Math.max(t-1,0)*2},addCubicCurve:function(e,t,n,i,r,a){a==null&&(a=1);for(var s=e[0],o=e[1],l=e[2],c=t[0],h=t[1],u=t[2],f=n[0],d=n[1],p=n[2],g=i[0],v=i[1],m=i[2],y=this._getCubicCurveApproxStep(e,t,n,i),_=y*y,x=_*y,A=3*y,E=3*_,w=6*_,b=6*x,M=s-c*2+f,T=o-h*2+d,P=l-u*2+p,O=(c-f)*3-s+g,D=(h-d)*3-o+v,N=(u-p)*3-l+m,B=s,z=o,Y=l,F=(c-s)*A+M*E+O*x,J=(h-o)*A+T*E+D*x,V=(u-l)*A+P*E+N*x,ce=M*w+O*b,fe=T*w+D*b,ye=P*w+N*b,W=O*b,Q=D*b,de=N*b,se=0,Me=0,Ae=Math.ceil(1/y),Pe=new Float32Array((Ae+1)*3),Pe=[],G=0,Me=0;Me<Ae+1;Me++)Pe[G++]=B,Pe[G++]=z,Pe[G++]=Y,B+=F,z+=J,Y+=V,F+=ce,J+=fe,V+=ye,ce+=W,fe+=Q,ye+=de,se+=y,se>1&&(B=F>0?Math.min(B,g):Math.max(B,g),z=J>0?Math.min(z,v):Math.max(z,v),Y=V>0?Math.min(Y,m):Math.max(Y,m));return this.addPolyline(Pe,r,a)},addLine:function(e,t,n,i){return this.addPolyline([e,t],n,i)},addPolyline:function(e,t,n,i,r){if(e.length){var a=typeof e[0]!="number";if(r==null&&(r=a?e.length:e.length/3),!(r<2)){i==null&&(i=0),n==null&&(n=1),this._itemVertexOffsets.push(this._vertexOffset);var a=typeof e[0]!="number",s=a?typeof t[0]!="number":t.length/4===r,o=this.attributes.position,l=this.attributes.positionPrev,c=this.attributes.positionNext,h=this.attributes.color,u=this.attributes.offset,f=this.indices,d=this._vertexOffset,p,g;n=Math.max(n,.01);for(var v=i;v<r;v++){if(a)p=e[v],s?g=t[v]:g=t;else{var m=v*3;if(p=p||[],p[0]=e[m],p[1]=e[m+1],p[2]=e[m+2],s){var y=v*4;g=g||[],g[0]=t[y],g[1]=t[y+1],g[2]=t[y+2],g[3]=t[y+3]}else g=t}if(this.useNativeLine?v>1&&(o.copy(d,d-1),h.copy(d,d-1),d++):(v<r-1&&(l.set(d+2,p),l.set(d+3,p)),v>0&&(c.set(d-2,p),c.set(d-1,p)),o.set(d,p),o.set(d+1,p),h.set(d,g),h.set(d+1,g),u.set(d,n/2),u.set(d+1,-n/2),d+=2),this.useNativeLine)h.set(d,g),o.set(d,p),d++;else if(v>0){var _=this._triangleOffset*3,f=this.indices;f[_]=d-4,f[_+1]=d-3,f[_+2]=d-2,f[_+3]=d-3,f[_+4]=d-1,f[_+5]=d-2,this._triangleOffset+=2}}if(!this.useNativeLine){var x=this._vertexOffset,A=this._vertexOffset+r*2;l.copy(x,x+2),l.copy(x+1,x+3),c.copy(A-1,A-3),c.copy(A-2,A-4)}return this._vertexOffset=d,this._vertexOffset}}},setItemColor:function(e,t){for(var n=this._itemVertexOffsets[e],i=e<this._itemVertexOffsets.length-1?this._itemVertexOffsets[e+1]:this._vertexOffset,r=n;r<i;r++)this.attributes.color.set(r,t);this.dirty("color")},currentTriangleOffset:function(){return this._triangleOffset},currentVertexOffset:function(){return this._vertexOffset}});fr(pr.prototype,Vs);function Jo(e,t,n,i,r,a,s){this._zr=e,this._x=0,this._y=0,this._rowHeight=0,this.width=i,this.height=r,this.offsetX=t,this.offsetY=n,this.dpr=s,this.gap=a}Jo.prototype={constructor:Jo,clear:function(){this._x=0,this._y=0,this._rowHeight=0},add:function(e,t,n){var i=e.getBoundingRect();t==null&&(t=i.width),n==null&&(n=i.height),t*=this.dpr,n*=this.dpr,this._fitElement(e,t,n);var r=this._x,a=this._y,s=this.width*this.dpr,o=this.height*this.dpr,l=this.gap;if(r+t+l>s&&(r=this._x=0,a+=this._rowHeight+l,this._y=a,this._rowHeight=0),this._x+=t+l,this._rowHeight=Math.max(this._rowHeight,n),a+n+l>o)return null;e.x+=this.offsetX*this.dpr+r,e.y+=this.offsetY*this.dpr+a,this._zr.add(e);var c=[this.offsetX/this.width,this.offsetY/this.height],h=[[r/s+c[0],a/o+c[1]],[(r+t)/s+c[0],(a+n)/o+c[1]]];return h},_fitElement:function(e,t,n){var i=e.getBoundingRect(),r=t/i.width,a=n/i.height;e.x=-i.x*r,e.y=-i.y*a,e.scaleX=r,e.scaleY=a,e.update()}};function Qo(e){e=e||{},e.width=e.width||512,e.height=e.height||512,e.devicePixelRatio=e.devicePixelRatio||1,e.gap=e.gap==null?2:e.gap;var t=document.createElement("canvas");t.width=e.width*e.devicePixelRatio,t.height=e.height*e.devicePixelRatio,this._canvas=t,this._texture=new We({image:t,flipY:!1});var n=this;this._zr=xv(t);var i=this._zr.refreshImmediately;this._zr.refreshImmediately=function(){i.call(this),n._texture.dirty(),n.onupdate&&n.onupdate()},this._dpr=e.devicePixelRatio,this._coords={},this.onupdate=e.onupdate,this._gap=e.gap,this._textureAtlasNodes=[new Jo(this._zr,0,0,e.width,e.height,this._gap,this._dpr)],this._nodeWidth=e.width,this._nodeHeight=e.height,this._currentNodeIdx=0}Qo.prototype={clear:function(){for(var e=0;e<this._textureAtlasNodes.length;e++)this._textureAtlasNodes[e].clear();this._currentNodeIdx=0,this._zr.clear(),this._coords={}},getWidth:function(){return this._width},getHeight:function(){return this._height},getTexture:function(){return this._texture},getDevicePixelRatio:function(){return this._dpr},getZr:function(){return this._zr},_getCurrentNode:function(){return this._textureAtlasNodes[this._currentNodeIdx]},_expand:function(){if(this._currentNodeIdx++,this._textureAtlasNodes[this._currentNodeIdx])return this._textureAtlasNodes[this._currentNodeIdx];var e=4096/this._dpr,t=this._textureAtlasNodes,n=t.length,i=n*this._nodeWidth%e,r=Math.floor(n*this._nodeWidth/e)*this._nodeHeight;if(!(r>=e)){var a=(i+this._nodeWidth)*this._dpr,s=(r+this._nodeHeight)*this._dpr;try{this._zr.resize({width:a,height:s})}catch{this._canvas.width=a,this._canvas.height=s}var o=new Jo(this._zr,i,r,this._nodeWidth,this._nodeHeight,this._gap,this._dpr);return this._textureAtlasNodes.push(o),o}},add:function(e,t,n){if(this._coords[e.id])return this._coords[e.id];var i=this._getCurrentNode().add(e,t,n);if(!i){var r=this._expand();if(!r)return;i=r.add(e,t,n)}return this._coords[e.id]=i,i},getCoordsScale:function(){var e=this._dpr;return[this._nodeWidth/this._canvas.width*e,this._nodeHeight/this._canvas.height*e]},getCoords:function(e){return this._coords[e]},dispose:function(){this._zr.dispose()}};function cr(){}cr.prototype={constructor:cr,setScene:function(e){this._scene=e,this._skybox&&this._skybox.attachScene(this._scene)},initLight:function(e){this._lightRoot=e,this.mainLight=new R.DirectionalLight({shadowBias:.005}),this.ambientLight=new R.AmbientLight,e.add(this.mainLight),e.add(this.ambientLight)},dispose:function(){this._lightRoot&&(this._lightRoot.remove(this.mainLight),this._lightRoot.remove(this.ambientLight))},updateLight:function(e){var t=this.mainLight,n=this.ambientLight,i=e.getModel("light"),r=i.getModel("main"),a=i.getModel("ambient");t.intensity=r.get("intensity"),n.intensity=a.get("intensity"),t.color=R.parseColor(r.get("color")).slice(0,3),n.color=R.parseColor(a.get("color")).slice(0,3);var s=r.get("alpha")||0,o=r.get("beta")||0;t.position.setArray(R.directionFromAlphaBeta(s,o)),t.lookAt(R.Vector3.ZERO),t.castShadow=r.get("shadow"),t.shadowResolution=R.getShadowResolution(r.get("shadowQuality"))},updateAmbientCubemap:function(e,t,n){var i=t.getModel("light.ambientCubemap"),r=i.get("texture");if(r){this._cubemapLightsCache=this._cubemapLightsCache||{};var a=this._cubemapLightsCache[r];if(!a){var s=this;a=this._cubemapLightsCache[r]=R.createAmbientCubemap(i.option,e,n,function(){s._isSkyboxFromAmbientCubemap&&s._skybox.setEnvironmentMap(a.specular.cubemap),n.getZr().refresh()})}this._lightRoot.add(a.diffuse),this._lightRoot.add(a.specular),this._currentCubemapLights=a}else this._currentCubemapLights&&(this._lightRoot.remove(this._currentCubemapLights.diffuse),this._lightRoot.remove(this._currentCubemapLights.specular),this._currentCubemapLights=null)},updateSkybox:function(e,t,n){var i=t.get("environment"),r=this;function a(){return r._skybox=r._skybox||new bs,r._skybox}var s=a();if(i&&i!=="none")if(i==="auto")if(this._isSkyboxFromAmbientCubemap=!0,this._currentCubemapLights){var o=this._currentCubemapLights.specular.cubemap;s.setEnvironmentMap(o),this._scene&&s.attachScene(this._scene),s.material.set("lod",3)}else this._skybox&&this._skybox.detachScene();else if(typeof i=="object"&&i.colorStops||typeof i=="string"&&kd(i)){this._isSkyboxFromAmbientCubemap=!1;var l=new R.Texture2D({anisotropic:8,flipY:!1});s.setEnvironmentMap(l);var c=l.image=document.createElement("canvas");c.width=c.height=16;var h=c.getContext("2d"),u=new Wd({shape:{x:0,y:0,width:16,height:16},style:{fill:i}});Xd(h,u),s.attachScene(this._scene)}else{this._isSkyboxFromAmbientCubemap=!1;var l=R.loadTexture(i,n,{anisotropic:8,flipY:!1});s.setEnvironmentMap(l),s.attachScene(this._scene)}else this._skybox&&this._skybox.detachScene(this._scene),this._skybox=null;var f=t.coordinateSystem;if(this._skybox)if(f&&f.viewGL&&i!=="auto"&&!(i.match&&i.match(/.hdr$/))){var d=f.viewGL.isLinearSpace()?"define":"undefine";this._skybox.material[d]("fragment","SRGB_DECODE")}else this._skybox.material.undefine("fragment","SRGB_DECODE")}};var Mr=Ot.vec3,xp=je.extend(function(){return{segmentScale:1,useNativeLine:!0,attributes:{position:new je.Attribute("position","float",3,"POSITION"),normal:new je.Attribute("normal","float",3,"NORMAL"),color:new je.Attribute("color","float",4,"COLOR")}}},{resetOffset:function(){this._vertexOffset=0,this._faceOffset=0},setQuadCount:function(e){var t=this.attributes,n=this.getQuadVertexCount()*e,i=this.getQuadTriangleCount()*e;this.vertexCount!==n&&(t.position.init(n),t.normal.init(n),t.color.init(n)),this.triangleCount!==i&&(this.indices=n>65535?new Uint32Array(i*3):new Uint16Array(i*3))},getQuadVertexCount:function(){return 4},getQuadTriangleCount:function(){return 2},addQuad:function(){var e=Mr.create(),t=Mr.create(),n=Mr.create(),i=[0,3,1,3,2,1];return function(r,a){var s=this.attributes.position,o=this.attributes.normal,l=this.attributes.color;Mr.sub(e,r[1],r[0]),Mr.sub(t,r[2],r[1]),Mr.cross(n,e,t),Mr.normalize(n,n);for(var c=0;c<4;c++)s.set(this._vertexOffset+c,r[c]),l.set(this._vertexOffset+c,a),o.set(this._vertexOffset+c,n);for(var h=this._faceOffset*3,c=0;c<6;c++)this.indices[h+c]=i[c]+this._vertexOffset;this._vertexOffset+=4,this._faceOffset+=2}}()});fr(xp.prototype,Vs);var Zc=Ye.firstNotNull,$_={x:0,y:2,z:1};function J_(e,t,n,i){var r=[0,0,0],a=i<0?n.getExtentMin():n.getExtentMax();r[$_[n.dim]]=a,e.position.setArray(r),e.rotation.identity(),t.distance=-Math.abs(a),t.normal.set(0,0,0),n.dim==="x"?(e.rotation.rotateY(i*Math.PI/2),t.normal.x=-i):n.dim==="z"?(e.rotation.rotateX(-i*Math.PI/2),t.normal.y=-i):(i>0&&e.rotation.rotateY(Math.PI),t.normal.z=-i)}function Tl(e,t,n){this.rootNode=new R.Node;var i=new R.Mesh({geometry:new pr({useNativeLine:!1}),material:t,castShadow:!1,ignorePicking:!0,$ignorePicking:!0,renderOrder:1}),r=new R.Mesh({geometry:new xp,material:n,castShadow:!1,culling:!1,ignorePicking:!0,$ignorePicking:!0,renderOrder:0});this.rootNode.add(r),this.rootNode.add(i),this.faceInfo=e,this.plane=new R.Plane,this.linesMesh=i,this.quadsMesh=r}Tl.prototype.update=function(e,t,n){var i=e.coordinateSystem,r=[i.getAxis(this.faceInfo[0]),i.getAxis(this.faceInfo[1])],a=this.linesMesh.geometry,s=this.quadsMesh.geometry;a.convertToDynamicArray(!0),s.convertToDynamicArray(!0),this._updateSplitLines(a,r,e,n),this._udpateSplitAreas(s,r,e,n),a.convertToTypedArray(),s.convertToTypedArray();var o=i.getAxis(this.faceInfo[2]);J_(this.rootNode,this.plane,o,this.faceInfo[3])};Tl.prototype._updateSplitLines=function(e,t,n,i){var r=i.getDevicePixelRatio();t.forEach(function(a,s){var o=a.model,l=t[1-s].getExtent();if(!a.scale.isBlank()){var c=o.getModel("splitLine",n.getModel("splitLine"));if(c.get("show")){var h=c.getModel("lineStyle"),u=h.get("color"),f=Zc(h.get("opacity"),1),d=Zc(h.get("width"),1);u=pi(u)?u:[u];for(var p=a.getTicksCoords({tickModel:c}),g=0,v=0;v<p.length;v++){var m=p[v].coord,y=R.parseColor(u[g%u.length]);y[3]*=f;var _=[0,0,0],x=[0,0,0];_[s]=x[s]=m,_[1-s]=l[0],x[1-s]=l[1],e.addLine(_,x,y,d*r),g++}}}})};Tl.prototype._udpateSplitAreas=function(e,t,n,i){t.forEach(function(r,a){var s=r.model,o=t[1-a].getExtent();if(!r.scale.isBlank()){var l=s.getModel("splitArea",n.getModel("splitArea"));if(l.get("show")){var c=l.getModel("areaStyle"),h=c.get("color"),u=Zc(c.get("opacity"),1);h=pi(h)?h:[h];for(var f=r.getTicksCoords({tickModel:l,clamp:!0}),d=0,p=[0,0,0],g=[0,0,0],v=0;v<f.length;v++){var m=f[v].coord,y=[0,0,0],_=[0,0,0];if(y[a]=_[a]=m,y[1-a]=o[0],_[1-a]=o[1],v===0){p=y,g=_;continue}var x=R.parseColor(h[d%h.length]);x[3]*=u,e.addQuad([p,y,_,g],x),p=y,g=_,d++}}}})};var Iu=[0,1,2,0,2,3],yp=je.extend(function(){return{attributes:{position:new je.Attribute("position","float",3,"POSITION"),texcoord:new je.Attribute("texcoord","float",2,"TEXCOORD_0"),offset:new je.Attribute("offset","float",2),color:new je.Attribute("color","float",4,"COLOR")}}},{resetOffset:function(){this._vertexOffset=0,this._faceOffset=0},setSpriteCount:function(e){this._spriteCount=e;var t=e*4,n=e*2;this.vertexCount!==t&&(this.attributes.position.init(t),this.attributes.offset.init(t),this.attributes.color.init(t)),this.triangleCount!==n&&(this.indices=t>65535?new Uint32Array(n*3):new Uint16Array(n*3))},setSpriteAlign:function(e,t,n,i,r){n==null&&(n="left"),i==null&&(i="top");var a,s,o,l;switch(r=r||0,n){case"left":a=r,o=t[0]+r;break;case"center":case"middle":a=-t[0]/2,o=t[0]/2;break;case"right":a=-t[0]-r,o=-r;break}switch(i){case"bottom":s=r,l=t[1]+r;break;case"middle":s=-t[1]/2,l=t[1]/2;break;case"top":s=-t[1]-r,l=-r;break}var c=e*4,h=this.attributes.offset;h.set(c,[a,l]),h.set(c+1,[o,l]),h.set(c+2,[o,s]),h.set(c+3,[a,s])},addSprite:function(e,t,n,i,r,a){var s=this._vertexOffset;this.setSprite(this._vertexOffset/4,e,t,n,i,r,a);for(var o=0;o<Iu.length;o++)this.indices[this._faceOffset*3+o]=Iu[o]+s;return this._faceOffset+=2,this._vertexOffset+=4,s/4},setSprite:function(e,t,n,i,r,a,s){for(var o=e*4,l=this.attributes,c=0;c<4;c++)l.position.set(o+c,t);var h=l.texcoord;h.set(o,[i[0][0],i[0][1]]),h.set(o+1,[i[1][0],i[0][1]]),h.set(o+2,[i[1][0],i[1][1]]),h.set(o+3,[i[0][0],i[1][1]]),this.setSpriteAlign(e,n,r,a,s)}});fr(yp.prototype,Vs);const Q_=`@export ecgl.labels.vertex

attribute vec3 position: POSITION;
attribute vec2 texcoord: TEXCOORD_0;
attribute vec2 offset;
#ifdef VERTEX_COLOR
attribute vec4 a_Color : COLOR;
varying vec4 v_Color;
#endif

uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;
uniform vec4 viewport : VIEWPORT;

varying vec2 v_Texcoord;

void main()
{
 vec4 proj = worldViewProjection * vec4(position, 1.0);

 vec2 screen = (proj.xy / abs(proj.w) + 1.0) * 0.5 * viewport.zw;

 screen += offset;

 proj.xy = (screen / viewport.zw - 0.5) * 2.0 * abs(proj.w);
 gl_Position = proj;
#ifdef VERTEX_COLOR
 v_Color = a_Color;
#endif
 v_Texcoord = texcoord;
}
@end


@export ecgl.labels.fragment

uniform vec3 color : [1.0, 1.0, 1.0];
uniform float alpha : 1.0;
uniform sampler2D textureAtlas;
uniform vec2 uvScale: [1.0, 1.0];

#ifdef VERTEX_COLOR
varying vec4 v_Color;
#endif
varying float v_Miter;

varying vec2 v_Texcoord;

void main()
{
 gl_FragColor = vec4(color, alpha) * texture2D(textureAtlas, v_Texcoord * uvScale);
#ifdef VERTEX_COLOR
 gl_FragColor *= v_Color;
#endif
}

@end`;R.Shader.import(Q_);const xh=R.Mesh.extend(function(){var e=new yp({dynamic:!0}),t=new R.Material({shader:R.createShader("ecgl.labels"),transparent:!0,depthMask:!1});return{geometry:e,material:t,culling:!1,castShadow:!1,ignorePicking:!0}});var wr=Ye.firstNotNull,Ar={x:0,y:2,z:1};function yh(e,t){var n=new R.Mesh({geometry:new pr({useNativeLine:!1}),material:t,castShadow:!1,ignorePicking:!0,renderOrder:2}),i=new xh;i.material.depthMask=!1;var r=new R.Node;r.add(n),r.add(i),this.rootNode=r,this.dim=e,this.linesMesh=n,this.labelsMesh=i,this.axisLineCoords=null,this.labelElements=[]}var Kl={x:"y",y:"x",z:"y"};yh.prototype.update=function(e,t,n){var i=e.coordinateSystem,r=i.getAxis(this.dim),a=this.linesMesh.geometry,s=this.labelsMesh.geometry;a.convertToDynamicArray(!0),s.convertToDynamicArray(!0);var o=r.model,l=r.getExtent(),P=n.getDevicePixelRatio(),c=o.getModel("axisLine",e.getModel("axisLine")),h=o.getModel("axisTick",e.getModel("axisTick")),u=o.getModel("axisLabel",e.getModel("axisLabel")),f=c.get("lineStyle.color");if(c.get("show")){var d=c.getModel("lineStyle"),p=[0,0,0],g=[0,0,0],v=Ar[r.dim];p[v]=l[0],g[v]=l[1],this.axisLineCoords=[p,g];var m=R.parseColor(f),y=wr(d.get("width"),1),_=wr(d.get("opacity"),1);m[3]*=_,a.addLine(p,g,m,y*P)}if(h.get("show")){var x=h.getModel("lineStyle"),A=R.parseColor(wr(x.get("color"),f)),y=wr(x.get("width"),1);A[3]*=wr(x.get("opacity"),1);for(var E=r.getTicksCoords(),w=h.get("length"),b=0;b<E.length;b++){var M=E[b].coord,p=[0,0,0],g=[0,0,0],v=Ar[r.dim],T=Ar[Kl[r.dim]];p[v]=g[v]=M,g[T]=w,a.addLine(p,g,A,y*P)}}this.labelElements=[];var P=n.getDevicePixelRatio();if(u.get("show"))for(var E=r.getTicksCoords(),O=o.get("data"),D=u.get("margin"),N=r.getViewLabels(),b=0;b<N.length;b++){var B=N[b].tickValue,z=N[b].formattedLabel,Y=N[b].rawLabel,M=r.dataToCoord(B),F=[0,0,0],v=Ar[r.dim],T=Ar[Kl[r.dim]];F[v]=F[v]=M,F[T]=D;var J=u;O&&O[B]&&O[B].textStyle&&(J=new dl(O[B].textStyle,u,o.ecModel));var V=wr(J.get("color"),f),ce=new qo({style:jo(J,{text:z,fill:typeof V=="function"?V(r.type==="category"?Y:r.type==="value"?B+"":B,b):V,verticalAlign:"top",align:"left"})}),fe=t.add(ce),ye=ce.getBoundingRect();s.addSprite(F,[ye.width*P,ye.height*P],fe),this.labelElements.push(ce)}if(o.get("name")){var W=o.getModel("nameTextStyle"),F=[0,0,0],v=Ar[r.dim],T=Ar[Kl[r.dim]],Q=wr(W.get("color"),f),de=W.get("borderColor"),y=W.get("borderWidth");F[v]=F[v]=(l[0]+l[1])/2,F[T]=o.get("nameGap");var ce=new qo({style:jo(W,{text:o.get("name"),fill:Q,stroke:de,lineWidth:y})}),fe=t.add(ce),ye=ce.getBoundingRect();s.addSprite(F,[ye.width*P,ye.height*P],fe),ce.__idx=this.labelElements.length,this.nameLabelElement=ce}this.labelsMesh.material.set("textureAtlas",t.getTexture()),this.labelsMesh.material.set("uvScale",t.getCoordsScale()),a.convertToTypedArray(),s.convertToTypedArray()};yh.prototype.setSpriteAlign=function(e,t,n){for(var i=n.getDevicePixelRatio(),r=this.labelsMesh.geometry,a=0;a<this.labelElements.length;a++){var s=this.labelElements[a],o=s.getBoundingRect();r.setSpriteAlign(a,[o.width*i,o.height*i],e,t)}var l=this.nameLabelElement;if(l){var o=l.getBoundingRect();r.setSpriteAlign(l.__idx,[o.width*i,o.height*i],e,t),r.dirty()}this.textAlign=e,this.textVerticalAlign=t};const Sl=`@export ecgl.lines3D.vertex

uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;

attribute vec3 position: POSITION;
attribute vec4 a_Color : COLOR;
varying vec4 v_Color;

void main()
{
 gl_Position = worldViewProjection * vec4(position, 1.0);
 v_Color = a_Color;
}

@end

@export ecgl.lines3D.fragment

uniform vec4 color : [1.0, 1.0, 1.0, 1.0];

varying vec4 v_Color;

@import clay.util.srgb

void main()
{
#ifdef SRGB_DECODE
 gl_FragColor = sRGBToLinear(color * v_Color);
#else
 gl_FragColor = color * v_Color;
#endif
}
@end



@export ecgl.lines3D.clipNear

vec4 clipNear(vec4 p1, vec4 p2) {
 float n = (p1.w - near) / (p1.w - p2.w);
 return vec4(mix(p1.xy, p2.xy, n), -near, near);
}

@end

@export ecgl.lines3D.expandLine
#ifdef VERTEX_ANIMATION
 vec4 prevProj = worldViewProjection * vec4(mix(prevPositionPrev, positionPrev, percent), 1.0);
 vec4 currProj = worldViewProjection * vec4(mix(prevPosition, position, percent), 1.0);
 vec4 nextProj = worldViewProjection * vec4(mix(prevPositionNext, positionNext, percent), 1.0);
#else
 vec4 prevProj = worldViewProjection * vec4(positionPrev, 1.0);
 vec4 currProj = worldViewProjection * vec4(position, 1.0);
 vec4 nextProj = worldViewProjection * vec4(positionNext, 1.0);
#endif

 if (currProj.w < 0.0) {
 if (nextProj.w > 0.0) {
 currProj = clipNear(currProj, nextProj);
 }
 else if (prevProj.w > 0.0) {
 currProj = clipNear(currProj, prevProj);
 }
 }

 vec2 prevScreen = (prevProj.xy / abs(prevProj.w) + 1.0) * 0.5 * viewport.zw;
 vec2 currScreen = (currProj.xy / abs(currProj.w) + 1.0) * 0.5 * viewport.zw;
 vec2 nextScreen = (nextProj.xy / abs(nextProj.w) + 1.0) * 0.5 * viewport.zw;

 vec2 dir;
 float len = offset;
 if (position == positionPrev) {
 dir = normalize(nextScreen - currScreen);
 }
 else if (position == positionNext) {
 dir = normalize(currScreen - prevScreen);
 }
 else {
 vec2 dirA = normalize(currScreen - prevScreen);
 vec2 dirB = normalize(nextScreen - currScreen);

 vec2 tanget = normalize(dirA + dirB);

 float miter = 1.0 / max(dot(tanget, dirA), 0.5);
 len *= miter;
 dir = tanget;
 }

 dir = vec2(-dir.y, dir.x) * len;
 currScreen += dir;

 currProj.xy = (currScreen / viewport.zw - 0.5) * 2.0 * abs(currProj.w);
@end


@export ecgl.meshLines3D.vertex

attribute vec3 position: POSITION;
attribute vec3 positionPrev;
attribute vec3 positionNext;
attribute float offset;
attribute vec4 a_Color : COLOR;

#ifdef VERTEX_ANIMATION
attribute vec3 prevPosition;
attribute vec3 prevPositionPrev;
attribute vec3 prevPositionNext;
uniform float percent : 1.0;
#endif

uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;
uniform vec4 viewport : VIEWPORT;
uniform float near : NEAR;

varying vec4 v_Color;

@import ecgl.common.wireframe.vertexHeader

@import ecgl.lines3D.clipNear

void main()
{
 @import ecgl.lines3D.expandLine

 gl_Position = currProj;

 v_Color = a_Color;

 @import ecgl.common.wireframe.vertexMain
}
@end


@export ecgl.meshLines3D.fragment

uniform vec4 color : [1.0, 1.0, 1.0, 1.0];

varying vec4 v_Color;

@import ecgl.common.wireframe.fragmentHeader

@import clay.util.srgb

void main()
{
#ifdef SRGB_DECODE
 gl_FragColor = sRGBToLinear(color * v_Color);
#else
 gl_FragColor = color * v_Color;
#endif

 @import ecgl.common.wireframe.fragmentMain
}

@end`;var Ou=Ye.firstNotNull;R.Shader.import(Sl);var br={x:0,y:2,z:1};const e0=zs.extend({type:"grid3D",__ecgl__:!0,init:function(e,t){var n=[["y","z","x",-1,"left"],["y","z","x",1,"right"],["x","y","z",-1,"bottom"],["x","y","z",1,"top"],["x","z","y",-1,"far"],["x","z","y",1,"near"]],i=["x","y","z"],r=new R.Material({shader:R.createShader("ecgl.color"),depthMask:!1,transparent:!0}),a=new R.Material({shader:R.createShader("ecgl.meshLines3D"),depthMask:!1,transparent:!0});r.define("fragment","DOUBLE_SIDED"),r.define("both","VERTEX_COLOR"),this.groupGL=new R.Node,this._control=new yl({zr:t.getZr()}),this._control.init(),this._faces=n.map(function(o){var l=new Tl(o,a,r);return this.groupGL.add(l.rootNode),l},this),this._axes=i.map(function(o){var l=new yh(o,a);return this.groupGL.add(l.rootNode),l},this);var s=t.getDevicePixelRatio();this._axisLabelSurface=new Qo({width:256,height:256,devicePixelRatio:s}),this._axisLabelSurface.onupdate=function(){t.getZr().refresh()},this._axisPointerLineMesh=new R.Mesh({geometry:new pr({useNativeLine:!1}),material:a,castShadow:!1,ignorePicking:!0,renderOrder:3}),this.groupGL.add(this._axisPointerLineMesh),this._axisPointerLabelsSurface=new Qo({width:128,height:128,devicePixelRatio:s}),this._axisPointerLabelsMesh=new xh({ignorePicking:!0,renderOrder:4,castShadow:!1}),this._axisPointerLabelsMesh.material.set("textureAtlas",this._axisPointerLabelsSurface.getTexture()),this.groupGL.add(this._axisPointerLabelsMesh),this._lightRoot=new R.Node,this._sceneHelper=new cr,this._sceneHelper.initLight(this._lightRoot)},render:function(e,t,n){this._model=e,this._api=n;var i=e.coordinateSystem;i.viewGL.add(this._lightRoot),e.get("show")?i.viewGL.add(this.groupGL):i.viewGL.remove(this.groupGL);var r=this._control;r.setViewGL(i.viewGL);var a=e.getModel("viewControl");r.setFromViewControlModel(a,0),this._axisLabelSurface.clear(),r.off("update"),e.get("show")&&(this._faces.forEach(function(s){s.update(e,t,n)},this),this._axes.forEach(function(s){s.update(e,this._axisLabelSurface,n)},this)),r.on("update",this._onCameraChange.bind(this,e,n),this),this._sceneHelper.setScene(i.viewGL.scene),this._sceneHelper.updateLight(e),i.viewGL.setPostEffect(e.getModel("postEffect"),n),i.viewGL.setTemporalSuperSampling(e.getModel("temporalSuperSampling")),this._initMouseHandler(e)},afterRender:function(e,t,n,i){var r=i.renderer;this._sceneHelper.updateAmbientCubemap(r,e,n),this._sceneHelper.updateSkybox(r,e,n)},showAxisPointer:function(e,t,n,i){this._doShowAxisPointer(),this._updateAxisPointer(i.value)},hideAxisPointer:function(e,t,n,i){this._doHideAxisPointer()},_initMouseHandler:function(e){var t=e.coordinateSystem,n=t.viewGL;e.get("show")&&e.get("axisPointer.show")?n.on("mousemove",this._updateAxisPointerOnMousePosition,this):n.off("mousemove",this._updateAxisPointerOnMousePosition)},_updateAxisPointerOnMousePosition:function(e){if(!e.target){for(var t=this._model,n=t.coordinateSystem,i=n.viewGL,r=i.castRay(e.offsetX,e.offsetY,new R.Ray),a,s=0;s<this._faces.length;s++){var o=this._faces[s];if(!o.rootNode.invisible){o.plane.normal.dot(i.camera.worldTransform.z)<0&&o.plane.normal.negate();var l=r.intersectPlane(o.plane);if(l){var c=n.getAxis(o.faceInfo[0]),h=n.getAxis(o.faceInfo[1]),u=br[o.faceInfo[0]],f=br[o.faceInfo[1]];c.contain(l.array[u])&&h.contain(l.array[f])&&(a=l)}}}if(a){var d=n.pointToData(a.array,[],!0);this._updateAxisPointer(d),this._doShowAxisPointer()}else this._doHideAxisPointer()}},_onCameraChange:function(e,t){e.get("show")&&(this._updateFaceVisibility(),this._updateAxisLinePosition());var n=this._control;t.dispatchAction({type:"grid3DChangeCamera",alpha:n.getAlpha(),beta:n.getBeta(),distance:n.getDistance(),center:n.getCenter(),from:this.uid,grid3DId:e.id})},_updateFaceVisibility:function(){var e=this._control.getCamera(),t=new R.Vector3;e.update();for(var n=0;n<this._faces.length/2;n++){for(var i=[],r=0;r<2;r++){var a=this._faces[n*2+r];a.rootNode.getWorldPosition(t),t.transformMat4(e.viewMatrix),i[r]=t.z}var s=i[0]>i[1]?0:1,o=this._faces[n*2+s],l=this._faces[n*2+1-s];o.rootNode.invisible=!0,l.rootNode.invisible=!1}},_updateAxisLinePosition:function(){var e=this._model.coordinateSystem,t=e.getAxis("x"),n=e.getAxis("y"),i=e.getAxis("z"),r=i.getExtentMax(),a=i.getExtentMin(),s=t.getExtentMin(),o=t.getExtentMax(),l=n.getExtentMax(),c=n.getExtentMin(),h=this._axes[0].rootNode,u=this._axes[1].rootNode,f=this._axes[2].rootNode,d=this._faces,p=d[4].rootNode.invisible?c:l,g=d[2].rootNode.invisible?r:a,v=d[0].rootNode.invisible?s:o,m=d[2].rootNode.invisible?r:a,y=d[0].rootNode.invisible?o:s,_=d[4].rootNode.invisible?c:l;h.rotation.identity(),u.rotation.identity(),f.rotation.identity(),d[4].rootNode.invisible&&(this._axes[0].flipped=!0,h.rotation.rotateX(Math.PI)),d[0].rootNode.invisible&&(this._axes[1].flipped=!0,u.rotation.rotateZ(Math.PI)),d[4].rootNode.invisible&&(this._axes[2].flipped=!0,f.rotation.rotateY(Math.PI)),h.position.set(0,g,p),u.position.set(v,m,0),f.position.set(y,0,_),h.update(),u.update(),f.update(),this._updateAxisLabelAlign()},_updateAxisLabelAlign:function(){var e=this._control.getCamera(),t=[new R.Vector4,new R.Vector4],n=new R.Vector4;this.groupGL.getWorldPosition(n),n.w=1,n.transformMat4(e.viewMatrix).transformMat4(e.projectionMatrix),n.x/=n.w,n.y/=n.w,this._axes.forEach(function(i){var r=i.axisLineCoords;i.labelsMesh.geometry;for(var a=0;a<t.length;a++)t[a].setArray(r[a]),t[a].w=1,t[a].transformMat4(i.rootNode.worldTransform).transformMat4(e.viewMatrix).transformMat4(e.projectionMatrix),t[a].x/=t[a].w,t[a].y/=t[a].w;var s=t[1].x-t[0].x,o=t[1].y-t[0].y,l=(t[1].x+t[0].x)/2,c=(t[1].y+t[0].y)/2,h,u;Math.abs(o/s)<.5?(h="center",u=c>n.y?"bottom":"top"):(u="middle",h=l>n.x?"left":"right"),i.setSpriteAlign(h,u,this._api)},this)},_doShowAxisPointer:function(){this._axisPointerLineMesh.invisible&&(this._axisPointerLineMesh.invisible=!1,this._axisPointerLabelsMesh.invisible=!1,this._api.getZr().refresh())},_doHideAxisPointer:function(){this._axisPointerLineMesh.invisible||(this._axisPointerLineMesh.invisible=!0,this._axisPointerLabelsMesh.invisible=!0,this._api.getZr().refresh())},_updateAxisPointer:function(e){var t=this._model.coordinateSystem,n=t.dataToPoint(e),i=this._axisPointerLineMesh,r=i.geometry,a=this._model.getModel("axisPointer"),s=this._api.getDevicePixelRatio();r.convertToDynamicArray(!0);function o(b){return Ye.firstNotNull(b.model.get("axisPointer.show"),a.get("show"))}function l(b){var M=b.model.getModel("axisPointer",a),T=M.getModel("lineStyle"),P=R.parseColor(T.get("color")),O=Ou(T.get("width"),1),D=Ou(T.get("opacity"),1);return P[3]*=D,{color:P,lineWidth:O}}for(var c=0;c<this._faces.length;c++){var h=this._faces[c];if(!h.rootNode.invisible){for(var u=h.faceInfo,f=u[3]<0?t.getAxis(u[2]).getExtentMin():t.getAxis(u[2]).getExtentMax(),d=br[u[2]],p=0;p<2;p++){var g=u[p],v=u[1-p],m=t.getAxis(g),y=t.getAxis(v);if(o(m)){var _=[0,0,0],x=[0,0,0],A=br[g],E=br[v];_[A]=x[A]=n[A],_[d]=x[d]=f,_[E]=y.getExtentMin(),x[E]=y.getExtentMax();var w=l(m);r.addLine(_,x,w.color,w.lineWidth*s)}}if(o(t.getAxis(u[2]))){var _=n.slice(),x=n.slice();x[d]=f;var w=l(t.getAxis(u[2]));r.addLine(_,x,w.color,w.lineWidth*s)}}}r.convertToTypedArray(),this._updateAxisPointerLabelsMesh(e),this._api.getZr().refresh()},_updateAxisPointerLabelsMesh:function(e){var t=this._model,n=this._axisPointerLabelsMesh,i=this._axisPointerLabelsSurface,r=t.coordinateSystem,a=t.getModel("axisPointer");n.geometry.convertToDynamicArray(!0),i.clear();var s={x:"y",y:"x",z:"y"};this._axes.forEach(function(o,l){var c=r.getAxis(o.dim),h=c.model,u=h.getModel("axisPointer",a),f=u.getModel("label"),d=u.get("lineStyle.color");if(!(!f.get("show")||!u.get("show"))){var p=e[l],g=f.get("formatter"),v=c.scale.getLabel({value:p});if(g!=null)v=g(v,e);else if(c.scale.type==="interval"||c.scale.type==="log"){var m=Yd(c.scale.getTicks()[0]);v=p.toFixed(m+2)}var y=f.get("color"),_=new qo({style:jo(f,{text:v,fill:y||d,align:"left",verticalAlign:"top"})}),x=i.add(_),A=_.getBoundingRect(),E=this._api.getDevicePixelRatio(),w=o.rootNode.position.toArray(),b=br[s[o.dim]];w[b]+=(o.flipped?-1:1)*f.get("margin"),w[br[o.dim]]=c.dataToCoord(e[l]),n.geometry.addSprite(w,[A.width*E,A.height*E],x,o.textAlign,o.textVerticalAlign)}},this),i.getZr().refreshImmediately(),n.material.set("uvScale",i.getCoordsScale()),n.geometry.convertToTypedArray()},dispose:function(){this.groupGL.removeAll(),this._control.dispose(),this._axisLabelSurface.dispose(),this._axisPointerLabelsSurface.dispose()}});function Cs(e){qd.call(this,e),this.type="cartesian3D",this.dimensions=["x","y","z"],this.size=[0,0,0]}Cs.prototype={constructor:Cs,model:null,containPoint:function(e){return this.getAxis("x").contain(e[0])&&this.getAxis("y").contain(e[2])&&this.getAxis("z").contain(e[1])},containData:function(e){return this.getAxis("x").containData(e[0])&&this.getAxis("y").containData(e[1])&&this.getAxis("z").containData(e[2])},dataToPoint:function(e,t,n){return t=t||[],t[0]=this.getAxis("x").dataToCoord(e[0],n),t[2]=this.getAxis("y").dataToCoord(e[1],n),t[1]=this.getAxis("z").dataToCoord(e[2],n),t},pointToData:function(e,t,n){return t=t||[],t[0]=this.getAxis("x").coordToData(e[0],n),t[1]=this.getAxis("y").coordToData(e[2],n),t[2]=this.getAxis("z").coordToData(e[1],n),t}};jd(Cs,qd);function el(e,t,n){pl.call(this,e,t,n)}el.prototype={constructor:el,getExtentMin:function(){var e=this._extent;return Math.min(e[0],e[1])},getExtentMax:function(){var e=this._extent;return Math.max(e[0],e[1])},calculateCategoryInterval:function(){return Math.floor(this.scale.count()/8)}};jd(el,pl);var Kc=function(){this._pool={},this._allocatedTextures=[]};Kc.prototype={constructor:Kc,get:function(e){var t=Uu(e);this._pool.hasOwnProperty(t)||(this._pool[t]=[]);var n=this._pool[t];if(!n.length){var i=new We(e);return this._allocatedTextures.push(i),i}return n.pop()},put:function(e){var t=Uu(e);this._pool.hasOwnProperty(t)||(this._pool[t]=[]);var n=this._pool[t];n.push(e)},clear:function(e){for(var t=0;t<this._allocatedTextures.length;t++)this._allocatedTextures[t].dispose(e);this._pool={},this._allocatedTextures=[]}};var Tp={width:512,height:512,type:ee.UNSIGNED_BYTE,format:ee.RGBA,wrapS:ee.CLAMP_TO_EDGE,wrapT:ee.CLAMP_TO_EDGE,minFilter:ee.LINEAR_MIPMAP_LINEAR,magFilter:ee.LINEAR,useMipmap:!0,anisotropic:1,flipY:!0,unpackAlignment:4,premultiplyAlpha:!1},$l=Object.keys(Tp);function Uu(e){Nt.defaultsWithPropList(e,Tp,$l),t0(e);for(var t="",n=0;n<$l.length;n++){var i=$l[n],r=e[i].toString();t+=r}return t}function t0(e){var t=n0(e.width,e.height);e.format===ee.DEPTH_COMPONENT&&(e.useMipmap=!1),(!t||!e.useMipmap)&&(e.minFilter==ee.NEAREST_MIPMAP_NEAREST||e.minFilter==ee.NEAREST_MIPMAP_LINEAR?e.minFilter=ee.NEAREST:(e.minFilter==ee.LINEAR_MIPMAP_LINEAR||e.minFilter==ee.LINEAR_MIPMAP_NEAREST)&&(e.minFilter=ee.LINEAR)),t||(e.wrapS=ee.CLAMP_TO_EDGE,e.wrapT=ee.CLAMP_TO_EDGE)}function n0(e,t){return(e&e-1)===0&&(t&t-1)===0}const Sp=Kc,i0=`@export clay.sm.depth.vertex
uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;
attribute vec3 position : POSITION;
attribute vec2 texcoord : TEXCOORD_0;
uniform vec2 uvRepeat = vec2(1.0, 1.0);
uniform vec2 uvOffset = vec2(0.0, 0.0);
@import clay.chunk.skinning_header
@import clay.chunk.instancing_header
varying vec4 v_ViewPosition;
varying vec2 v_Texcoord;
void main(){
 vec4 P = vec4(position, 1.0);
#ifdef SKINNING
 @import clay.chunk.skin_matrix
 P = skinMatrixWS * P;
#endif
#ifdef INSTANCING
 @import clay.chunk.instancing_matrix
 P = instanceMat * P;
#endif
 v_ViewPosition = worldViewProjection * P;
 gl_Position = v_ViewPosition;
 v_Texcoord = texcoord * uvRepeat + uvOffset;
}
@end
@export clay.sm.depth.fragment
varying vec4 v_ViewPosition;
varying vec2 v_Texcoord;
uniform float bias : 0.001;
uniform float slopeScale : 1.0;
uniform sampler2D alphaMap;
uniform float alphaCutoff: 0.0;
@import clay.util.encode_float
void main(){
 float depth = v_ViewPosition.z / v_ViewPosition.w;
 if (alphaCutoff > 0.0) {
 if (texture2D(alphaMap, v_Texcoord).a <= alphaCutoff) {
 discard;
 }
 }
#ifdef USE_VSM
 depth = depth * 0.5 + 0.5;
 float moment1 = depth;
 float moment2 = depth * depth;
 #ifdef SUPPORT_STANDARD_DERIVATIVES
 float dx = dFdx(depth);
 float dy = dFdy(depth);
 moment2 += 0.25*(dx*dx+dy*dy);
 #endif
 gl_FragColor = vec4(moment1, moment2, 0.0, 1.0);
#else
 #ifdef SUPPORT_STANDARD_DERIVATIVES
 float dx = dFdx(depth);
 float dy = dFdy(depth);
 depth += sqrt(dx*dx + dy*dy) * slopeScale + bias;
 #else
 depth += bias;
 #endif
 gl_FragColor = encodeFloat(depth * 0.5 + 0.5);
#endif
}
@end
@export clay.sm.debug_depth
uniform sampler2D depthMap;
varying vec2 v_Texcoord;
@import clay.util.decode_float
void main() {
 vec4 tex = texture2D(depthMap, v_Texcoord);
#ifdef USE_VSM
 gl_FragColor = vec4(tex.rgb, 1.0);
#else
 float depth = decodeFloat(tex);
 gl_FragColor = vec4(depth, depth, depth, 1.0);
#endif
}
@end
@export clay.sm.distance.vertex
uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;
uniform mat4 world : WORLD;
attribute vec3 position : POSITION;
@import clay.chunk.skinning_header
varying vec3 v_WorldPosition;
void main (){
 vec4 P = vec4(position, 1.0);
#ifdef SKINNING
 @import clay.chunk.skin_matrix
 P = skinMatrixWS * P;
#endif
#ifdef INSTANCING
 @import clay.chunk.instancing_matrix
 P = instanceMat * P;
#endif
 gl_Position = worldViewProjection * P;
 v_WorldPosition = (world * P).xyz;
}
@end
@export clay.sm.distance.fragment
uniform vec3 lightPosition;
uniform float range : 100;
varying vec3 v_WorldPosition;
@import clay.util.encode_float
void main(){
 float dist = distance(lightPosition, v_WorldPosition);
#ifdef USE_VSM
 gl_FragColor = vec4(dist, dist * dist, 0.0, 0.0);
#else
 dist = dist / range;
 gl_FragColor = encodeFloat(dist);
#endif
}
@end
@export clay.plugin.shadow_map_common
@import clay.util.decode_float
float tapShadowMap(sampler2D map, vec2 uv, float z){
 vec4 tex = texture2D(map, uv);
 return step(z, decodeFloat(tex) * 2.0 - 1.0);
}
float pcf(sampler2D map, vec2 uv, float z, float textureSize, vec2 scale) {
 float shadowContrib = tapShadowMap(map, uv, z);
 vec2 offset = vec2(1.0 / textureSize) * scale;
#ifdef PCF_KERNEL_SIZE
 for (int _idx_ = 0; _idx_ < PCF_KERNEL_SIZE; _idx_++) {{
 shadowContrib += tapShadowMap(map, uv + offset * pcfKernel[_idx_], z);
 }}
 return shadowContrib / float(PCF_KERNEL_SIZE + 1);
#else
 shadowContrib += tapShadowMap(map, uv+vec2(offset.x, 0.0), z);
 shadowContrib += tapShadowMap(map, uv+vec2(offset.x, offset.y), z);
 shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, offset.y), z);
 shadowContrib += tapShadowMap(map, uv+vec2(0.0, offset.y), z);
 shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, 0.0), z);
 shadowContrib += tapShadowMap(map, uv+vec2(-offset.x, -offset.y), z);
 shadowContrib += tapShadowMap(map, uv+vec2(offset.x, -offset.y), z);
 shadowContrib += tapShadowMap(map, uv+vec2(0.0, -offset.y), z);
 return shadowContrib / 9.0;
#endif
}
float pcf(sampler2D map, vec2 uv, float z, float textureSize) {
 return pcf(map, uv, z, textureSize, vec2(1.0));
}
float chebyshevUpperBound(vec2 moments, float z){
 float p = 0.0;
 z = z * 0.5 + 0.5;
 if (z <= moments.x) {
 p = 1.0;
 }
 float variance = moments.y - moments.x * moments.x;
 variance = max(variance, 0.0000001);
 float mD = moments.x - z;
 float pMax = variance / (variance + mD * mD);
 pMax = clamp((pMax-0.4)/(1.0-0.4), 0.0, 1.0);
 return max(p, pMax);
}
float computeShadowContrib(
 sampler2D map, mat4 lightVPM, vec3 position, float textureSize, vec2 scale, vec2 offset
) {
 vec4 posInLightSpace = lightVPM * vec4(position, 1.0);
 posInLightSpace.xyz /= posInLightSpace.w;
 float z = posInLightSpace.z;
 if(all(greaterThan(posInLightSpace.xyz, vec3(-0.99, -0.99, -1.0))) &&
 all(lessThan(posInLightSpace.xyz, vec3(0.99, 0.99, 1.0)))){
 vec2 uv = (posInLightSpace.xy+1.0) / 2.0;
 #ifdef USE_VSM
 vec2 moments = texture2D(map, uv * scale + offset).xy;
 return chebyshevUpperBound(moments, z);
 #else
 return pcf(map, uv * scale + offset, z, textureSize, scale);
 #endif
 }
 return 1.0;
}
float computeShadowContrib(sampler2D map, mat4 lightVPM, vec3 position, float textureSize) {
 return computeShadowContrib(map, lightVPM, position, textureSize, vec2(1.0), vec2(0.0));
}
float computeShadowContribOmni(samplerCube map, vec3 direction, float range)
{
 float dist = length(direction);
 vec4 shadowTex = textureCube(map, direction);
#ifdef USE_VSM
 vec2 moments = shadowTex.xy;
 float variance = moments.y - moments.x * moments.x;
 float mD = moments.x - dist;
 float p = variance / (variance + mD * mD);
 if(moments.x + 0.001 < dist){
 return clamp(p, 0.0, 1.0);
 }else{
 return 1.0;
 }
#else
 return step(dist, (decodeFloat(shadowTex) + 0.0002) * range);
#endif
}
@end
@export clay.plugin.compute_shadow_map
#if defined(SPOT_LIGHT_SHADOWMAP_COUNT) || defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT) || defined(POINT_LIGHT_SHADOWMAP_COUNT)
#ifdef SPOT_LIGHT_SHADOWMAP_COUNT
uniform sampler2D spotLightShadowMaps[SPOT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;
uniform mat4 spotLightMatrices[SPOT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;
uniform float spotLightShadowMapSizes[SPOT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;
#endif
#ifdef DIRECTIONAL_LIGHT_SHADOWMAP_COUNT
#if defined(SHADOW_CASCADE)
uniform sampler2D directionalLightShadowMaps[1]:unconfigurable;
uniform mat4 directionalLightMatrices[SHADOW_CASCADE]:unconfigurable;
uniform float directionalLightShadowMapSizes[1]:unconfigurable;
uniform float shadowCascadeClipsNear[SHADOW_CASCADE]:unconfigurable;
uniform float shadowCascadeClipsFar[SHADOW_CASCADE]:unconfigurable;
#else
uniform sampler2D directionalLightShadowMaps[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT]:unconfigurable;
uniform mat4 directionalLightMatrices[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT]:unconfigurable;
uniform float directionalLightShadowMapSizes[DIRECTIONAL_LIGHT_SHADOWMAP_COUNT]:unconfigurable;
#endif
#endif
#ifdef POINT_LIGHT_SHADOWMAP_COUNT
uniform samplerCube pointLightShadowMaps[POINT_LIGHT_SHADOWMAP_COUNT]:unconfigurable;
#endif
uniform bool shadowEnabled : true;
#ifdef PCF_KERNEL_SIZE
uniform vec2 pcfKernel[PCF_KERNEL_SIZE];
#endif
@import clay.plugin.shadow_map_common
#if defined(SPOT_LIGHT_SHADOWMAP_COUNT)
void computeShadowOfSpotLights(vec3 position, inout float shadowContribs[SPOT_LIGHT_COUNT] ) {
 float shadowContrib;
 for(int _idx_ = 0; _idx_ < SPOT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{
 shadowContrib = computeShadowContrib(
 spotLightShadowMaps[_idx_], spotLightMatrices[_idx_], position,
 spotLightShadowMapSizes[_idx_]
 );
 shadowContribs[_idx_] = shadowContrib;
 }}
 for(int _idx_ = SPOT_LIGHT_SHADOWMAP_COUNT; _idx_ < SPOT_LIGHT_COUNT; _idx_++){{
 shadowContribs[_idx_] = 1.0;
 }}
}
#endif
#if defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)
#ifdef SHADOW_CASCADE
void computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){
 float depth = (2.0 * gl_FragCoord.z - gl_DepthRange.near - gl_DepthRange.far)
 / (gl_DepthRange.far - gl_DepthRange.near);
 float shadowContrib;
 shadowContribs[0] = 1.0;
 for (int _idx_ = 0; _idx_ < SHADOW_CASCADE; _idx_++) {{
 if (
 depth >= shadowCascadeClipsNear[_idx_] &&
 depth <= shadowCascadeClipsFar[_idx_]
 ) {
 shadowContrib = computeShadowContrib(
 directionalLightShadowMaps[0], directionalLightMatrices[_idx_], position,
 directionalLightShadowMapSizes[0],
 vec2(1.0 / float(SHADOW_CASCADE), 1.0),
 vec2(float(_idx_) / float(SHADOW_CASCADE), 0.0)
 );
 shadowContribs[0] = shadowContrib;
 }
 }}
 for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{
 shadowContribs[_idx_] = 1.0;
 }}
}
#else
void computeShadowOfDirectionalLights(vec3 position, inout float shadowContribs[DIRECTIONAL_LIGHT_COUNT]){
 float shadowContrib;
 for(int _idx_ = 0; _idx_ < DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_++) {{
 shadowContrib = computeShadowContrib(
 directionalLightShadowMaps[_idx_], directionalLightMatrices[_idx_], position,
 directionalLightShadowMapSizes[_idx_]
 );
 shadowContribs[_idx_] = shadowContrib;
 }}
 for(int _idx_ = DIRECTIONAL_LIGHT_SHADOWMAP_COUNT; _idx_ < DIRECTIONAL_LIGHT_COUNT; _idx_++) {{
 shadowContribs[_idx_] = 1.0;
 }}
}
#endif
#endif
#if defined(POINT_LIGHT_SHADOWMAP_COUNT)
void computeShadowOfPointLights(vec3 position, inout float shadowContribs[POINT_LIGHT_COUNT] ){
 vec3 lightPosition;
 vec3 direction;
 for(int _idx_ = 0; _idx_ < POINT_LIGHT_SHADOWMAP_COUNT; _idx_++) {{
 lightPosition = pointLightPosition[_idx_];
 direction = position - lightPosition;
 shadowContribs[_idx_] = computeShadowContribOmni(pointLightShadowMaps[_idx_], direction, pointLightRange[_idx_]);
 }}
 for(int _idx_ = POINT_LIGHT_SHADOWMAP_COUNT; _idx_ < POINT_LIGHT_COUNT; _idx_++) {{
 shadowContribs[_idx_] = 1.0;
 }}
}
#endif
#endif
@end`;var Vi=["px","nx","py","ny","pz","nz"];le.import(i0);function Jl(e,t,n){if(n==="alphaMap")return e.material.get("diffuseMap");if(n==="alphaCutoff"){if(e.material.isDefined("fragment","ALPHA_TEST")&&e.material.get("diffuseMap")){var i=e.material.get("alphaCutoff");return i||0}return 0}else return n==="uvRepeat"?e.material.get("uvRepeat"):n==="uvOffset"?e.material.get("uvOffset"):t.get(n)}function Fu(e,t){var n=e.material,i=t.material;return n.get("diffuseMap")!==i.get("diffuseMap")||(n.get("alphaCutoff")||0)!==(i.get("alphaCutoff")||0)}var ii=an.extend(function(){return{softShadow:ii.PCF,shadowBlur:1,lightFrustumBias:"auto",kernelPCF:new Float32Array([1,0,1,1,-1,1,0,1,-1,0,-1,-1,1,-1,0,-1]),precision:"highp",_lastRenderNotCastShadow:!1,_frameBuffer:new It,_textures:{},_shadowMapNumber:{POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},_depthMaterials:{},_distanceMaterials:{},_receivers:[],_lightsCastShadow:[],_lightCameras:{},_lightMaterials:{},_texturePool:new Sp}},function(){this._gaussianPassH=new Bt({fragment:le.source("clay.compositor.gaussian_blur")}),this._gaussianPassV=new Bt({fragment:le.source("clay.compositor.gaussian_blur")}),this._gaussianPassH.setUniform("blurSize",this.shadowBlur),this._gaussianPassH.setUniform("blurDir",0),this._gaussianPassV.setUniform("blurSize",this.shadowBlur),this._gaussianPassV.setUniform("blurDir",1),this._outputDepthPass=new Bt({fragment:le.source("clay.sm.debug_depth")})},{render:function(e,t,n,i){n||(n=t.getMainCamera()),this.trigger("beforerender",this,e,t,n),this._renderShadowPass(e,t,n,i),this.trigger("afterrender",this,e,t,n)},renderDebug:function(e,t){e.saveClear();var n=e.viewport,i=0,r=0,a=t||n.width/4,s=a;this.softShadow===ii.VSM?this._outputDepthPass.material.define("fragment","USE_VSM"):this._outputDepthPass.material.undefine("fragment","USE_VSM");for(var o in this._textures){var l=this._textures[o];e.setViewport(i,r,a*l.width/l.height,s),this._outputDepthPass.setUniform("depthMap",l),this._outputDepthPass.render(e),i+=a*l.width/l.height}e.setViewport(n),e.restoreClear()},_updateReceivers:function(e,t){if(t.receiveShadow?(this._receivers.push(t),t.material.set("shadowEnabled",1),t.material.set("pcfKernel",this.kernelPCF)):t.material.set("shadowEnabled",0),this.softShadow===ii.VSM)t.material.define("fragment","USE_VSM"),t.material.undefine("fragment","PCF_KERNEL_SIZE");else{t.material.undefine("fragment","USE_VSM");var n=this.kernelPCF;n&&n.length?t.material.define("fragment","PCF_KERNEL_SIZE",n.length/2):t.material.undefine("fragment","PCF_KERNEL_SIZE")}},_update:function(e,t){var n=this;t.traverse(function(a){a.isRenderable()&&n._updateReceivers(e,a)});for(var i=0;i<t.lights.length;i++){var r=t.lights[i];r.castShadow&&!r.invisible&&this._lightsCastShadow.push(r)}},_renderShadowPass:function(e,t,n,i){for(var r in this._shadowMapNumber)this._shadowMapNumber[r]=0;this._lightsCastShadow.length=0,this._receivers.length=0;var a=e.gl;if(i||t.update(),n&&n.update(),t.updateLights(),this._update(e,t),!this._lightsCastShadow.length&&this._lastRenderNotCastShadow)return;this._lastRenderNotCastShadow=this._lightsCastShadow===0,a.enable(a.DEPTH_TEST),a.depthMask(!0),a.disable(a.BLEND),a.clearColor(1,1,1,1);for(var s=[],o=[],l=[],c=[],h=[],u=[],f,d=0;d<this._lightsCastShadow.length;d++){var p=this._lightsCastShadow[d];if(p.type==="DIRECTIONAL_LIGHT"){if(f){console.warn("Only one direectional light supported with shadow cascade");continue}if(p.shadowCascade>4){console.warn("Support at most 4 cascade");continue}p.shadowCascade>1&&(f=p),this.renderDirectionalLightShadow(e,t,n,p,h,c,l)}else p.type==="SPOT_LIGHT"?this.renderSpotLightShadow(e,t,p,o,s):p.type==="POINT_LIGHT"&&this.renderPointLightShadow(e,t,p,u);this._shadowMapNumber[p.type]++}for(var g in this._shadowMapNumber)for(var v=this._shadowMapNumber[g],m=g+"_SHADOWMAP_COUNT",d=0;d<this._receivers.length;d++){var y=this._receivers[d],_=y.material;_.fragmentDefines[m]!==v&&(v>0?_.define("fragment",m,v):_.isDefined("fragment",m)&&_.undefine("fragment",m))}for(var d=0;d<this._receivers.length;d++){var y=this._receivers[d],_=y.material;f?_.define("fragment","SHADOW_CASCADE",f.shadowCascade):_.undefine("fragment","SHADOW_CASCADE")}var x=t.shadowUniforms;function A(T){return T.height}if(l.length>0){var E=l.map(A);if(x.directionalLightShadowMaps={value:l,type:"tv"},x.directionalLightMatrices={value:c,type:"m4v"},x.directionalLightShadowMapSizes={value:E,type:"1fv"},f){var w=h.slice(),b=h.slice();w.pop(),b.shift(),w.reverse(),b.reverse(),c.reverse(),x.shadowCascadeClipsNear={value:w,type:"1fv"},x.shadowCascadeClipsFar={value:b,type:"1fv"}}}if(s.length>0){var M=s.map(A),x=t.shadowUniforms;x.spotLightShadowMaps={value:s,type:"tv"},x.spotLightMatrices={value:o,type:"m4v"},x.spotLightShadowMapSizes={value:M,type:"1fv"}}u.length>0&&(x.pointLightShadowMaps={value:u,type:"tv"})},renderDirectionalLightShadow:function(){var e=new vh,t=new ue,n=new xn,i=new ue,r=new ue,a=new ue,s=new ue;return function(o,l,c,h,u,f,d){var p=this._getDepthMaterial(h),g={getMaterial:function(ye){return ye.shadowDepthMaterial||p},isMaterialChanged:Fu,getUniform:Jl,ifRender:function(ye){return ye.castShadow},sortCompare:Ss.opaqueSortCompare};if(!l.viewBoundingBoxLastFrame.isFinite()){var v=l.getBoundingBox();l.viewBoundingBoxLastFrame.copy(v).applyTransform(c.viewMatrix)}var m=Math.min(-l.viewBoundingBoxLastFrame.min.z,c.far),y=Math.max(-l.viewBoundingBoxLastFrame.max.z,c.near),_=this._getDirectionalLightCamera(h,l,c),x=a.array;s.copy(_.projectionMatrix),ne.invert(r.array,_.worldTransform.array),ne.multiply(r.array,r.array,c.worldTransform.array),ne.multiply(x,s.array,r.array);for(var A=[],E=c instanceof qt,w=(c.near+c.far)/(c.near-c.far),b=2*c.near*c.far/(c.near-c.far),M=0;M<=h.shadowCascade;M++){var T=y*Math.pow(m/y,M/h.shadowCascade),P=y+(m-y)*M/h.shadowCascade,O=T*h.cascadeSplitLogFactor+P*(1-h.cascadeSplitLogFactor);A.push(O),u.push(-(-O*w+b)/-O)}var D=this._getTexture(h,h.shadowCascade);d.push(D);var N=o.viewport,B=o.gl;this._frameBuffer.attach(D),this._frameBuffer.bind(o),B.clear(B.COLOR_BUFFER_BIT|B.DEPTH_BUFFER_BIT);for(var M=0;M<h.shadowCascade;M++){var z=A[M],Y=A[M+1];E?ne.perspective(t.array,c.fov/180*Math.PI,c.aspect,z,Y):ne.ortho(t.array,c.left,c.right,c.bottom,c.top,z,Y),e.setFromProjection(t),e.getTransformedBoundingBox(n,r),n.applyProjection(s);var F=n.min.array,J=n.max.array;F[0]=Math.max(F[0],-1),F[1]=Math.max(F[1],-1),J[0]=Math.min(J[0],1),J[1]=Math.min(J[1],1),i.ortho(F[0],J[0],F[1],J[1],1,-1),_.projectionMatrix.multiplyLeft(i);var V=h.shadowResolution||512;o.setViewport((h.shadowCascade-M-1)*V,0,V,V,1);var ce=l.updateRenderList(_);o.renderPass(ce.opaque,_,g),this.softShadow===ii.VSM&&this._gaussianFilter(o,D,D.width);var fe=new ue;fe.copy(_.viewMatrix).multiplyLeft(_.projectionMatrix),f.push(fe.array),_.projectionMatrix.copy(s)}this._frameBuffer.unbind(o),o.setViewport(N)}}(),renderSpotLightShadow:function(e,t,n,i,r){var a=this._getTexture(n),s=this._getSpotLightCamera(n),o=e.gl;this._frameBuffer.attach(a),this._frameBuffer.bind(e),o.clear(o.COLOR_BUFFER_BIT|o.DEPTH_BUFFER_BIT);var l=this._getDepthMaterial(n),c={getMaterial:function(f){return f.shadowDepthMaterial||l},isMaterialChanged:Fu,getUniform:Jl,ifRender:function(f){return f.castShadow},sortCompare:Ss.opaqueSortCompare},h=t.updateRenderList(s);e.renderPass(h.opaque,s,c),this._frameBuffer.unbind(e),this.softShadow===ii.VSM&&this._gaussianFilter(e,a,a.width);var u=new ue;u.copy(s.worldTransform).invert().multiplyLeft(s.projectionMatrix),r.push(a),i.push(u.array)},renderPointLightShadow:function(e,t,n,i){var r=this._getTexture(n),a=e.gl;i.push(r);var s=this._getDepthMaterial(n),o={getMaterial:function(y){return y.shadowDepthMaterial||s},getUniform:Jl,sortCompare:Ss.opaqueSortCompare},l={px:[],py:[],pz:[],nx:[],ny:[],nz:[]},c=new xn,h=n.getWorldPosition().array,u=new xn,f=n.range;u.min.setArray(h),u.max.setArray(h);var d=new $(f,f,f);u.max.add(d),u.min.sub(d);var p={px:!1,py:!1,pz:!1,nx:!1,ny:!1,nz:!1};t.traverse(function(y){if(y.isRenderable()&&y.castShadow){var _=y.geometry;if(!_.boundingBox){for(var x=0;x<Vi.length;x++)l[Vi[x]].push(y);return}if(c.transformFrom(_.boundingBox,y.worldTransform),!c.intersectBoundingBox(u))return;c.updateVertices();for(var x=0;x<Vi.length;x++)p[Vi[x]]=!1;for(var x=0;x<8;x++){var A=c.vertices[x],E=A[0]-h[0],w=A[1]-h[1],b=A[2]-h[2],M=Math.abs(E),T=Math.abs(w),P=Math.abs(b);M>T?M>P?p[E>0?"px":"nx"]=!0:p[b>0?"pz":"nz"]=!0:T>P?p[w>0?"py":"ny"]=!0:p[b>0?"pz":"nz"]=!0}for(var x=0;x<Vi.length;x++)p[Vi[x]]&&l[Vi[x]].push(y)}});for(var g=0;g<6;g++){var v=Vi[g],m=this._getPointLightCamera(n,v);this._frameBuffer.attach(r,a.COLOR_ATTACHMENT0,a.TEXTURE_CUBE_MAP_POSITIVE_X+g),this._frameBuffer.bind(e),a.clear(a.COLOR_BUFFER_BIT|a.DEPTH_BUFFER_BIT),e.renderPass(l[v],m,o)}this._frameBuffer.unbind(e)},_getDepthMaterial:function(e){var t=this._lightMaterials[e.__uid__],n=e.type==="POINT_LIGHT";if(!t){var i=n?"clay.sm.distance.":"clay.sm.depth.";t=new Wn({precision:this.precision,shader:new le(le.source(i+"vertex"),le.source(i+"fragment"))}),this._lightMaterials[e.__uid__]=t}return e.shadowSlopeScale!=null&&t.setUniform("slopeScale",e.shadowSlopeScale),e.shadowBias!=null&&t.setUniform("bias",e.shadowBias),this.softShadow===ii.VSM?t.define("fragment","USE_VSM"):t.undefine("fragment","USE_VSM"),n&&(t.set("lightPosition",e.getWorldPosition().array),t.set("range",e.range)),t},_gaussianFilter:function(e,t,n){var i={width:n,height:n,type:oe.FLOAT},r=this._texturePool.get(i);this._frameBuffer.attach(r),this._frameBuffer.bind(e),this._gaussianPassH.setUniform("texture",t),this._gaussianPassH.setUniform("textureWidth",n),this._gaussianPassH.render(e),this._frameBuffer.attach(t),this._gaussianPassV.setUniform("texture",r),this._gaussianPassV.setUniform("textureHeight",n),this._gaussianPassV.render(e),this._frameBuffer.unbind(e),this._texturePool.put(r)},_getTexture:function(e,t){var n=e.__uid__,i=this._textures[n],r=e.shadowResolution||512;return t=t||1,i||(e.type==="POINT_LIGHT"?i=new Wr:i=new We,i.width=r*t,i.height=r,this.softShadow===ii.VSM?(i.type=oe.FLOAT,i.anisotropic=4):(i.minFilter=ee.NEAREST,i.magFilter=ee.NEAREST,i.useMipmap=!1),this._textures[n]=i),i},_getPointLightCamera:function(e,t){this._lightCameras.point||(this._lightCameras.point={px:new qt,nx:new qt,py:new qt,ny:new qt,pz:new qt,nz:new qt});var n=this._lightCameras.point[t];switch(n.far=e.range,n.fov=90,n.position.set(0,0,0),t){case"px":n.lookAt($.POSITIVE_X,$.NEGATIVE_Y);break;case"nx":n.lookAt($.NEGATIVE_X,$.NEGATIVE_Y);break;case"py":n.lookAt($.POSITIVE_Y,$.POSITIVE_Z);break;case"ny":n.lookAt($.NEGATIVE_Y,$.NEGATIVE_Z);break;case"pz":n.lookAt($.POSITIVE_Z,$.NEGATIVE_Y);break;case"nz":n.lookAt($.NEGATIVE_Z,$.NEGATIVE_Y);break}return e.getWorldPosition(n.position),n.update(),n},_getDirectionalLightCamera:function(){var e=new ue,t=new xn,n=new xn;return function(i,r,a){this._lightCameras.directional||(this._lightCameras.directional=new za);var s=this._lightCameras.directional;t.copy(r.viewBoundingBoxLastFrame),t.intersection(a.frustum.boundingBox),s.position.copy(t.min).add(t.max).scale(.5).transformMat4(a.worldTransform),s.rotation.copy(i.rotation),s.scale.copy(i.scale),s.updateWorldTransform(),ue.invert(e,s.worldTransform),ue.multiply(e,e,a.worldTransform),n.copy(t).applyTransform(e);var o=n.min.array,l=n.max.array;return s.position.set((o[0]+l[0])/2,(o[1]+l[1])/2,l[2]).transformMat4(s.worldTransform),s.near=0,s.far=-o[2]+l[2],isNaN(this.lightFrustumBias)?s.far*=4:s.far+=this.lightFrustumBias,s.left=o[0],s.right=l[0],s.top=l[1],s.bottom=o[1],s.update(!0),s}}(),_getSpotLightCamera:function(e){this._lightCameras.spot||(this._lightCameras.spot=new qt);var t=this._lightCameras.spot;return t.fov=e.penumbraAngle*2,t.far=e.range,t.worldTransform.copy(e.worldTransform),t.updateProjectionMatrix(),ne.invert(t.viewMatrix.array,t.worldTransform.array),t},dispose:function(e){var t=e.gl||e;this._frameBuffer&&this._frameBuffer.dispose(t);for(var n in this._textures)this._textures[n].dispose(t);this._texturePool.clear(e.gl),this._depthMaterials={},this._distanceMaterials={},this._textures={},this._lightCameras={},this._shadowMapNumber={POINT_LIGHT:0,DIRECTIONAL_LIGHT:0,SPOT_LIGHT:0},this._meshMaterials={};for(var i=0;i<this._receivers.length;i++){var r=this._receivers[i];if(r.material){var a=r.material;a.undefine("fragment","POINT_LIGHT_SHADOW_COUNT"),a.undefine("fragment","DIRECTIONAL_LIGHT_SHADOW_COUNT"),a.undefine("fragment","AMBIENT_LIGHT_SHADOW_COUNT"),a.set("shadowEnabled",0)}}this._receivers=[],this._lightsCastShadow=[]}});ii.VSM=1;ii.PCF=2;var Rs=an.extend(function(){return{name:"",inputLinks:{},outputLinks:{},_prevOutputTextures:{},_outputTextures:{},_outputReferences:{},_rendering:!1,_rendered:!1,_compositor:null}},{updateParameter:function(e,t){var n=this.outputs[e],i=n.parameters,r=n._parametersCopy;if(r||(r=n._parametersCopy={}),i)for(var a in i)a!=="width"&&a!=="height"&&(r[a]=i[a]);var s,o;return i.width instanceof Function?s=i.width.call(this,t):s=i.width,i.height instanceof Function?o=i.height.call(this,t):o=i.height,(r.width!==s||r.height!==o)&&this._outputTextures[e]&&this._outputTextures[e].dispose(t.gl),r.width=s,r.height=o,r},setParameter:function(e,t){},getParameter:function(e){},setParameters:function(e){for(var t in e)this.setParameter(t,e[t])},render:function(){},getOutput:function(e,t){if(t==null)return t=e,this._outputTextures[t];var n=this.outputs[t];if(n)return this._rendered?n.outputLastFrame?this._prevOutputTextures[t]:this._outputTextures[t]:this._rendering?(this._prevOutputTextures[t]||(this._prevOutputTextures[t]=this._compositor.allocateTexture(n.parameters||{})),this._prevOutputTextures[t]):(this.render(e),this._outputTextures[t])},removeReference:function(e){if(this._outputReferences[e]--,this._outputReferences[e]===0){var t=this.outputs[e];t.keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}},link:function(e,t,n){this.inputLinks[e]={node:t,pin:n},t.outputLinks[n]||(t.outputLinks[n]=[]),t.outputLinks[n].push({node:this,pin:e}),this.pass.material.enableTexture(e)},clear:function(){this.inputLinks={},this.outputLinks={}},updateReference:function(e){if(!this._rendering){this._rendering=!0;for(var t in this.inputLinks){var n=this.inputLinks[t];n.node.updateReference(n.pin)}this._rendering=!1}e&&this._outputReferences[e]++},beforeFrame:function(){this._rendered=!1;for(var e in this.outputLinks)this._outputReferences[e]=0},afterFrame:function(){for(var e in this.outputLinks)if(this._outputReferences[e]>0){var t=this.outputs[e];t.keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}}}),Bu=an.extend(function(){return{nodes:[]}},{dirty:function(){this._dirty=!0},addNode:function(e){this.nodes.indexOf(e)>=0||(this.nodes.push(e),this._dirty=!0)},removeNode:function(e){typeof e=="string"&&(e=this.getNodeByName(e));var t=this.nodes.indexOf(e);t>=0&&(this.nodes.splice(t,1),this._dirty=!0)},getNodeByName:function(e){for(var t=0;t<this.nodes.length;t++)if(this.nodes[t].name===e)return this.nodes[t]},update:function(){for(var e=0;e<this.nodes.length;e++)this.nodes[e].clear();for(var e=0;e<this.nodes.length;e++){var t=this.nodes[e];if(t.inputs){for(var n in t.inputs)if(t.inputs[n]){if(t.pass&&!t.pass.material.isUniformEnabled(n)){console.warn("Pin "+t.name+"."+n+" not used.");continue}var i=t.inputs[n],r=this.findPin(i);r?t.link(n,r.node,r.pin):console.warn(typeof i=="string"?"Node "+i+" not exist":"Pin of "+i.node+"."+i.pin+" not exist")}}}},findPin:function(e){var t;if((typeof e=="string"||e instanceof Rs)&&(e={node:e}),typeof e.node=="string")for(var n=0;n<this.nodes.length;n++){var i=this.nodes[n];i.name===e.node&&(t=i)}else t=e.node;if(t){var r=e.pin;if(r||t.outputs&&(r=Object.keys(t.outputs)[0]),t.outputs[r])return{node:t,pin:r}}}}),r0=Bu.extend(function(){return{_outputs:[],_texturePool:new Sp,_frameBuffer:new It({depthBuffer:!1})}},{addNode:function(e){Bu.prototype.addNode.call(this,e),e._compositor=this},render:function(e,t){if(this._dirty){this.update(),this._dirty=!1,this._outputs.length=0;for(var n=0;n<this.nodes.length;n++)this.nodes[n].outputs||this._outputs.push(this.nodes[n])}for(var n=0;n<this.nodes.length;n++)this.nodes[n].beforeFrame();for(var n=0;n<this._outputs.length;n++)this._outputs[n].updateReference();for(var n=0;n<this._outputs.length;n++)this._outputs[n].render(e,t);for(var n=0;n<this.nodes.length;n++)this.nodes[n].afterFrame()},allocateTexture:function(e){return this._texturePool.get(e)},releaseTexture:function(e){this._texturePool.put(e)},getFrameBuffer:function(){return this._frameBuffer},dispose:function(e){this._texturePool.clear(e)}}),a0=Rs.extend({name:"scene",scene:null,camera:null,autoUpdateScene:!0,preZ:!1},function(){this.frameBuffer=new It},{render:function(e){this._rendering=!0;var t=e.gl;this.trigger("beforerender");var n;if(!this.outputs)n=e.render(this.scene,this.camera,!this.autoUpdateScene,this.preZ);else{var i=this.frameBuffer;for(var r in this.outputs){var a=this.updateParameter(r,e),s=this.outputs[r],o=this._compositor.allocateTexture(a);this._outputTextures[r]=o;var l=s.attachment||t.COLOR_ATTACHMENT0;typeof l=="string"&&(l=t[l]),i.attach(o,l)}i.bind(e);var c=e.getGLExtension("EXT_draw_buffers");if(c){var h=[];for(var l in this.outputs)l=parseInt(l),l>=t.COLOR_ATTACHMENT0&&l<=t.COLOR_ATTACHMENT0+8&&h.push(l);c.drawBuffersEXT(h)}e.saveClear(),e.clearBit=ee.DEPTH_BUFFER_BIT|ee.COLOR_BUFFER_BIT,n=e.render(this.scene,this.camera,!this.autoUpdateScene,this.preZ),e.restoreClear(),i.unbind(e)}this.trigger("afterrender",n),this._rendering=!1,this._rendered=!0}});const s0=a0;var o0=Rs.extend(function(){return{texture:null,outputs:{color:{}}}},function(){},{getOutput:function(e,t){return this.texture},beforeFrame:function(){},afterFrame:function(){}});const l0=o0;var c0=Rs.extend(function(){return{name:"",inputs:{},outputs:null,shader:"",inputLinks:{},outputLinks:{},pass:null,_prevOutputTextures:{},_outputTextures:{},_outputReferences:{},_rendering:!1,_rendered:!1,_compositor:null}},function(){var e=new Bt({fragment:this.shader});this.pass=e},{render:function(e,t){this.trigger("beforerender",e),this._rendering=!0;var n=e.gl;for(var i in this.inputLinks){var r=this.inputLinks[i],a=r.node.getOutput(e,r.pin);this.pass.setUniform(i,a)}if(!this.outputs)this.pass.outputs=null,this._compositor.getFrameBuffer().unbind(e),this.pass.render(e,t);else{this.pass.outputs={};var s={};for(var o in this.outputs){var l=this.updateParameter(o,e);isNaN(l.width)&&this.updateParameter(o,e);var c=this.outputs[o],h=this._compositor.allocateTexture(l);this._outputTextures[o]=h;var u=c.attachment||n.COLOR_ATTACHMENT0;typeof u=="string"&&(u=n[u]),s[u]=h}this._compositor.getFrameBuffer().bind(e);for(var u in s)this._compositor.getFrameBuffer().attach(s[u],u);this.pass.render(e),this._compositor.getFrameBuffer().updateMipmap(e)}for(var i in this.inputLinks){var r=this.inputLinks[i];r.node.removeReference(r.pin)}this._rendering=!1,this._rendered=!0,this.trigger("afterrender",e)},updateParameter:function(e,t){var n=this.outputs[e],i=n.parameters,r=n._parametersCopy;if(r||(r=n._parametersCopy={}),i)for(var a in i)a!=="width"&&a!=="height"&&(r[a]=i[a]);var s,o;return typeof i.width=="function"?s=i.width.call(this,t):s=i.width,typeof i.height=="function"?o=i.height.call(this,t):o=i.height,s=Math.ceil(s),o=Math.ceil(o),(r.width!==s||r.height!==o)&&this._outputTextures[e]&&this._outputTextures[e].dispose(t),r.width=s,r.height=o,r},setParameter:function(e,t){this.pass.setUniform(e,t)},getParameter:function(e){return this.pass.getUniform(e)},setParameters:function(e){for(var t in e)this.setParameter(t,e[t])},define:function(e,t){this.pass.material.define("fragment",e,t)},undefine:function(e){this.pass.material.undefine("fragment",e)},removeReference:function(e){if(this._outputReferences[e]--,this._outputReferences[e]===0){var t=this.outputs[e];t.keepLastFrame?(this._prevOutputTextures[e]&&this._compositor.releaseTexture(this._prevOutputTextures[e]),this._prevOutputTextures[e]=this._outputTextures[e]):this._compositor.releaseTexture(this._outputTextures[e])}},clear:function(){Rs.prototype.clear.call(this),this.pass.material.disableTexturesAll()}});const h0=c0,u0=`@export clay.compositor.coloradjust
varying vec2 v_Texcoord;
uniform sampler2D texture;
uniform float brightness : 0.0;
uniform float contrast : 1.0;
uniform float exposure : 0.0;
uniform float gamma : 1.0;
uniform float saturation : 1.0;
const vec3 w = vec3(0.2125, 0.7154, 0.0721);
void main()
{
 vec4 tex = texture2D( texture, v_Texcoord);
 vec3 color = clamp(tex.rgb + vec3(brightness), 0.0, 1.0);
 color = clamp( (color-vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);
 color = clamp( color * pow(2.0, exposure), 0.0, 1.0);
 color = clamp( pow(color, vec3(gamma)), 0.0, 1.0);
 float luminance = dot( color, w );
 color = mix(vec3(luminance), color, saturation);
 gl_FragColor = vec4(color, tex.a);
}
@end
@export clay.compositor.brightness
varying vec2 v_Texcoord;
uniform sampler2D texture;
uniform float brightness : 0.0;
void main()
{
 vec4 tex = texture2D( texture, v_Texcoord);
 vec3 color = tex.rgb + vec3(brightness);
 gl_FragColor = vec4(color, tex.a);
}
@end
@export clay.compositor.contrast
varying vec2 v_Texcoord;
uniform sampler2D texture;
uniform float contrast : 1.0;
void main()
{
 vec4 tex = texture2D( texture, v_Texcoord);
 vec3 color = (tex.rgb-vec3(0.5))*contrast+vec3(0.5);
 gl_FragColor = vec4(color, tex.a);
}
@end
@export clay.compositor.exposure
varying vec2 v_Texcoord;
uniform sampler2D texture;
uniform float exposure : 0.0;
void main()
{
 vec4 tex = texture2D(texture, v_Texcoord);
 vec3 color = tex.rgb * pow(2.0, exposure);
 gl_FragColor = vec4(color, tex.a);
}
@end
@export clay.compositor.gamma
varying vec2 v_Texcoord;
uniform sampler2D texture;
uniform float gamma : 1.0;
void main()
{
 vec4 tex = texture2D(texture, v_Texcoord);
 vec3 color = pow(tex.rgb, vec3(gamma));
 gl_FragColor = vec4(color, tex.a);
}
@end
@export clay.compositor.saturation
varying vec2 v_Texcoord;
uniform sampler2D texture;
uniform float saturation : 1.0;
const vec3 w = vec3(0.2125, 0.7154, 0.0721);
void main()
{
 vec4 tex = texture2D(texture, v_Texcoord);
 vec3 color = tex.rgb;
 float luminance = dot(color, w);
 color = mix(vec3(luminance), color, saturation);
 gl_FragColor = vec4(color, tex.a);
}
@end`,Ep=`@export clay.compositor.kernel.gaussian_9
float gaussianKernel[9];
gaussianKernel[0] = 0.07;
gaussianKernel[1] = 0.09;
gaussianKernel[2] = 0.12;
gaussianKernel[3] = 0.14;
gaussianKernel[4] = 0.16;
gaussianKernel[5] = 0.14;
gaussianKernel[6] = 0.12;
gaussianKernel[7] = 0.09;
gaussianKernel[8] = 0.07;
@end
@export clay.compositor.kernel.gaussian_13
float gaussianKernel[13];
gaussianKernel[0] = 0.02;
gaussianKernel[1] = 0.03;
gaussianKernel[2] = 0.06;
gaussianKernel[3] = 0.08;
gaussianKernel[4] = 0.11;
gaussianKernel[5] = 0.13;
gaussianKernel[6] = 0.14;
gaussianKernel[7] = 0.13;
gaussianKernel[8] = 0.11;
gaussianKernel[9] = 0.08;
gaussianKernel[10] = 0.06;
gaussianKernel[11] = 0.03;
gaussianKernel[12] = 0.02;
@end
@export clay.compositor.gaussian_blur
#define SHADER_NAME gaussian_blur
uniform sampler2D texture;varying vec2 v_Texcoord;
uniform float blurSize : 2.0;
uniform vec2 textureSize : [512.0, 512.0];
uniform float blurDir : 0.0;
@import clay.util.rgbm
@import clay.util.clamp_sample
void main (void)
{
 @import clay.compositor.kernel.gaussian_9
 vec2 off = blurSize / textureSize;
 off *= vec2(1.0 - blurDir, blurDir);
 vec4 sum = vec4(0.0);
 float weightAll = 0.0;
 for (int i = 0; i < 9; i++) {
 float w = gaussianKernel[i];
 vec4 texel = decodeHDR(clampSample(texture, v_Texcoord + float(i - 4) * off));
 sum += texel * w;
 weightAll += w;
 }
 gl_FragColor = encodeHDR(sum / max(weightAll, 0.01));
}
@end
`,f0=`@export clay.compositor.hdr.log_lum
varying vec2 v_Texcoord;
uniform sampler2D texture;
const vec3 w = vec3(0.2125, 0.7154, 0.0721);
@import clay.util.rgbm
void main()
{
 vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));
 float luminance = dot(tex.rgb, w);
 luminance = log(luminance + 0.001);
 gl_FragColor = encodeHDR(vec4(vec3(luminance), 1.0));
}
@end
@export clay.compositor.hdr.lum_adaption
varying vec2 v_Texcoord;
uniform sampler2D adaptedLum;
uniform sampler2D currentLum;
uniform float frameTime : 0.02;
@import clay.util.rgbm
void main()
{
 float fAdaptedLum = decodeHDR(texture2D(adaptedLum, vec2(0.5, 0.5))).r;
 float fCurrentLum = exp(encodeHDR(texture2D(currentLum, vec2(0.5, 0.5))).r);
 fAdaptedLum += (fCurrentLum - fAdaptedLum) * (1.0 - pow(0.98, 30.0 * frameTime));
 gl_FragColor = encodeHDR(vec4(vec3(fAdaptedLum), 1.0));
}
@end
@export clay.compositor.lum
varying vec2 v_Texcoord;
uniform sampler2D texture;
const vec3 w = vec3(0.2125, 0.7154, 0.0721);
void main()
{
 vec4 tex = texture2D( texture, v_Texcoord );
 float luminance = dot(tex.rgb, w);
 gl_FragColor = vec4(vec3(luminance), 1.0);
}
@end`,Mp=`
@export clay.compositor.lut
varying vec2 v_Texcoord;
uniform sampler2D texture;
uniform sampler2D lookup;
void main()
{
 vec4 tex = texture2D(texture, v_Texcoord);
 float blueColor = tex.b * 63.0;
 vec2 quad1;
 quad1.y = floor(floor(blueColor) / 8.0);
 quad1.x = floor(blueColor) - (quad1.y * 8.0);
 vec2 quad2;
 quad2.y = floor(ceil(blueColor) / 8.0);
 quad2.x = ceil(blueColor) - (quad2.y * 8.0);
 vec2 texPos1;
 texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);
 texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);
 vec2 texPos2;
 texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.r);
 texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * tex.g);
 vec4 newColor1 = texture2D(lookup, texPos1);
 vec4 newColor2 = texture2D(lookup, texPos2);
 vec4 newColor = mix(newColor1, newColor2, fract(blueColor));
 gl_FragColor = vec4(newColor.rgb, tex.w);
}
@end`,d0=`@export clay.compositor.vignette
#define OUTPUT_ALPHA
varying vec2 v_Texcoord;
uniform sampler2D texture;
uniform float darkness: 1;
uniform float offset: 1;
@import clay.util.rgbm
void main()
{
 vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));
 gl_FragColor.rgb = texel.rgb;
 vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(offset);
 gl_FragColor = encodeHDR(vec4(mix(texel.rgb, vec3(1.0 - darkness), dot(uv, uv)), texel.a));
}
@end`,wp=`@export clay.compositor.output
#define OUTPUT_ALPHA
varying vec2 v_Texcoord;
uniform sampler2D texture;
@import clay.util.rgbm
void main()
{
 vec4 tex = decodeHDR(texture2D(texture, v_Texcoord));
 gl_FragColor.rgb = tex.rgb;
#ifdef OUTPUT_ALPHA
 gl_FragColor.a = tex.a;
#else
 gl_FragColor.a = 1.0;
#endif
 gl_FragColor = encodeHDR(gl_FragColor);
#ifdef PREMULTIPLY_ALPHA
 gl_FragColor.rgb *= gl_FragColor.a;
#endif
}
@end`,Ap=`@export clay.compositor.bright
uniform sampler2D texture;
uniform float threshold : 1;
uniform float scale : 1.0;
uniform vec2 textureSize: [512, 512];
varying vec2 v_Texcoord;
const vec3 lumWeight = vec3(0.2125, 0.7154, 0.0721);
@import clay.util.rgbm
vec4 median(vec4 a, vec4 b, vec4 c)
{
 return a + b + c - min(min(a, b), c) - max(max(a, b), c);
}
void main()
{
 vec4 texel = decodeHDR(texture2D(texture, v_Texcoord));
#ifdef ANTI_FLICKER
 vec3 d = 1.0 / textureSize.xyx * vec3(1.0, 1.0, 0.0);
 vec4 s1 = decodeHDR(texture2D(texture, v_Texcoord - d.xz));
 vec4 s2 = decodeHDR(texture2D(texture, v_Texcoord + d.xz));
 vec4 s3 = decodeHDR(texture2D(texture, v_Texcoord - d.zy));
 vec4 s4 = decodeHDR(texture2D(texture, v_Texcoord + d.zy));
 texel = median(median(texel, s1, s2), s3, s4);
#endif
 float lum = dot(texel.rgb , lumWeight);
 vec4 color;
 if (lum > threshold && texel.a > 0.0)
 {
 color = vec4(texel.rgb * scale, texel.a * scale);
 }
 else
 {
 color = vec4(0.0);
 }
 gl_FragColor = encodeHDR(color);
}
@end
`,bp=`@export clay.compositor.downsample
uniform sampler2D texture;
uniform vec2 textureSize : [512, 512];
varying vec2 v_Texcoord;
@import clay.util.rgbm
float brightness(vec3 c)
{
 return max(max(c.r, c.g), c.b);
}
@import clay.util.clamp_sample
void main()
{
 vec4 d = vec4(-1.0, -1.0, 1.0, 1.0) / textureSize.xyxy;
#ifdef ANTI_FLICKER
 vec3 s1 = decodeHDR(clampSample(texture, v_Texcoord + d.xy)).rgb;
 vec3 s2 = decodeHDR(clampSample(texture, v_Texcoord + d.zy)).rgb;
 vec3 s3 = decodeHDR(clampSample(texture, v_Texcoord + d.xw)).rgb;
 vec3 s4 = decodeHDR(clampSample(texture, v_Texcoord + d.zw)).rgb;
 float s1w = 1.0 / (brightness(s1) + 1.0);
 float s2w = 1.0 / (brightness(s2) + 1.0);
 float s3w = 1.0 / (brightness(s3) + 1.0);
 float s4w = 1.0 / (brightness(s4) + 1.0);
 float oneDivideSum = 1.0 / (s1w + s2w + s3w + s4w);
 vec4 color = vec4(
 (s1 * s1w + s2 * s2w + s3 * s3w + s4 * s4w) * oneDivideSum,
 1.0
 );
#else
 vec4 color = decodeHDR(clampSample(texture, v_Texcoord + d.xy));
 color += decodeHDR(clampSample(texture, v_Texcoord + d.zy));
 color += decodeHDR(clampSample(texture, v_Texcoord + d.xw));
 color += decodeHDR(clampSample(texture, v_Texcoord + d.zw));
 color *= 0.25;
#endif
 gl_FragColor = encodeHDR(color);
}
@end`,Cp=`
@export clay.compositor.upsample
#define HIGH_QUALITY
uniform sampler2D texture;
uniform vec2 textureSize : [512, 512];
uniform float sampleScale: 0.5;
varying vec2 v_Texcoord;
@import clay.util.rgbm
@import clay.util.clamp_sample
void main()
{
#ifdef HIGH_QUALITY
 vec4 d = vec4(1.0, 1.0, -1.0, 0.0) / textureSize.xyxy * sampleScale;
 vec4 s;
 s = decodeHDR(clampSample(texture, v_Texcoord - d.xy));
 s += decodeHDR(clampSample(texture, v_Texcoord - d.wy)) * 2.0;
 s += decodeHDR(clampSample(texture, v_Texcoord - d.zy));
 s += decodeHDR(clampSample(texture, v_Texcoord + d.zw)) * 2.0;
 s += decodeHDR(clampSample(texture, v_Texcoord )) * 4.0;
 s += decodeHDR(clampSample(texture, v_Texcoord + d.xw)) * 2.0;
 s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));
 s += decodeHDR(clampSample(texture, v_Texcoord + d.wy)) * 2.0;
 s += decodeHDR(clampSample(texture, v_Texcoord + d.xy));
 gl_FragColor = encodeHDR(s / 16.0);
#else
 vec4 d = vec4(-1.0, -1.0, +1.0, +1.0) / textureSize.xyxy;
 vec4 s;
 s = decodeHDR(clampSample(texture, v_Texcoord + d.xy));
 s += decodeHDR(clampSample(texture, v_Texcoord + d.zy));
 s += decodeHDR(clampSample(texture, v_Texcoord + d.xw));
 s += decodeHDR(clampSample(texture, v_Texcoord + d.zw));
 gl_FragColor = encodeHDR(s / 4.0);
#endif
}
@end`,Rp=`@export clay.compositor.hdr.composite
#define TONEMAPPING
uniform sampler2D texture;
#ifdef BLOOM_ENABLED
uniform sampler2D bloom;
#endif
#ifdef LENSFLARE_ENABLED
uniform sampler2D lensflare;
uniform sampler2D lensdirt;
#endif
#ifdef LUM_ENABLED
uniform sampler2D lum;
#endif
#ifdef LUT_ENABLED
uniform sampler2D lut;
#endif
#ifdef COLOR_CORRECTION
uniform float brightness : 0.0;
uniform float contrast : 1.0;
uniform float saturation : 1.0;
#endif
#ifdef VIGNETTE
uniform float vignetteDarkness: 1.0;
uniform float vignetteOffset: 1.0;
#endif
uniform float exposure : 1.0;
uniform float bloomIntensity : 0.25;
uniform float lensflareIntensity : 1;
varying vec2 v_Texcoord;
@import clay.util.srgb
vec3 ACESToneMapping(vec3 color)
{
 const float A = 2.51;
 const float B = 0.03;
 const float C = 2.43;
 const float D = 0.59;
 const float E = 0.14;
 return (color * (A * color + B)) / (color * (C * color + D) + E);
}
float eyeAdaption(float fLum)
{
 return mix(0.2, fLum, 0.5);
}
#ifdef LUT_ENABLED
vec3 lutTransform(vec3 color) {
 float blueColor = color.b * 63.0;
 vec2 quad1;
 quad1.y = floor(floor(blueColor) / 8.0);
 quad1.x = floor(blueColor) - (quad1.y * 8.0);
 vec2 quad2;
 quad2.y = floor(ceil(blueColor) / 8.0);
 quad2.x = ceil(blueColor) - (quad2.y * 8.0);
 vec2 texPos1;
 texPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);
 texPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);
 vec2 texPos2;
 texPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.r);
 texPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * color.g);
 vec4 newColor1 = texture2D(lut, texPos1);
 vec4 newColor2 = texture2D(lut, texPos2);
 vec4 newColor = mix(newColor1, newColor2, fract(blueColor));
 return newColor.rgb;
}
#endif
@import clay.util.rgbm
void main()
{
 vec4 texel = vec4(0.0);
 vec4 originalTexel = vec4(0.0);
#ifdef TEXTURE_ENABLED
 texel = decodeHDR(texture2D(texture, v_Texcoord));
 originalTexel = texel;
#endif
#ifdef BLOOM_ENABLED
 vec4 bloomTexel = decodeHDR(texture2D(bloom, v_Texcoord));
 texel.rgb += bloomTexel.rgb * bloomIntensity;
 texel.a += bloomTexel.a * bloomIntensity;
#endif
#ifdef LENSFLARE_ENABLED
 texel += decodeHDR(texture2D(lensflare, v_Texcoord)) * texture2D(lensdirt, v_Texcoord) * lensflareIntensity;
#endif
 texel.a = min(texel.a, 1.0);
#ifdef LUM_ENABLED
 float fLum = texture2D(lum, vec2(0.5, 0.5)).r;
 float adaptedLumDest = 3.0 / (max(0.1, 1.0 + 10.0*eyeAdaption(fLum)));
 float exposureBias = adaptedLumDest * exposure;
#else
 float exposureBias = exposure;
#endif
#ifdef TONEMAPPING
 texel.rgb *= exposureBias;
 texel.rgb = ACESToneMapping(texel.rgb);
#endif
 texel = linearTosRGB(texel);
#ifdef LUT_ENABLED
 texel.rgb = lutTransform(clamp(texel.rgb,vec3(0.0),vec3(1.0)));
#endif
#ifdef COLOR_CORRECTION
 texel.rgb = clamp(texel.rgb + vec3(brightness), 0.0, 1.0);
 texel.rgb = clamp((texel.rgb - vec3(0.5))*contrast+vec3(0.5), 0.0, 1.0);
 float lum = dot(texel.rgb, vec3(0.2125, 0.7154, 0.0721));
 texel.rgb = mix(vec3(lum), texel.rgb, saturation);
#endif
#ifdef VIGNETTE
 vec2 uv = (v_Texcoord - vec2(0.5)) * vec2(vignetteOffset);
 texel.rgb = mix(texel.rgb, vec3(1.0 - vignetteDarkness), dot(uv, uv));
#endif
 gl_FragColor = encodeHDR(texel);
#ifdef DEBUG
 #if DEBUG == 1
 gl_FragColor = encodeHDR(decodeHDR(texture2D(texture, v_Texcoord)));
 #elif DEBUG == 2
 gl_FragColor = encodeHDR(decodeHDR(texture2D(bloom, v_Texcoord)) * bloomIntensity);
 #elif DEBUG == 3
 gl_FragColor = encodeHDR(decodeHDR(texture2D(lensflare, v_Texcoord) * lensflareIntensity));
 #endif
#endif
 if (originalTexel.a <= 0.01 && gl_FragColor.a > 1e-5) {
 gl_FragColor.a = dot(gl_FragColor.rgb, vec3(0.2125, 0.7154, 0.0721));
 }
#ifdef PREMULTIPLY_ALPHA
 gl_FragColor.rgb *= gl_FragColor.a;
#endif
}
@end`,p0=`@export clay.compositor.lensflare
#define SAMPLE_NUMBER 8
uniform sampler2D texture;
uniform sampler2D lenscolor;
uniform vec2 textureSize : [512, 512];
uniform float dispersal : 0.3;
uniform float haloWidth : 0.4;
uniform float distortion : 1.0;
varying vec2 v_Texcoord;
@import clay.util.rgbm
vec4 textureDistorted(
 in vec2 texcoord,
 in vec2 direction,
 in vec3 distortion
) {
 return vec4(
 decodeHDR(texture2D(texture, texcoord + direction * distortion.r)).r,
 decodeHDR(texture2D(texture, texcoord + direction * distortion.g)).g,
 decodeHDR(texture2D(texture, texcoord + direction * distortion.b)).b,
 1.0
 );
}
void main()
{
 vec2 texcoord = -v_Texcoord + vec2(1.0); vec2 textureOffset = 1.0 / textureSize;
 vec2 ghostVec = (vec2(0.5) - texcoord) * dispersal;
 vec2 haloVec = normalize(ghostVec) * haloWidth;
 vec3 distortion = vec3(-textureOffset.x * distortion, 0.0, textureOffset.x * distortion);
 vec4 result = vec4(0.0);
 for (int i = 0; i < SAMPLE_NUMBER; i++)
 {
 vec2 offset = fract(texcoord + ghostVec * float(i));
 float weight = length(vec2(0.5) - offset) / length(vec2(0.5));
 weight = pow(1.0 - weight, 10.0);
 result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;
 }
 result *= texture2D(lenscolor, vec2(length(vec2(0.5) - texcoord)) / length(vec2(0.5)));
 float weight = length(vec2(0.5) - fract(texcoord + haloVec)) / length(vec2(0.5));
 weight = pow(1.0 - weight, 10.0);
 vec2 offset = fract(texcoord + haloVec);
 result += textureDistorted(offset, normalize(ghostVec), distortion) * weight;
 gl_FragColor = result;
}
@end`,Lp=`@export clay.compositor.blend
#define SHADER_NAME blend
#ifdef TEXTURE1_ENABLED
uniform sampler2D texture1;
uniform float weight1 : 1.0;
#endif
#ifdef TEXTURE2_ENABLED
uniform sampler2D texture2;
uniform float weight2 : 1.0;
#endif
#ifdef TEXTURE3_ENABLED
uniform sampler2D texture3;
uniform float weight3 : 1.0;
#endif
#ifdef TEXTURE4_ENABLED
uniform sampler2D texture4;
uniform float weight4 : 1.0;
#endif
#ifdef TEXTURE5_ENABLED
uniform sampler2D texture5;
uniform float weight5 : 1.0;
#endif
#ifdef TEXTURE6_ENABLED
uniform sampler2D texture6;
uniform float weight6 : 1.0;
#endif
varying vec2 v_Texcoord;
@import clay.util.rgbm
void main()
{
 vec4 tex = vec4(0.0);
#ifdef TEXTURE1_ENABLED
 tex += decodeHDR(texture2D(texture1, v_Texcoord)) * weight1;
#endif
#ifdef TEXTURE2_ENABLED
 tex += decodeHDR(texture2D(texture2, v_Texcoord)) * weight2;
#endif
#ifdef TEXTURE3_ENABLED
 tex += decodeHDR(texture2D(texture3, v_Texcoord)) * weight3;
#endif
#ifdef TEXTURE4_ENABLED
 tex += decodeHDR(texture2D(texture4, v_Texcoord)) * weight4;
#endif
#ifdef TEXTURE5_ENABLED
 tex += decodeHDR(texture2D(texture5, v_Texcoord)) * weight5;
#endif
#ifdef TEXTURE6_ENABLED
 tex += decodeHDR(texture2D(texture6, v_Texcoord)) * weight6;
#endif
 gl_FragColor = encodeHDR(tex);
}
@end`,Pp=`@export clay.compositor.fxaa
uniform sampler2D texture;
uniform vec4 viewport : VIEWPORT;
varying vec2 v_Texcoord;
#define FXAA_REDUCE_MIN (1.0/128.0)
#define FXAA_REDUCE_MUL (1.0/8.0)
#define FXAA_SPAN_MAX 8.0
@import clay.util.rgbm
void main()
{
 vec2 resolution = 1.0 / viewport.zw;
 vec3 rgbNW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ) ).xyz;
 vec3 rgbNE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ) ).xyz;
 vec3 rgbSW = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ) ).xyz;
 vec3 rgbSE = decodeHDR( texture2D( texture, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ) ).xyz;
 vec4 rgbaM = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution ) );
 vec3 rgbM = rgbaM.xyz;
 float opacity = rgbaM.w;
 vec3 luma = vec3( 0.299, 0.587, 0.114 );
 float lumaNW = dot( rgbNW, luma );
 float lumaNE = dot( rgbNE, luma );
 float lumaSW = dot( rgbSW, luma );
 float lumaSE = dot( rgbSE, luma );
 float lumaM = dot( rgbM, luma );
 float lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );
 float lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );
 vec2 dir;
 dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));
 dir.y = ((lumaNW + lumaSW) - (lumaNE + lumaSE));
 float dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );
 float rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );
 dir = min( vec2( FXAA_SPAN_MAX, FXAA_SPAN_MAX),
 max( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),
 dir * rcpDirMin)) * resolution;
 vec3 rgbA = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ) ).xyz;
 rgbA += decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ) ).xyz;
 rgbA *= 0.5;
 vec3 rgbB = decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * -0.5 ) ).xyz;
 rgbB += decodeHDR( texture2D( texture, gl_FragCoord.xy * resolution + dir * 0.5 ) ).xyz;
 rgbB *= 0.25;
 rgbB += rgbA * 0.5;
 float lumaB = dot( rgbB, luma );
 if ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) )
 {
 gl_FragColor = vec4( rgbA, opacity );
 }
 else {
 gl_FragColor = vec4( rgbB, opacity );
 }
}
@end`;function m0(e){e.import(u0),e.import(Ep),e.import(f0),e.import(Mp),e.import(d0),e.import(wp),e.import(Ap),e.import(bp),e.import(Cp),e.import(Rp),e.import(p0),e.import(Lp),e.import(Pp)}m0(le);var v0=/^#source\((.*?)\)/;function g0(e,t){var n=new r0;t=t||{};var i={textures:{},parameters:{}},r=function(o,l){for(var c=0;c<e.nodes.length;c++){var h=e.nodes[c],u=_0(h,i,t);u&&n.addNode(u)}};for(var a in e.parameters){var s=e.parameters[a];i.parameters[a]=Th(s)}return T0(e,i,t,function(o){i.textures=o,r()}),n}function _0(e,t,n){var i=e.type||"filter",r,a,s;if(i==="filter"){var o=e.shader.trim(),l=v0.exec(o);if(l?r=le.source(l[1].trim()):o.charAt(0)==="#"&&(r=t.shaders[o.substr(1)]),r||(r=o),!r)return}if(e.inputs){a={};for(var c in e.inputs)typeof e.inputs[c]=="string"?a[c]=e.inputs[c]:a[c]={node:e.inputs[c].node,pin:e.inputs[c].pin}}if(e.outputs){s={};for(var c in e.outputs){var h=e.outputs[c];s[c]={},h.attachment!=null&&(s[c].attachment=h.attachment),h.keepLastFrame!=null&&(s[c].keepLastFrame=h.keepLastFrame),h.outputLastFrame!=null&&(s[c].outputLastFrame=h.outputLastFrame),h.parameters&&(s[c].parameters=Th(h.parameters))}}var u;if(i==="scene"?u=new s0({name:e.name,scene:n.scene,camera:n.camera,outputs:s}):i==="texture"?u=new l0({name:e.name,outputs:s}):u=new h0({name:e.name,shader:r,inputs:a,outputs:s}),u){if(e.parameters)for(var c in e.parameters){var f=e.parameters[c];typeof f=="string"?(f=f.trim(),f.charAt(0)==="#"?f=t.textures[f.substr(1)]:u.on("beforerender",S0(c,Dp(f)))):typeof f=="function"&&u.on("beforerender",f),u.setParameter(c,f)}if(e.defines&&u.pass)for(var c in e.defines){var f=e.defines[c];u.pass.material.define("fragment",c,f)}}return u}function x0(e,t){return e}function y0(e,t){return t}function Th(e){var t={};if(!e)return t;["type","minFilter","magFilter","wrapS","wrapT","flipY","useMipmap"].forEach(function(i){var r=e[i];r!=null&&(typeof r=="string"&&(r=oe[r]),t[i]=r)});var n=e.scale||1;return["width","height"].forEach(function(i){if(e[i]!=null){var r=e[i];typeof r=="string"?(r=r.trim(),t[i]=E0(i,Dp(r),n)):t[i]=r}}),t.width||(t.width=x0),t.height||(t.height=y0),e.useMipmap!=null&&(t.useMipmap=e.useMipmap),t}function T0(e,t,n,i){if(!e.textures){i({});return}var r={},a=0,s=!1,o=n.textureRootPath;Nt.each(e.textures,function(l,c){var h,u=l.path,f=Th(l.parameters);if(Array.isArray(u)&&u.length===6)o&&(u=u.map(function(d){return Nt.relative2absolute(d,o)})),h=new Wr(f);else if(typeof u=="string")o&&(u=Nt.relative2absolute(u,o)),h=new We(f);else return;h.load(u),a++,h.once("success",function(){r[c]=h,a--,a===0&&(i(r),s=!0)})}),a===0&&!s&&i(r)}function S0(e,t){return function(n){var i=n.getDevicePixelRatio(),r=n.getWidth(),a=n.getHeight(),s=t(r,a,i);this.setParameter(e,s)}}function E0(e,t,n){return n=n||1,function(i){var r=i.getDevicePixelRatio(),a=i.getWidth()*n,s=i.getHeight()*n;return t(a,s,r)}}function Dp(e){var t=/^expr\((.*)\)$/.exec(e);if(t)try{var n=new Function("width","height","dpr","return "+t[1]);return n(1,1),n}catch{throw new Error("Invalid expression.")}}function Ga(e,t){for(var n=0,i=1/t,r=e;r>0;)n=n+i*(r%t),r=Math.floor(r/t),i=i/t;return n}const M0=`@export ecgl.ssao.estimate

uniform sampler2D depthTex;

uniform sampler2D normalTex;

uniform sampler2D noiseTex;

uniform vec2 depthTexSize;

uniform vec2 noiseTexSize;

uniform mat4 projection;

uniform mat4 projectionInv;

uniform mat4 viewInverseTranspose;

uniform vec3 kernel[KERNEL_SIZE];

uniform float radius : 1;

uniform float power : 1;

uniform float bias: 1e-2;

uniform float intensity: 1.0;

varying vec2 v_Texcoord;

float ssaoEstimator(in vec3 originPos, in mat3 kernelBasis) {
 float occlusion = 0.0;

 for (int i = 0; i < KERNEL_SIZE; i++) {
 vec3 samplePos = kernel[i];
#ifdef NORMALTEX_ENABLED
 samplePos = kernelBasis * samplePos;
#endif
 samplePos = samplePos * radius + originPos;

 vec4 texCoord = projection * vec4(samplePos, 1.0);
 texCoord.xy /= texCoord.w;

 vec4 depthTexel = texture2D(depthTex, texCoord.xy * 0.5 + 0.5);

 float sampleDepth = depthTexel.r * 2.0 - 1.0;
 if (projection[3][3] == 0.0) {
 sampleDepth = projection[3][2] / (sampleDepth * projection[2][3] - projection[2][2]);
 }
 else {
 sampleDepth = (sampleDepth - projection[3][2]) / projection[2][2];
 }
 
 float rangeCheck = smoothstep(0.0, 1.0, radius / abs(originPos.z - sampleDepth));
 occlusion += rangeCheck * step(samplePos.z, sampleDepth - bias);
 }
#ifdef NORMALTEX_ENABLED
 occlusion = 1.0 - occlusion / float(KERNEL_SIZE);
#else
 occlusion = 1.0 - clamp((occlusion / float(KERNEL_SIZE) - 0.6) * 2.5, 0.0, 1.0);
#endif
 return pow(occlusion, power);
}

void main()
{

 vec4 depthTexel = texture2D(depthTex, v_Texcoord);

#ifdef NORMALTEX_ENABLED
 vec4 tex = texture2D(normalTex, v_Texcoord);
 if (dot(tex.rgb, tex.rgb) == 0.0) {
 gl_FragColor = vec4(1.0);
 return;
 }
 vec3 N = tex.rgb * 2.0 - 1.0;
 N = (viewInverseTranspose * vec4(N, 0.0)).xyz;

 vec2 noiseTexCoord = depthTexSize / vec2(noiseTexSize) * v_Texcoord;
 vec3 rvec = texture2D(noiseTex, noiseTexCoord).rgb * 2.0 - 1.0;
 vec3 T = normalize(rvec - N * dot(rvec, N));
 vec3 BT = normalize(cross(N, T));
 mat3 kernelBasis = mat3(T, BT, N);
#else
 if (depthTexel.r > 0.99999) {
 gl_FragColor = vec4(1.0);
 return;
 }
 mat3 kernelBasis;
#endif

 float z = depthTexel.r * 2.0 - 1.0;

 vec4 projectedPos = vec4(v_Texcoord * 2.0 - 1.0, z, 1.0);
 vec4 p4 = projectionInv * projectedPos;

 vec3 position = p4.xyz / p4.w;

 float ao = ssaoEstimator(position, kernelBasis);
 ao = clamp(1.0 - (1.0 - ao) * intensity, 0.0, 1.0);
 gl_FragColor = vec4(vec3(ao), 1.0);
}

@end


@export ecgl.ssao.blur
#define SHADER_NAME SSAO_BLUR

uniform sampler2D ssaoTexture;

#ifdef NORMALTEX_ENABLED
uniform sampler2D normalTex;
#endif

varying vec2 v_Texcoord;

uniform vec2 textureSize;
uniform float blurSize : 1.0;

uniform int direction: 0.0;

#ifdef DEPTHTEX_ENABLED
uniform sampler2D depthTex;
uniform mat4 projection;
uniform float depthRange : 0.5;

float getLinearDepth(vec2 coord)
{
 float depth = texture2D(depthTex, coord).r * 2.0 - 1.0;
 return projection[3][2] / (depth * projection[2][3] - projection[2][2]);
}
#endif

void main()
{
 float kernel[5];
 kernel[0] = 0.122581;
 kernel[1] = 0.233062;
 kernel[2] = 0.288713;
 kernel[3] = 0.233062;
 kernel[4] = 0.122581;

 vec2 off = vec2(0.0);
 if (direction == 0) {
 off[0] = blurSize / textureSize.x;
 }
 else {
 off[1] = blurSize / textureSize.y;
 }

 vec2 coord = v_Texcoord;

 float sum = 0.0;
 float weightAll = 0.0;

#ifdef NORMALTEX_ENABLED
 vec3 centerNormal = texture2D(normalTex, v_Texcoord).rgb * 2.0 - 1.0;
#endif
#if defined(DEPTHTEX_ENABLED)
 float centerDepth = getLinearDepth(v_Texcoord);
#endif

 for (int i = 0; i < 5; i++) {
 vec2 coord = clamp(v_Texcoord + vec2(float(i) - 2.0) * off, vec2(0.0), vec2(1.0));

 float w = kernel[i];
#ifdef NORMALTEX_ENABLED
 vec3 normal = texture2D(normalTex, coord).rgb * 2.0 - 1.0;
 w *= clamp(dot(normal, centerNormal), 0.0, 1.0);
#endif
#ifdef DEPTHTEX_ENABLED
 float d = getLinearDepth(coord);
 w *= (1.0 - smoothstep(abs(centerDepth - d) / depthRange, 0.0, 1.0));
#endif

 weightAll += w;
 sum += texture2D(ssaoTexture, coord).r * w;
 }

 gl_FragColor = vec4(vec3(sum / weightAll), 1.0);
}

@end
`;le.import(M0);function Np(e){for(var t=new Uint8Array(e*e*4),n=0,i=new $,r=0;r<e;r++)for(var a=0;a<e;a++)i.set(Math.random()*2-1,Math.random()*2-1,0).normalize(),t[n++]=(i.x*.5+.5)*255,t[n++]=(i.y*.5+.5)*255,t[n++]=0,t[n++]=255;return t}function zu(e){return new We({pixels:Np(e),wrapS:oe.REPEAT,wrapT:oe.REPEAT,width:e,height:e})}function w0(e,t,n){var i=new Float32Array(e*3);t=t||0;for(var r=0;r<e;r++){var a=Ga(r+t,2)*(n?1:2)*Math.PI,s=Ga(r+t,3)*Math.PI,o=Math.random(),l=Math.cos(a)*Math.sin(s)*o,c=Math.cos(s)*o,h=Math.sin(a)*Math.sin(s)*o;i[r*3]=l,i[r*3+1]=c,i[r*3+2]=h}return i}function Ii(e){e=e||{},this._ssaoPass=new Bt({fragment:le.source("ecgl.ssao.estimate")}),this._blurPass=new Bt({fragment:le.source("ecgl.ssao.blur")}),this._framebuffer=new It({depthBuffer:!1}),this._ssaoTexture=new We,this._blurTexture=new We,this._blurTexture2=new We,this._depthTex=e.depthTexture,this._normalTex=e.normalTexture,this.setNoiseSize(4),this.setKernelSize(e.kernelSize||12),e.radius!=null&&this.setParameter("radius",e.radius),e.power!=null&&this.setParameter("power",e.power),this._normalTex||(this._ssaoPass.material.disableTexture("normalTex"),this._blurPass.material.disableTexture("normalTex")),this._depthTex||this._blurPass.material.disableTexture("depthTex"),this._blurPass.material.setUniform("normalTex",this._normalTex),this._blurPass.material.setUniform("depthTex",this._depthTex)}Ii.prototype.setDepthTexture=function(e){this._depthTex=e};Ii.prototype.setNormalTexture=function(e){this._normalTex=e,this._ssaoPass.material[e?"enableTexture":"disableTexture"]("normalTex"),this.setKernelSize(this._kernelSize)};Ii.prototype.update=function(e,t,n){var i=e.getWidth(),r=e.getHeight(),a=this._ssaoPass,s=this._blurPass;a.setUniform("kernel",this._kernels[n%this._kernels.length]),a.setUniform("depthTex",this._depthTex),this._normalTex!=null&&a.setUniform("normalTex",this._normalTex),a.setUniform("depthTexSize",[this._depthTex.width,this._depthTex.height]);var o=new ue;ue.transpose(o,t.worldTransform),a.setUniform("projection",t.projectionMatrix.array),a.setUniform("projectionInv",t.invProjectionMatrix.array),a.setUniform("viewInverseTranspose",o.array);var l=this._ssaoTexture,c=this._blurTexture,h=this._blurTexture2;l.width=i/2,l.height=r/2,c.width=i,c.height=r,h.width=i,h.height=r,this._framebuffer.attach(l),this._framebuffer.bind(e),e.gl.clearColor(1,1,1,1),e.gl.clear(e.gl.COLOR_BUFFER_BIT),a.render(e),s.setUniform("textureSize",[i/2,r/2]),s.setUniform("projection",t.projectionMatrix.array),this._framebuffer.attach(c),s.setUniform("direction",0),s.setUniform("ssaoTexture",l),s.render(e),this._framebuffer.attach(h),s.setUniform("textureSize",[i,r]),s.setUniform("direction",1),s.setUniform("ssaoTexture",c),s.render(e),this._framebuffer.unbind(e);var u=e.clearColor;e.gl.clearColor(u[0],u[1],u[2],u[3])};Ii.prototype.getTargetTexture=function(){return this._blurTexture2};Ii.prototype.setParameter=function(e,t){e==="noiseTexSize"?this.setNoiseSize(t):e==="kernelSize"?this.setKernelSize(t):e==="intensity"?this._ssaoPass.material.set("intensity",t):this._ssaoPass.setUniform(e,t)};Ii.prototype.setKernelSize=function(e){this._kernelSize=e,this._ssaoPass.material.define("fragment","KERNEL_SIZE",e),this._kernels=this._kernels||[];for(var t=0;t<30;t++)this._kernels[t]=w0(e,t*e,!!this._normalTex)};Ii.prototype.setNoiseSize=function(e){var t=this._ssaoPass.getUniform("noiseTex");t?(t.data=Np(e),t.width=t.height=e,t.dirty()):(t=zu(e),this._ssaoPass.setUniform("noiseTex",zu(e))),this._ssaoPass.setUniform("noiseTexSize",[e,e])};Ii.prototype.dispose=function(e){this._blurTexture.dispose(e),this._ssaoTexture.dispose(e),this._blurTexture2.dispose(e)};const A0=`@export ecgl.ssr.main

#define SHADER_NAME SSR
#define MAX_ITERATION 20;
#define SAMPLE_PER_FRAME 5;
#define TOTAL_SAMPLES 128;

uniform sampler2D sourceTexture;
uniform sampler2D gBufferTexture1;
uniform sampler2D gBufferTexture2;
uniform sampler2D gBufferTexture3;
uniform samplerCube specularCubemap;
uniform float specularIntensity: 1;

uniform mat4 projection;
uniform mat4 projectionInv;
uniform mat4 toViewSpace;
uniform mat4 toWorldSpace;

uniform float maxRayDistance: 200;

uniform float pixelStride: 16;
uniform float pixelStrideZCutoff: 50; 
uniform float screenEdgeFadeStart: 0.9; 
uniform float eyeFadeStart : 0.2; uniform float eyeFadeEnd: 0.8; 
uniform float minGlossiness: 0.2; uniform float zThicknessThreshold: 1;

uniform float nearZ;
uniform vec2 viewportSize : VIEWPORT_SIZE;

uniform float jitterOffset: 0;

varying vec2 v_Texcoord;

#ifdef DEPTH_DECODE
@import clay.util.decode_float
#endif

#ifdef PHYSICALLY_CORRECT
uniform sampler2D normalDistribution;
uniform float sampleOffset: 0;
uniform vec2 normalDistributionSize;

vec3 transformNormal(vec3 H, vec3 N) {
 vec3 upVector = N.y > 0.999 ? vec3(1.0, 0.0, 0.0) : vec3(0.0, 1.0, 0.0);
 vec3 tangentX = normalize(cross(N, upVector));
 vec3 tangentZ = cross(N, tangentX);
 return normalize(tangentX * H.x + N * H.y + tangentZ * H.z);
}
vec3 importanceSampleNormalGGX(float i, float roughness, vec3 N) {
 float p = fract((i + sampleOffset) / float(TOTAL_SAMPLES));
 vec3 H = texture2D(normalDistribution,vec2(roughness, p)).rgb;
 return transformNormal(H, N);
}
float G_Smith(float g, float ndv, float ndl) {
 float roughness = 1.0 - g;
 float k = roughness * roughness / 2.0;
 float G1V = ndv / (ndv * (1.0 - k) + k);
 float G1L = ndl / (ndl * (1.0 - k) + k);
 return G1L * G1V;
}
vec3 F_Schlick(float ndv, vec3 spec) {
 return spec + (1.0 - spec) * pow(1.0 - ndv, 5.0);
}
#endif

float fetchDepth(sampler2D depthTexture, vec2 uv)
{
 vec4 depthTexel = texture2D(depthTexture, uv);
 return depthTexel.r * 2.0 - 1.0;
}

float linearDepth(float depth)
{
 if (projection[3][3] == 0.0) {
 return projection[3][2] / (depth * projection[2][3] - projection[2][2]);
 }
 else {
 return (depth - projection[3][2]) / projection[2][2];
 }
}

bool rayIntersectDepth(float rayZNear, float rayZFar, vec2 hitPixel)
{
 if (rayZFar > rayZNear)
 {
 float t = rayZFar; rayZFar = rayZNear; rayZNear = t;
 }
 float cameraZ = linearDepth(fetchDepth(gBufferTexture2, hitPixel));
 return rayZFar <= cameraZ && rayZNear >= cameraZ - zThicknessThreshold;
}


bool traceScreenSpaceRay(
 vec3 rayOrigin, vec3 rayDir, float jitter,
 out vec2 hitPixel, out vec3 hitPoint, out float iterationCount
)
{
 float rayLength = ((rayOrigin.z + rayDir.z * maxRayDistance) > -nearZ)
 ? (-nearZ - rayOrigin.z) / rayDir.z : maxRayDistance;

 vec3 rayEnd = rayOrigin + rayDir * rayLength;

 vec4 H0 = projection * vec4(rayOrigin, 1.0);
 vec4 H1 = projection * vec4(rayEnd, 1.0);

 float k0 = 1.0 / H0.w, k1 = 1.0 / H1.w;

 vec3 Q0 = rayOrigin * k0, Q1 = rayEnd * k1;

 vec2 P0 = (H0.xy * k0 * 0.5 + 0.5) * viewportSize;
 vec2 P1 = (H1.xy * k1 * 0.5 + 0.5) * viewportSize;

 P1 += dot(P1 - P0, P1 - P0) < 0.0001 ? 0.01 : 0.0;
 vec2 delta = P1 - P0;

 bool permute = false;
 if (abs(delta.x) < abs(delta.y)) {
 permute = true;
 delta = delta.yx;
 P0 = P0.yx;
 P1 = P1.yx;
 }
 float stepDir = sign(delta.x);
 float invdx = stepDir / delta.x;

 vec3 dQ = (Q1 - Q0) * invdx;
 float dk = (k1 - k0) * invdx;

 vec2 dP = vec2(stepDir, delta.y * invdx);

 float strideScaler = 1.0 - min(1.0, -rayOrigin.z / pixelStrideZCutoff);
 float pixStride = 1.0 + strideScaler * pixelStride;

 dP *= pixStride; dQ *= pixStride; dk *= pixStride;

 vec4 pqk = vec4(P0, Q0.z, k0);
 vec4 dPQK = vec4(dP, dQ.z, dk);

 pqk += dPQK * jitter;
 float rayZFar = (dPQK.z * 0.5 + pqk.z) / (dPQK.w * 0.5 + pqk.w);
 float rayZNear;

 bool intersect = false;

 vec2 texelSize = 1.0 / viewportSize;

 iterationCount = 0.0;

 for (int i = 0; i < MAX_ITERATION; i++)
 {
 pqk += dPQK;

 rayZNear = rayZFar;
 rayZFar = (dPQK.z * 0.5 + pqk.z) / (dPQK.w * 0.5 + pqk.w);

 hitPixel = permute ? pqk.yx : pqk.xy;
 hitPixel *= texelSize;

 intersect = rayIntersectDepth(rayZNear, rayZFar, hitPixel);

 iterationCount += 1.0;

 dPQK *= 1.2;

 if (intersect) {
 break;
 }
 }

 Q0.xy += dQ.xy * iterationCount;
 Q0.z = pqk.z;
 hitPoint = Q0 / pqk.w;

 return intersect;
}

float calculateAlpha(
 float iterationCount, float reflectivity,
 vec2 hitPixel, vec3 hitPoint, float dist, vec3 rayDir
)
{
 float alpha = clamp(reflectivity, 0.0, 1.0);
 alpha *= 1.0 - (iterationCount / float(MAX_ITERATION));
 vec2 hitPixelNDC = hitPixel * 2.0 - 1.0;
 float maxDimension = min(1.0, max(abs(hitPixelNDC.x), abs(hitPixelNDC.y)));
 alpha *= 1.0 - max(0.0, maxDimension - screenEdgeFadeStart) / (1.0 - screenEdgeFadeStart);

 float _eyeFadeStart = eyeFadeStart;
 float _eyeFadeEnd = eyeFadeEnd;
 if (_eyeFadeStart > _eyeFadeEnd) {
 float tmp = _eyeFadeEnd;
 _eyeFadeEnd = _eyeFadeStart;
 _eyeFadeStart = tmp;
 }

 float eyeDir = clamp(rayDir.z, _eyeFadeStart, _eyeFadeEnd);
 alpha *= 1.0 - (eyeDir - _eyeFadeStart) / (_eyeFadeEnd - _eyeFadeStart);

 alpha *= 1.0 - clamp(dist / maxRayDistance, 0.0, 1.0);

 return alpha;
}

@import clay.util.rand

@import clay.util.rgbm

void main()
{
 vec4 normalAndGloss = texture2D(gBufferTexture1, v_Texcoord);

 if (dot(normalAndGloss.rgb, vec3(1.0)) == 0.0) {
 discard;
 }

 float g = normalAndGloss.a;
#if !defined(PHYSICALLY_CORRECT)
 if (g <= minGlossiness) {
 discard;
 }
#endif

 float reflectivity = (g - minGlossiness) / (1.0 - minGlossiness);

 vec3 N = normalize(normalAndGloss.rgb * 2.0 - 1.0);
 N = normalize((toViewSpace * vec4(N, 0.0)).xyz);

 vec4 projectedPos = vec4(v_Texcoord * 2.0 - 1.0, fetchDepth(gBufferTexture2, v_Texcoord), 1.0);
 vec4 pos = projectionInv * projectedPos;
 vec3 rayOrigin = pos.xyz / pos.w;
 vec3 V = -normalize(rayOrigin);

 float ndv = clamp(dot(N, V), 0.0, 1.0);
 float iterationCount;
 float jitter = rand(fract(v_Texcoord + jitterOffset));

#ifdef PHYSICALLY_CORRECT
 vec4 color = vec4(vec3(0.0), 1.0);
 vec4 albedoMetalness = texture2D(gBufferTexture3, v_Texcoord);
 vec3 albedo = albedoMetalness.rgb;
 float m = albedoMetalness.a;
 vec3 diffuseColor = albedo * (1.0 - m);
 vec3 spec = mix(vec3(0.04), albedo, m);

 float jitter2 = rand(fract(v_Texcoord)) * float(TOTAL_SAMPLES);

 for (int i = 0; i < SAMPLE_PER_FRAME; i++) {
 vec3 H = importanceSampleNormalGGX(float(i) + jitter2, 1.0 - g, N);
 vec3 rayDir = normalize(reflect(-V, H));
#else
 vec3 rayDir = normalize(reflect(-V, N));
#endif
 vec2 hitPixel;
 vec3 hitPoint;

 bool intersect = traceScreenSpaceRay(rayOrigin, rayDir, jitter, hitPixel, hitPoint, iterationCount);

 float dist = distance(rayOrigin, hitPoint);

 vec3 hitNormal = texture2D(gBufferTexture1, hitPixel).rgb * 2.0 - 1.0;
 hitNormal = normalize((toViewSpace * vec4(hitNormal, 0.0)).xyz);
#ifdef PHYSICALLY_CORRECT
 float ndl = clamp(dot(N, rayDir), 0.0, 1.0);
 float vdh = clamp(dot(V, H), 0.0, 1.0);
 float ndh = clamp(dot(N, H), 0.0, 1.0);
 vec3 litTexel = vec3(0.0);
 if (dot(hitNormal, rayDir) < 0.0 && intersect) {
 litTexel = texture2D(sourceTexture, hitPixel).rgb;
 litTexel *= pow(clamp(1.0 - dist / 200.0, 0.0, 1.0), 3.0);

 }
 else {
 #ifdef SPECULARCUBEMAP_ENABLED
 vec3 rayDirW = normalize(toWorldSpace * vec4(rayDir, 0.0)).rgb;
 litTexel = RGBMDecode(textureCubeLodEXT(specularCubemap, rayDirW, 0.0), 8.12).rgb * specularIntensity;
#endif
 }
 color.rgb += ndl * litTexel * (
 F_Schlick(ndl, spec) * G_Smith(g, ndv, ndl) * vdh / (ndh * ndv + 0.001)
 );
 }
 color.rgb /= float(SAMPLE_PER_FRAME);
#else
 #if !defined(SPECULARCUBEMAP_ENABLED)
 if (dot(hitNormal, rayDir) >= 0.0) {
 discard;
 }
 if (!intersect) {
 discard;
 }
#endif
 float alpha = clamp(calculateAlpha(iterationCount, reflectivity, hitPixel, hitPoint, dist, rayDir), 0.0, 1.0);
 vec4 color = texture2D(sourceTexture, hitPixel);
 color.rgb *= alpha;

#ifdef SPECULARCUBEMAP_ENABLED
 vec3 rayDirW = normalize(toWorldSpace * vec4(rayDir, 0.0)).rgb;
 alpha = alpha * (intersect ? 1.0 : 0.0);
 float bias = (1.0 -g) * 5.0;
 color.rgb += (1.0 - alpha)
 * RGBMDecode(textureCubeLodEXT(specularCubemap, rayDirW, bias), 8.12).rgb
 * specularIntensity;
#endif

#endif

 gl_FragColor = encodeHDR(color);
}
@end

@export ecgl.ssr.blur

uniform sampler2D texture;
uniform sampler2D gBufferTexture1;
uniform sampler2D gBufferTexture2;
uniform mat4 projection;
uniform float depthRange : 0.05;

varying vec2 v_Texcoord;

uniform vec2 textureSize;
uniform float blurSize : 1.0;

#ifdef BLEND
 #ifdef SSAOTEX_ENABLED
uniform sampler2D ssaoTex;
 #endif
uniform sampler2D sourceTexture;
#endif

float getLinearDepth(vec2 coord)
{
 float depth = texture2D(gBufferTexture2, coord).r * 2.0 - 1.0;
 return projection[3][2] / (depth * projection[2][3] - projection[2][2]);
}

@import clay.util.rgbm


void main()
{
 @import clay.compositor.kernel.gaussian_9

 vec4 centerNTexel = texture2D(gBufferTexture1, v_Texcoord);
 float g = centerNTexel.a;
 float maxBlurSize = clamp(1.0 - g, 0.0, 1.0) * blurSize;
#ifdef VERTICAL
 vec2 off = vec2(0.0, maxBlurSize / textureSize.y);
#else
 vec2 off = vec2(maxBlurSize / textureSize.x, 0.0);
#endif

 vec2 coord = v_Texcoord;

 vec4 sum = vec4(0.0);
 float weightAll = 0.0;

 vec3 cN = centerNTexel.rgb * 2.0 - 1.0;
 float cD = getLinearDepth(v_Texcoord);
 for (int i = 0; i < 9; i++) {
 vec2 coord = clamp((float(i) - 4.0) * off + v_Texcoord, vec2(0.0), vec2(1.0));
 float w = gaussianKernel[i]
 * clamp(dot(cN, texture2D(gBufferTexture1, coord).rgb * 2.0 - 1.0), 0.0, 1.0);
 float d = getLinearDepth(coord);
 w *= (1.0 - smoothstep(abs(cD - d) / depthRange, 0.0, 1.0));

 weightAll += w;
 sum += decodeHDR(texture2D(texture, coord)) * w;
 }

#ifdef BLEND
 float aoFactor = 1.0;
 #ifdef SSAOTEX_ENABLED
 aoFactor = texture2D(ssaoTex, v_Texcoord).r;
 #endif
 gl_FragColor = encodeHDR(
 sum / weightAll * aoFactor + decodeHDR(texture2D(sourceTexture, v_Texcoord))
 );
#else
 gl_FragColor = encodeHDR(sum / weightAll);
#endif
}

@end`;le.import(A0);function Oi(e){e=e||{},this._ssrPass=new Bt({fragment:le.source("ecgl.ssr.main"),clearColor:[0,0,0,0]}),this._blurPass1=new Bt({fragment:le.source("ecgl.ssr.blur"),clearColor:[0,0,0,0]}),this._blurPass2=new Bt({fragment:le.source("ecgl.ssr.blur"),clearColor:[0,0,0,0]}),this._blendPass=new Bt({fragment:le.source("clay.compositor.blend")}),this._blendPass.material.disableTexturesAll(),this._blendPass.material.enableTexture(["texture1","texture2"]),this._ssrPass.setUniform("gBufferTexture1",e.normalTexture),this._ssrPass.setUniform("gBufferTexture2",e.depthTexture),this._blurPass1.setUniform("gBufferTexture1",e.normalTexture),this._blurPass1.setUniform("gBufferTexture2",e.depthTexture),this._blurPass2.setUniform("gBufferTexture1",e.normalTexture),this._blurPass2.setUniform("gBufferTexture2",e.depthTexture),this._blurPass2.material.define("fragment","VERTICAL"),this._blurPass2.material.define("fragment","BLEND"),this._ssrTexture=new We({type:oe.HALF_FLOAT}),this._texture2=new We({type:oe.HALF_FLOAT}),this._texture3=new We({type:oe.HALF_FLOAT}),this._prevTexture=new We({type:oe.HALF_FLOAT}),this._currentTexture=new We({type:oe.HALF_FLOAT}),this._frameBuffer=new It({depthBuffer:!1}),this._normalDistribution=null,this._totalSamples=256,this._samplePerFrame=4,this._ssrPass.material.define("fragment","SAMPLE_PER_FRAME",this._samplePerFrame),this._ssrPass.material.define("fragment","TOTAL_SAMPLES",this._totalSamples),this._downScale=1}Oi.prototype.setAmbientCubemap=function(e,t){this._ssrPass.material.set("specularCubemap",e),this._ssrPass.material.set("specularIntensity",t);var n=e&&t;this._ssrPass.material[n?"enableTexture":"disableTexture"]("specularCubemap")};Oi.prototype.update=function(e,t,n,i){var r=e.getWidth(),a=e.getHeight(),s=this._ssrTexture,o=this._texture2,l=this._texture3;s.width=this._prevTexture.width=this._currentTexture.width=r/this._downScale,s.height=this._prevTexture.height=this._currentTexture.height=a/this._downScale,o.width=l.width=r,o.height=l.height=a;var c=this._frameBuffer,h=this._ssrPass,u=this._blurPass1,f=this._blurPass2,d=this._blendPass,p=new ue,g=new ue;ue.transpose(p,t.worldTransform),ue.transpose(g,t.viewMatrix),h.setUniform("sourceTexture",n),h.setUniform("projection",t.projectionMatrix.array),h.setUniform("projectionInv",t.invProjectionMatrix.array),h.setUniform("toViewSpace",p.array),h.setUniform("toWorldSpace",g.array),h.setUniform("nearZ",t.near);var v=i/this._totalSamples*this._samplePerFrame;if(h.setUniform("jitterOffset",v),h.setUniform("sampleOffset",i*this._samplePerFrame),u.setUniform("textureSize",[s.width,s.height]),f.setUniform("textureSize",[r,a]),f.setUniform("sourceTexture",n),u.setUniform("projection",t.projectionMatrix.array),f.setUniform("projection",t.projectionMatrix.array),c.attach(s),c.bind(e),h.render(e),this._physicallyCorrect&&(c.attach(this._currentTexture),d.setUniform("texture1",this._prevTexture),d.setUniform("texture2",s),d.material.set({weight1:i>=1?.95:0,weight2:i>=1?.05:1}),d.render(e)),c.attach(o),u.setUniform("texture",this._physicallyCorrect?this._currentTexture:s),u.render(e),c.attach(l),f.setUniform("texture",o),f.render(e),c.unbind(e),this._physicallyCorrect){var m=this._prevTexture;this._prevTexture=this._currentTexture,this._currentTexture=m}};Oi.prototype.getTargetTexture=function(){return this._texture3};Oi.prototype.setParameter=function(e,t){e==="maxIteration"?this._ssrPass.material.define("fragment","MAX_ITERATION",t):this._ssrPass.setUniform(e,t)};Oi.prototype.setPhysicallyCorrect=function(e){e?(this._normalDistribution||(this._normalDistribution=ui.generateNormalDistribution(64,this._totalSamples)),this._ssrPass.material.define("fragment","PHYSICALLY_CORRECT"),this._ssrPass.material.set("normalDistribution",this._normalDistribution),this._ssrPass.material.set("normalDistributionSize",[64,this._totalSamples])):this._ssrPass.material.undefine("fragment","PHYSICALLY_CORRECT"),this._physicallyCorrect=e};Oi.prototype.setSSAOTexture=function(e){var t=this._blurPass2;e?(t.material.enableTexture("ssaoTex"),t.material.set("ssaoTex",e)):t.material.disableTexture("ssaoTex")};Oi.prototype.isFinished=function(e){return this._physicallyCorrect?e>this._totalSamples/this._samplePerFrame:!0};Oi.prototype.dispose=function(e){this._ssrTexture.dispose(e),this._texture2.dispose(e),this._texture3.dispose(e),this._prevTexture.dispose(e),this._currentTexture.dispose(e),this._frameBuffer.dispose(e)};const Gu=[0,0,-.321585265978,-.154972575841,.458126042375,.188473391593,.842080129861,.527766490688,.147304551086,-.659453822776,-.331943915203,-.940619700594,.0479226680259,.54812163202,.701581552186,-.709825561388,-.295436780218,.940589268233,-.901489676764,.237713156085,.973570876096,-.109899459384,-.866792314779,-.451805525005,.330975007087,.800048655954,-.344275183665,.381779221166,-.386139432542,-.437418421534,-.576478634965,-.0148463392551,.385798197415,-.262426961053,-.666302061145,.682427250835,-.628010632582,-.732836215494,.10163141741,-.987658134403,.711995289051,-.320024291314,.0296005138058,.950296523438,.0130612307608,-.351024443122,-.879596633704,-.10478487883,.435712737232,.504254490347,.779203817497,.206477676721,.388264289969,-.896736162545,-.153106280781,-.629203242522,-.245517550697,.657969239148,.126830499058,.26862328493,-.634888119007,-.302301223431,.617074219636,.779817204925],b0=`@export ecgl.normal.vertex

@import ecgl.common.transformUniforms

@import ecgl.common.uv.header

@import ecgl.common.attributes

varying vec3 v_Normal;
varying vec3 v_WorldPosition;

@import ecgl.common.normalMap.vertexHeader

@import ecgl.common.vertexAnimation.header

void main()
{

 @import ecgl.common.vertexAnimation.main

 @import ecgl.common.uv.main

 v_Normal = normalize((worldInverseTranspose * vec4(normal, 0.0)).xyz);
 v_WorldPosition = (world * vec4(pos, 1.0)).xyz;

 @import ecgl.common.normalMap.vertexMain

 gl_Position = worldViewProjection * vec4(pos, 1.0);

}


@end


@export ecgl.normal.fragment

#define ROUGHNESS_CHANEL 0

uniform bool useBumpMap;
uniform bool useRoughnessMap;
uniform bool doubleSide;
uniform float roughness;

@import ecgl.common.uv.fragmentHeader

varying vec3 v_Normal;
varying vec3 v_WorldPosition;

uniform mat4 viewInverse : VIEWINVERSE;

@import ecgl.common.normalMap.fragmentHeader
@import ecgl.common.bumpMap.header

uniform sampler2D roughnessMap;

void main()
{
 vec3 N = v_Normal;
 
 bool flipNormal = false;
 if (doubleSide) {
 vec3 eyePos = viewInverse[3].xyz;
 vec3 V = normalize(eyePos - v_WorldPosition);

 if (dot(N, V) < 0.0) {
 flipNormal = true;
 }
 }

 @import ecgl.common.normalMap.fragmentMain

 if (useBumpMap) {
 N = bumpNormal(v_WorldPosition, v_Normal, N);
 }

 float g = 1.0 - roughness;

 if (useRoughnessMap) {
 float g2 = 1.0 - texture2D(roughnessMap, v_DetailTexcoord)[ROUGHNESS_CHANEL];
 g = clamp(g2 + (g - 0.5) * 2.0, 0.0, 1.0);
 }

 if (flipNormal) {
 N = -N;
 }

 gl_FragColor.rgb = (N.xyz + 1.0) * 0.5;
 gl_FragColor.a = g;
}
@end`;le.import(b0);function Ql(e,t,n,i,r){var a=e.gl;t.setUniform(a,"1i",n,r),a.activeTexture(a.TEXTURE0+r),i.isRenderable()?i.bind(e):i.unbind(e)}function C0(e,t,n,i,r){var a,s,o,l,c=e.gl;return function(h,u,f){if(!(l&&l.material===h.material)){var d=h.material,p=h.__program,g=d.get("roughness");g==null&&(g=1);var v=d.get("normalMap")||t,m=d.get("roughnessMap"),y=d.get("bumpMap"),_=d.get("uvRepeat"),x=d.get("uvOffset"),A=d.get("detailUvRepeat"),E=d.get("detailUvOffset"),w=!!y&&d.isTextureEnabled("bumpMap"),b=!!m&&d.isTextureEnabled("roughnessMap"),M=d.isDefined("fragment","DOUBLE_SIDED");y=y||n,m=m||i,f!==u?(u.set("normalMap",v),u.set("bumpMap",y),u.set("roughnessMap",m),u.set("useBumpMap",w),u.set("useRoughnessMap",b),u.set("doubleSide",M),_!=null&&u.set("uvRepeat",_),x!=null&&u.set("uvOffset",x),A!=null&&u.set("detailUvRepeat",A),E!=null&&u.set("detailUvOffset",E),u.set("roughness",g)):(p.setUniform(c,"1f","roughness",g),a!==v&&Ql(e,p,"normalMap",v,0),s!==y&&y&&Ql(e,p,"bumpMap",y,1),o!==m&&m&&Ql(e,p,"roughnessMap",m,2),_!=null&&p.setUniform(c,"2f","uvRepeat",_),x!=null&&p.setUniform(c,"2f","uvOffset",x),A!=null&&p.setUniform(c,"2f","detailUvRepeat",A),E!=null&&p.setUniform(c,"2f","detailUvOffset",E),p.setUniform(c,"1i","useBumpMap",+w),p.setUniform(c,"1i","useRoughnessMap",+b),p.setUniform(c,"1i","doubleSide",+M)),a=v,s=y,o=m,l=h}}}function Ja(e){this._depthTex=new We({format:oe.DEPTH_COMPONENT,type:oe.UNSIGNED_INT}),this._normalTex=new We({type:oe.HALF_FLOAT}),this._framebuffer=new It,this._framebuffer.attach(this._normalTex),this._framebuffer.attach(this._depthTex,It.DEPTH_ATTACHMENT),this._normalMaterial=new Wn({shader:new le(le.source("ecgl.normal.vertex"),le.source("ecgl.normal.fragment"))}),this._normalMaterial.enableTexture(["normalMap","bumpMap","roughnessMap"]),this._defaultNormalMap=Vr.createBlank("#000"),this._defaultBumpMap=Vr.createBlank("#000"),this._defaultRoughessMap=Vr.createBlank("#000"),this._debugPass=new Bt({fragment:le.source("clay.compositor.output")}),this._debugPass.setUniform("texture",this._normalTex),this._debugPass.material.undefine("fragment","OUTPUT_ALPHA")}Ja.prototype.getDepthTexture=function(){return this._depthTex};Ja.prototype.getNormalTexture=function(){return this._normalTex};Ja.prototype.update=function(e,t,n){var i=e.getWidth(),r=e.getHeight(),a=this._depthTex,s=this._normalTex,o=this._normalMaterial;a.width=i,a.height=r,s.width=i,s.height=r;var l=t.getRenderList(n).opaque;this._framebuffer.bind(e),e.gl.clearColor(0,0,0,0),e.gl.clear(e.gl.COLOR_BUFFER_BIT|e.gl.DEPTH_BUFFER_BIT),e.gl.disable(e.gl.BLEND),e.renderPass(l,n,{getMaterial:function(){return o},ifRender:function(c){return c.renderNormal},beforeRender:C0(e,this._defaultNormalMap,this._defaultBumpMap,this._defaultRoughessMap,this._normalMaterial),sort:e.opaqueSortCompare}),this._framebuffer.unbind(e)};Ja.prototype.renderDebug=function(e){this._debugPass.render(e)};Ja.prototype.dispose=function(e){this._depthTex.dispose(e),this._normalTex.dispose(e)};function ks(e){e=e||{},this._edgePass=new Bt({fragment:le.source("ecgl.edge")}),this._edgePass.setUniform("normalTexture",e.normalTexture),this._edgePass.setUniform("depthTexture",e.depthTexture),this._targetTexture=new We({type:oe.HALF_FLOAT}),this._frameBuffer=new It,this._frameBuffer.attach(this._targetTexture)}ks.prototype.update=function(e,t,n,i){var r=e.getWidth(),a=e.getHeight(),s=this._targetTexture;s.width=r,s.height=a;var o=this._frameBuffer;o.bind(e),this._edgePass.setUniform("projectionInv",t.invProjectionMatrix.array),this._edgePass.setUniform("textureSize",[r,a]),this._edgePass.setUniform("texture",n),this._edgePass.render(e),o.unbind(e)};ks.prototype.getTargetTexture=function(){return this._targetTexture};ks.prototype.setParameter=function(e,t){this._edgePass.setUniform(e,t)};ks.prototype.dispose=function(e){this._targetTexture.dispose(e),this._frameBuffer.dispose(e)};const R0={type:"compositor",nodes:[{name:"source",type:"texture",outputs:{color:{}}},{name:"source_half",shader:"#source(clay.compositor.downsample)",inputs:{texture:"source"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"}},{name:"bright",shader:"#source(clay.compositor.bright)",inputs:{texture:"source_half"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{threshold:2,scale:4,textureSize:"expr([width * 1.0 / 2, height / 2])"}},{name:"bright_downsample_4",shader:"#source(clay.compositor.downsample)",inputs:{texture:"bright"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 2, height / 2] )"}},{name:"bright_downsample_8",shader:"#source(clay.compositor.downsample)",inputs:{texture:"bright_downsample_4"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 4, height / 4] )"}},{name:"bright_downsample_16",shader:"#source(clay.compositor.downsample)",inputs:{texture:"bright_downsample_8"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 16)",height:"expr(height * 1.0 / 16)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 8, height / 8] )"}},{name:"bright_downsample_32",shader:"#source(clay.compositor.downsample)",inputs:{texture:"bright_downsample_16"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 32)",height:"expr(height * 1.0 / 32)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0 / 16, height / 16] )"}},{name:"bright_upsample_16_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_32"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 16)",height:"expr(height * 1.0 / 16)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 32, height / 32] )"}},{name:"bright_upsample_16_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_16_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 16)",height:"expr(height * 1.0 / 16)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 16, height * 1.0 / 16] )"}},{name:"bright_upsample_8_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_16"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 16, height * 1.0 / 16] )"}},{name:"bright_upsample_8_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_8_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 8, height * 1.0 / 8] )"}},{name:"bright_upsample_8_blend",shader:"#source(clay.compositor.blend)",inputs:{texture1:"bright_upsample_8_blur_v",texture2:"bright_upsample_16_blur_v"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 8)",height:"expr(height * 1.0 / 8)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"bright_upsample_4_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_8"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 8, height * 1.0 / 8] )"}},{name:"bright_upsample_4_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_4_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 4, height * 1.0 / 4] )"}},{name:"bright_upsample_4_blend",shader:"#source(clay.compositor.blend)",inputs:{texture1:"bright_upsample_4_blur_v",texture2:"bright_upsample_8_blend"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 4)",height:"expr(height * 1.0 / 4)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"bright_upsample_2_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_downsample_4"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 4, height * 1.0 / 4] )"}},{name:"bright_upsample_2_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_2_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0 / 2, height * 1.0 / 2] )"}},{name:"bright_upsample_2_blend",shader:"#source(clay.compositor.blend)",inputs:{texture1:"bright_upsample_2_blur_v",texture2:"bright_upsample_4_blend"},outputs:{color:{parameters:{width:"expr(width * 1.0 / 2)",height:"expr(height * 1.0 / 2)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"bright_upsample_full_blur_h",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:0,textureSize:"expr( [width * 1.0 / 2, height * 1.0 / 2] )"}},{name:"bright_upsample_full_blur_v",shader:"#source(clay.compositor.gaussian_blur)",inputs:{texture:"bright_upsample_full_blur_h"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{blurSize:1,blurDir:1,textureSize:"expr( [width * 1.0, height * 1.0] )"}},{name:"bloom_composite",shader:"#source(clay.compositor.blend)",inputs:{texture1:"bright_upsample_full_blur_v",texture2:"bright_upsample_2_blend"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{weight1:.3,weight2:.7}},{name:"coc",shader:"#source(ecgl.dof.coc)",outputs:{color:{parameters:{minFilter:"NEAREST",magFilter:"NEAREST",width:"expr(width * 1.0)",height:"expr(height * 1.0)"}}},parameters:{focalDist:50,focalRange:30}},{name:"dof_far_blur",shader:"#source(ecgl.dof.diskBlur)",inputs:{texture:"source",coc:"coc"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"}},{name:"dof_near_blur",shader:"#source(ecgl.dof.diskBlur)",inputs:{texture:"source",coc:"coc"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"},defines:{BLUR_NEARFIELD:null}},{name:"dof_coc_blur",shader:"#source(ecgl.dof.diskBlur)",inputs:{texture:"coc"},outputs:{color:{parameters:{minFilter:"NEAREST",magFilter:"NEAREST",width:"expr(width * 1.0)",height:"expr(height * 1.0)"}}},parameters:{textureSize:"expr( [width * 1.0, height * 1.0] )"},defines:{BLUR_COC:null}},{name:"dof_composite",shader:"#source(ecgl.dof.composite)",inputs:{original:"source",blurred:"dof_far_blur",nearfield:"dof_near_blur",coc:"coc",nearcoc:"dof_coc_blur"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)",type:"HALF_FLOAT"}}}},{name:"composite",shader:"#source(clay.compositor.hdr.composite)",inputs:{texture:"source",bloom:"bloom_composite"},outputs:{color:{parameters:{width:"expr(width * 1.0)",height:"expr(height * 1.0)"}}},defines:{}},{name:"FXAA",shader:"#source(clay.compositor.fxaa)",inputs:{texture:"composite"}}]},L0=`@export ecgl.dof.coc

uniform sampler2D depth;

uniform float zNear: 0.1;
uniform float zFar: 2000;

uniform float focalDistance: 3;
uniform float focalRange: 1;
uniform float focalLength: 30;
uniform float fstop: 2.8;

varying vec2 v_Texcoord;

@import clay.util.encode_float

void main()
{
 float z = texture2D(depth, v_Texcoord).r * 2.0 - 1.0;

 float dist = 2.0 * zNear * zFar / (zFar + zNear - z * (zFar - zNear));

 float aperture = focalLength / fstop;

 float coc;

 float uppper = focalDistance + focalRange;
 float lower = focalDistance - focalRange;
 if (dist <= uppper && dist >= lower) {
 coc = 0.5;
 }
 else {
 float focalAdjusted = dist > uppper ? uppper : lower;

 coc = abs(aperture * (focalLength * (dist - focalAdjusted)) / (dist * (focalAdjusted - focalLength)));
 coc = clamp(coc, 0.0, 2.0) / 2.00001;

 if (dist < lower) {
 coc = -coc;
 }
 coc = coc * 0.5 + 0.5;
 }

 gl_FragColor = encodeFloat(coc);
}
@end


@export ecgl.dof.composite

#define DEBUG 0

uniform sampler2D original;
uniform sampler2D blurred;
uniform sampler2D nearfield;
uniform sampler2D coc;
uniform sampler2D nearcoc;
varying vec2 v_Texcoord;

@import clay.util.rgbm
@import clay.util.float

void main()
{
 vec4 blurredColor = texture2D(blurred, v_Texcoord);
 vec4 originalColor = texture2D(original, v_Texcoord);

 float fCoc = decodeFloat(texture2D(coc, v_Texcoord));

 fCoc = abs(fCoc * 2.0 - 1.0);

 float weight = smoothstep(0.0, 1.0, fCoc);
 
#ifdef NEARFIELD_ENABLED
 vec4 nearfieldColor = texture2D(nearfield, v_Texcoord);
 float fNearCoc = decodeFloat(texture2D(nearcoc, v_Texcoord));
 fNearCoc = abs(fNearCoc * 2.0 - 1.0);

 gl_FragColor = encodeHDR(
 mix(
 nearfieldColor, mix(originalColor, blurredColor, weight),
 pow(1.0 - fNearCoc, 4.0)
 )
 );
#else
 gl_FragColor = encodeHDR(mix(originalColor, blurredColor, weight));
#endif

}

@end



@export ecgl.dof.diskBlur

#define POISSON_KERNEL_SIZE 16;

uniform sampler2D texture;
uniform sampler2D coc;
varying vec2 v_Texcoord;

uniform float blurRadius : 10.0;
uniform vec2 textureSize : [512.0, 512.0];

uniform vec2 poissonKernel[POISSON_KERNEL_SIZE];

uniform float percent;

float nrand(const in vec2 n) {
 return fract(sin(dot(n.xy ,vec2(12.9898,78.233))) * 43758.5453);
}

@import clay.util.rgbm
@import clay.util.float


void main()
{
 vec2 offset = blurRadius / textureSize;

 float rnd = 6.28318 * nrand(v_Texcoord + 0.07 * percent );
 float cosa = cos(rnd);
 float sina = sin(rnd);
 vec4 basis = vec4(cosa, -sina, sina, cosa);

#if !defined(BLUR_NEARFIELD) && !defined(BLUR_COC)
 offset *= abs(decodeFloat(texture2D(coc, v_Texcoord)) * 2.0 - 1.0);
#endif

#ifdef BLUR_COC
 float cocSum = 0.0;
#else
 vec4 color = vec4(0.0);
#endif


 float weightSum = 0.0;

 for (int i = 0; i < POISSON_KERNEL_SIZE; i++) {
 vec2 ofs = poissonKernel[i];

 ofs = vec2(dot(ofs, basis.xy), dot(ofs, basis.zw));

 vec2 uv = v_Texcoord + ofs * offset;
 vec4 texel = texture2D(texture, uv);

 float w = 1.0;
#ifdef BLUR_COC
 float fCoc = decodeFloat(texel) * 2.0 - 1.0;
 cocSum += clamp(fCoc, -1.0, 0.0) * w;
#else
 texel = texel;
 #if !defined(BLUR_NEARFIELD)
 float fCoc = decodeFloat(texture2D(coc, uv)) * 2.0 - 1.0;
 w *= abs(fCoc);
 #endif
 texel.rgb *= texel.a;
 color += texel * w;
#endif

 weightSum += w;
 }

#ifdef BLUR_COC
 gl_FragColor = encodeFloat(clamp(cocSum / weightSum, -1.0, 0.0) * 0.5 + 0.5);
#else
 color /= weightSum;
 color.rgb /= (color.a + 0.0001);
 gl_FragColor = color;
#endif
}

@end`,P0=`@export ecgl.edge

uniform sampler2D texture;

uniform sampler2D normalTexture;
uniform sampler2D depthTexture;

uniform mat4 projectionInv;

uniform vec2 textureSize;

uniform vec4 edgeColor: [0,0,0,0.8];

varying vec2 v_Texcoord;

vec3 packColor(vec2 coord) {
 float z = texture2D(depthTexture, coord).r * 2.0 - 1.0;
 vec4 p = vec4(v_Texcoord * 2.0 - 1.0, z, 1.0);
 vec4 p4 = projectionInv * p;

 return vec3(
 texture2D(normalTexture, coord).rg,
 -p4.z / p4.w / 5.0
 );
}

void main() {
 vec2 cc = v_Texcoord;
 vec3 center = packColor(cc);

 float size = clamp(1.0 - (center.z - 10.0) / 100.0, 0.0, 1.0) * 0.5;
 float dx = size / textureSize.x;
 float dy = size / textureSize.y;

 vec2 coord;
 vec3 topLeft = packColor(cc+vec2(-dx, -dy));
 vec3 top = packColor(cc+vec2(0.0, -dy));
 vec3 topRight = packColor(cc+vec2(dx, -dy));
 vec3 left = packColor(cc+vec2(-dx, 0.0));
 vec3 right = packColor(cc+vec2(dx, 0.0));
 vec3 bottomLeft = packColor(cc+vec2(-dx, dy));
 vec3 bottom = packColor(cc+vec2(0.0, dy));
 vec3 bottomRight = packColor(cc+vec2(dx, dy));

 vec3 v = -topLeft-2.0*top-topRight+bottomLeft+2.0*bottom+bottomRight;
 vec3 h = -bottomLeft-2.0*left-topLeft+bottomRight+2.0*right+topRight;

 float edge = sqrt(dot(h, h) + dot(v, v));

 edge = smoothstep(0.8, 1.0, edge);

 gl_FragColor = mix(texture2D(texture, v_Texcoord), vec4(edgeColor.rgb, 1.0), edgeColor.a * edge);
}
@end`;le.import(Ep);le.import(Mp);le.import(wp);le.import(Ap);le.import(bp);le.import(Cp);le.import(Rp);le.import(Lp);le.import(Pp);le.import(L0);le.import(P0);function Ip(e,t){return{color:{parameters:{width:e,height:t}}}}var Sh=["composite","FXAA"];function tt(){this._width,this._height,this._dpr,this._sourceTexture=new We({type:oe.HALF_FLOAT}),this._depthTexture=new We({format:oe.DEPTH_COMPONENT,type:oe.UNSIGNED_INT}),this._framebuffer=new It,this._framebuffer.attach(this._sourceTexture),this._framebuffer.attach(this._depthTexture,It.DEPTH_ATTACHMENT),this._normalPass=new Ja,this._compositor=g0(R0);var e=this._compositor.getNodeByName("source");e.texture=this._sourceTexture;var t=this._compositor.getNodeByName("coc");this._sourceNode=e,this._cocNode=t,this._compositeNode=this._compositor.getNodeByName("composite"),this._fxaaNode=this._compositor.getNodeByName("FXAA"),this._dofBlurNodes=["dof_far_blur","dof_near_blur","dof_coc_blur"].map(function(i){return this._compositor.getNodeByName(i)},this),this._dofBlurKernel=0,this._dofBlurKernelSize=new Float32Array(0),this._finalNodesChain=Sh.map(function(i){return this._compositor.getNodeByName(i)},this);var n={normalTexture:this._normalPass.getNormalTexture(),depthTexture:this._normalPass.getDepthTexture()};this._ssaoPass=new Ii(n),this._ssrPass=new Oi(n),this._edgePass=new ks(n)}tt.prototype.resize=function(i,r,n){n=n||1;var i=i*n,r=r*n,a=this._sourceTexture,s=this._depthTexture;a.width=i,a.height=r,s.width=i,s.height=r;var o={getWidth:function(){return i},getHeight:function(){return r},getDevicePixelRatio:function(){return n}};function l(c,h){if(typeof c[h]=="function"){var u=c[h].__original||c[h];c[h]=function(f){return u.call(this,o)},c[h].__original=u}}this._compositor.nodes.forEach(function(c){for(var h in c.outputs){var u=c.outputs[h].parameters;u&&(l(u,"width"),l(u,"height"))}for(var f in c.parameters)l(c.parameters,f)}),this._width=i,this._height=r,this._dpr=n};tt.prototype.getWidth=function(){return this._width};tt.prototype.getHeight=function(){return this._height};tt.prototype._ifRenderNormalPass=function(){return this._enableSSAO||this._enableEdge||this._enableSSR};tt.prototype._getPrevNode=function(e){for(var t=Sh.indexOf(e.name)-1,n=this._finalNodesChain[t];n&&!this._compositor.getNodeByName(n.name);)t-=1,n=this._finalNodesChain[t];return n};tt.prototype._getNextNode=function(e){for(var t=Sh.indexOf(e.name)+1,n=this._finalNodesChain[t];n&&!this._compositor.getNodeByName(n.name);)t+=1,n=this._finalNodesChain[t];return n};tt.prototype._addChainNode=function(e){var t=this._getPrevNode(e),n=this._getNextNode(e);t&&(e.inputs.texture=t.name,n?(e.outputs=Ip(this.getWidth.bind(this),this.getHeight.bind(this)),n.inputs.texture=e.name):e.outputs=null,this._compositor.addNode(e))};tt.prototype._removeChainNode=function(e){var t=this._getPrevNode(e),n=this._getNextNode(e);t&&(n?(t.outputs=Ip(this.getWidth.bind(this),this.getHeight.bind(this)),n.inputs.texture=t.name):t.outputs=null,this._compositor.removeNode(e))};tt.prototype.updateNormal=function(e,t,n,i){this._ifRenderNormalPass()&&this._normalPass.update(e,t,n)};tt.prototype.updateSSAO=function(e,t,n,i){this._ssaoPass.update(e,n,i)};tt.prototype.enableSSAO=function(){this._enableSSAO=!0};tt.prototype.disableSSAO=function(){this._enableSSAO=!1};tt.prototype.enableSSR=function(){this._enableSSR=!0};tt.prototype.disableSSR=function(){this._enableSSR=!1};tt.prototype.getSSAOTexture=function(){return this._ssaoPass.getTargetTexture()};tt.prototype.getSourceFrameBuffer=function(){return this._framebuffer};tt.prototype.getSourceTexture=function(){return this._sourceTexture};tt.prototype.disableFXAA=function(){this._removeChainNode(this._fxaaNode)};tt.prototype.enableFXAA=function(){this._addChainNode(this._fxaaNode)};tt.prototype.enableBloom=function(){this._compositeNode.inputs.bloom="bloom_composite",this._compositor.dirty()};tt.prototype.disableBloom=function(){this._compositeNode.inputs.bloom=null,this._compositor.dirty()};tt.prototype.enableDOF=function(){this._compositeNode.inputs.texture="dof_composite",this._compositor.dirty()};tt.prototype.disableDOF=function(){this._compositeNode.inputs.texture="source",this._compositor.dirty()};tt.prototype.enableColorCorrection=function(){this._compositeNode.define("COLOR_CORRECTION"),this._enableColorCorrection=!0};tt.prototype.disableColorCorrection=function(){this._compositeNode.undefine("COLOR_CORRECTION"),this._enableColorCorrection=!1};tt.prototype.enableEdge=function(){this._enableEdge=!0};tt.prototype.disableEdge=function(){this._enableEdge=!1};tt.prototype.setBloomIntensity=function(e){this._compositeNode.setParameter("bloomIntensity",e)};tt.prototype.setSSAOParameter=function(e,t){switch(e){case"quality":var n={low:6,medium:12,high:32,ultra:62}[t]||12;this._ssaoPass.setParameter("kernelSize",n);break;case"radius":this._ssaoPass.setParameter(e,t),this._ssaoPass.setParameter("bias",t/200);break;case"intensity":this._ssaoPass.setParameter(e,t);break}};tt.prototype.setDOFParameter=function(e,t){switch(e){case"focalDistance":case"focalRange":case"fstop":this._cocNode.setParameter(e,t);break;case"blurRadius":for(var n=0;n<this._dofBlurNodes.length;n++)this._dofBlurNodes[n].setParameter("blurRadius",t);break;case"quality":var i={low:4,medium:8,high:16,ultra:32}[t]||8;this._dofBlurKernelSize=i;for(var n=0;n<this._dofBlurNodes.length;n++)this._dofBlurNodes[n].pass.material.define("POISSON_KERNEL_SIZE",i);this._dofBlurKernel=new Float32Array(i*2);break}};tt.prototype.setSSRParameter=function(e,t){if(t!=null)switch(e){case"quality":var n={low:10,medium:15,high:30,ultra:80}[t]||20,i={low:32,medium:16,high:8,ultra:4}[t]||16;this._ssrPass.setParameter("maxIteration",n),this._ssrPass.setParameter("pixelStride",i);break;case"maxRoughness":this._ssrPass.setParameter("minGlossiness",Math.max(Math.min(1-t,1),0));break;case"physical":this.setPhysicallyCorrectSSR(t);break;default:console.warn("Unkown SSR parameter "+e)}};tt.prototype.setPhysicallyCorrectSSR=function(e){this._ssrPass.setPhysicallyCorrect(e)};tt.prototype.setEdgeColor=function(e){var t=R.parseColor(e);this._edgePass.setParameter("edgeColor",t)};tt.prototype.setExposure=function(e){this._compositeNode.setParameter("exposure",Math.pow(2,e))};tt.prototype.setColorLookupTexture=function(e,t){this._compositeNode.pass.material.setTextureImage("lut",this._enableColorCorrection?e:"none",t,{minFilter:R.Texture.NEAREST,magFilter:R.Texture.NEAREST,flipY:!1})};tt.prototype.setColorCorrection=function(e,t){this._compositeNode.setParameter(e,t)};tt.prototype.isSSREnabled=function(){return this._enableSSR};tt.prototype.composite=function(e,t,n,i,r){var a=this._sourceTexture,s=a;this._enableEdge&&(this._edgePass.update(e,n,a,r),a=s=this._edgePass.getTargetTexture()),this._enableSSR&&(this._ssrPass.update(e,n,a,r),s=this._ssrPass.getTargetTexture(),this._ssrPass.setSSAOTexture(this._enableSSAO?this._ssaoPass.getTargetTexture():null)),this._sourceNode.texture=s,this._cocNode.setParameter("depth",this._depthTexture);for(var o=this._dofBlurKernel,l=this._dofBlurKernelSize,c=Math.floor(Gu.length/2/l),h=r%c,u=0;u<l*2;u++)o[u]=Gu[u+h*l*2];for(var u=0;u<this._dofBlurNodes.length;u++)this._dofBlurNodes[u].setParameter("percent",r/30),this._dofBlurNodes[u].setParameter("poissonKernel",o);this._cocNode.setParameter("zNear",n.near),this._cocNode.setParameter("zFar",n.far),this._compositor.render(e,i)};tt.prototype.dispose=function(e){this._sourceTexture.dispose(e),this._depthTexture.dispose(e),this._framebuffer.dispose(e),this._compositor.dispose(e),this._normalPass.dispose(e),this._ssaoPass.dispose(e)};function $c(e){for(var t=[],n=0;n<30;n++)t.push([Ga(n,2),Ga(n,3)]);this._haltonSequence=t,this._frame=0,this._sourceTex=new We,this._sourceFb=new It,this._sourceFb.attach(this._sourceTex),this._prevFrameTex=new We,this._outputTex=new We;var i=this._blendPass=new Bt({fragment:le.source("clay.compositor.blend")});i.material.disableTexturesAll(),i.material.enableTexture(["texture1","texture2"]),this._blendFb=new It({depthBuffer:!1}),this._outputPass=new Bt({fragment:le.source("clay.compositor.output"),blendWithPrevious:!0}),this._outputPass.material.define("fragment","OUTPUT_ALPHA"),this._outputPass.material.blend=function(r){r.blendEquationSeparate(r.FUNC_ADD,r.FUNC_ADD),r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA)}}$c.prototype={constructor:$c,jitterProjection:function(e,t){var n=e.viewport,i=n.devicePixelRatio||e.getDevicePixelRatio(),r=n.width*i,a=n.height*i,s=this._haltonSequence[this._frame%this._haltonSequence.length],o=new ue;o.array[12]=(s[0]*2-1)/r,o.array[13]=(s[1]*2-1)/a,ue.mul(t.projectionMatrix,o,t.projectionMatrix),ue.invert(t.invProjectionMatrix,t.projectionMatrix)},resetFrame:function(){this._frame=0},getFrame:function(){return this._frame},getSourceFrameBuffer:function(){return this._sourceFb},getOutputTexture:function(){return this._outputTex},resize:function(e,t){this._prevFrameTex.width=e,this._prevFrameTex.height=t,this._outputTex.width=e,this._outputTex.height=t,this._sourceTex.width=e,this._sourceTex.height=t,this._prevFrameTex.dirty(),this._outputTex.dirty(),this._sourceTex.dirty()},isFinished:function(){return this._frame>=this._haltonSequence.length},render:function(e,t,n){var i=this._blendPass;this._frame===0?(i.setUniform("weight1",0),i.setUniform("weight2",1)):(i.setUniform("weight1",.9),i.setUniform("weight2",.1)),i.setUniform("texture1",this._prevFrameTex),i.setUniform("texture2",t||this._sourceTex),this._blendFb.attach(this._outputTex),this._blendFb.bind(e),i.render(e),this._blendFb.unbind(e),n||(this._outputPass.setUniform("texture",this._outputTex),this._outputPass.render(e));var r=this._prevFrameTex;this._prevFrameTex=this._outputTex,this._outputTex=r,this._frame++},dispose:function(e){this._sourceFb.dispose(e),this._blendFb.dispose(e),this._prevFrameTex.dispose(e),this._outputTex.dispose(e),this._sourceTex.dispose(e),this._outputPass.dispose(e),this._blendPass.dispose(e)}};function mt(e){e=e||"perspective",this.layer=null,this.scene=new dr,this.rootNode=this.scene,this.viewport={x:0,y:0,width:0,height:0},this.setProjection(e),this._compositor=new tt,this._temporalSS=new $c,this._shadowMapPass=new ii;for(var t=[],n=0,i=0;i<30;i++){for(var r=[],a=0;a<6;a++)r.push(Ga(n,2)*4-2),r.push(Ga(n,3)*4-2),n++;t.push(r)}this._pcfKernels=t,this.scene.on("beforerender",function(s,o,l){this.needsTemporalSS()&&this._temporalSS.jitterProjection(s,l)},this)}mt.prototype.setProjection=function(e){var t=this.camera;t&&t.update(),e==="perspective"?this.camera instanceof qt||(this.camera=new qt,t&&this.camera.setLocalTransform(t.localTransform)):this.camera instanceof za||(this.camera=new za,t&&this.camera.setLocalTransform(t.localTransform)),this.camera.near=.1,this.camera.far=2e3};mt.prototype.setViewport=function(e,t,n,i,r){this.camera instanceof qt&&(this.camera.aspect=n/i),r=r||1,this.viewport.x=e,this.viewport.y=t,this.viewport.width=n,this.viewport.height=i,this.viewport.devicePixelRatio=r,this._compositor.resize(n*r,i*r),this._temporalSS.resize(n*r,i*r)};mt.prototype.containPoint=function(e,t){var n=this.viewport,i=this.layer.renderer.getHeight();return t=i-t,e>=n.x&&t>=n.y&&e<=n.x+n.width&&t<=n.y+n.height};var Hu=new In;mt.prototype.castRay=function(e,t,n){var i=this.layer.renderer,r=i.viewport;return i.viewport=this.viewport,i.screenToNDC(e,t,Hu),this.camera.castRay(Hu,n),i.viewport=r,n};mt.prototype.prepareRender=function(){this.scene.update(),this.camera.update(),this.scene.updateLights();var e=this.scene.updateRenderList(this.camera);this._needsSortProgressively=!1;for(var t=0;t<e.transparent.length;t++){var n=e.transparent[t],i=n.geometry;i.needsSortVerticesProgressively&&i.needsSortVerticesProgressively()&&(this._needsSortProgressively=!0),i.needsSortTrianglesProgressively&&i.needsSortTrianglesProgressively()&&(this._needsSortProgressively=!0)}this._frame=0,this._temporalSS.resetFrame()};mt.prototype.render=function(e,t){this._doRender(e,t,this._frame),this._frame++};mt.prototype.needsAccumulate=function(){return this.needsTemporalSS()||this._needsSortProgressively};mt.prototype.needsTemporalSS=function(){var e=this._enableTemporalSS;return e==="auto"&&(e=this._enablePostEffect),e};mt.prototype.hasDOF=function(){return this._enableDOF};mt.prototype.isAccumulateFinished=function(){return this.needsTemporalSS()?this._temporalSS.isFinished():this._frame>30};mt.prototype._doRender=function(e,t,n){var i=this.scene,r=this.camera;n=n||0,this._updateTransparent(e,i,r,n),t||(this._shadowMapPass.kernelPCF=this._pcfKernels[0],this._shadowMapPass.render(e,i,r,!0)),this._updateShadowPCFKernel(n);var a=e.clearColor;if(e.gl.clearColor(a[0],a[1],a[2],a[3]),this._enablePostEffect&&(this.needsTemporalSS()&&this._temporalSS.jitterProjection(e,r),this._compositor.updateNormal(e,i,r,this._temporalSS.getFrame())),this._updateSSAO(e,i,r,this._temporalSS.getFrame()),this._enablePostEffect){var s=this._compositor.getSourceFrameBuffer();s.bind(e),e.gl.clear(e.gl.DEPTH_BUFFER_BIT|e.gl.COLOR_BUFFER_BIT),e.render(i,r,!0,!0),s.unbind(e),this.needsTemporalSS()&&t?(this._compositor.composite(e,i,r,this._temporalSS.getSourceFrameBuffer(),this._temporalSS.getFrame()),e.setViewport(this.viewport),this._temporalSS.render(e)):(e.setViewport(this.viewport),this._compositor.composite(e,i,r,null,0))}else if(this.needsTemporalSS()&&t){var s=this._temporalSS.getSourceFrameBuffer();s.bind(e),e.saveClear(),e.clearBit=e.gl.DEPTH_BUFFER_BIT|e.gl.COLOR_BUFFER_BIT,e.render(i,r,!0,!0),e.restoreClear(),s.unbind(e),e.setViewport(this.viewport),this._temporalSS.render(e)}else e.setViewport(this.viewport),e.render(i,r,!0,!0)};mt.prototype._updateTransparent=function(e,t,n,i){for(var r=new $,a=new ue,s=n.getWorldPosition(),o=t.getRenderList(n).transparent,l=0;l<o.length;l++){var c=o[l],h=c.geometry;ue.invert(a,c.worldTransform),$.transformMat4(r,s,a),h.needsSortTriangles&&h.needsSortTriangles()&&h.doSortTriangles(r,i),h.needsSortVertices&&h.needsSortVertices()&&h.doSortVertices(r,i)}};mt.prototype._updateSSAO=function(e,t,n){var i=this._enableSSAO&&this._enablePostEffect;i&&this._compositor.updateSSAO(e,t,n,this._temporalSS.getFrame());for(var r=t.getRenderList(n),a=0;a<r.opaque.length;a++){var s=r.opaque[a];s.renderNormal&&s.material[i?"enableTexture":"disableTexture"]("ssaoMap"),i&&s.material.set("ssaoMap",this._compositor.getSSAOTexture())}};mt.prototype._updateShadowPCFKernel=function(e){for(var t=this._pcfKernels[e%this._pcfKernels.length],n=this.scene.getRenderList(this.camera),i=n.opaque,r=0;r<i.length;r++)i[r].receiveShadow&&(i[r].material.set("pcfKernel",t),i[r].material.define("fragment","PCF_KERNEL_SIZE",t.length/2))};mt.prototype.dispose=function(e){this._compositor.dispose(e.gl),this._temporalSS.dispose(e.gl),this._shadowMapPass.dispose(e)};mt.prototype.setPostEffect=function(e,t){var n=this._compositor;this._enablePostEffect=e.get("enable");var i=e.getModel("bloom"),r=e.getModel("edge"),a=e.getModel("DOF",e.getModel("depthOfField")),s=e.getModel("SSAO",e.getModel("screenSpaceAmbientOcclusion")),o=e.getModel("SSR",e.getModel("screenSpaceReflection")),l=e.getModel("FXAA"),c=e.getModel("colorCorrection");i.get("enable")?n.enableBloom():n.disableBloom(),a.get("enable")?n.enableDOF():n.disableDOF(),o.get("enable")?n.enableSSR():n.disableSSR(),c.get("enable")?n.enableColorCorrection():n.disableColorCorrection(),r.get("enable")?n.enableEdge():n.disableEdge(),l.get("enable")?n.enableFXAA():n.disableFXAA(),this._enableDOF=a.get("enable"),this._enableSSAO=s.get("enable"),this._enableSSAO?n.enableSSAO():n.disableSSAO(),n.setBloomIntensity(i.get("intensity")),n.setEdgeColor(r.get("color")),n.setColorLookupTexture(c.get("lookupTexture"),t),n.setExposure(c.get("exposure")),["radius","quality","intensity"].forEach(function(h){n.setSSAOParameter(h,s.get(h))}),["quality","maxRoughness","physical"].forEach(function(h){n.setSSRParameter(h,o.get(h))}),["quality","focalDistance","focalRange","blurRadius","fstop"].forEach(function(h){n.setDOFParameter(h,a.get(h))}),["brightness","contrast","saturation"].forEach(function(h){n.setColorCorrection(h,c.get(h))})};mt.prototype.setDOFFocusOnPoint=function(e){if(this._enablePostEffect)return e>this.camera.far||e<this.camera.near?void 0:(this._compositor.setDOFParameter("focalDistance",e),!0)};mt.prototype.setTemporalSuperSampling=function(e){this._enableTemporalSS=e.get("enable")};mt.prototype.isLinearSpace=function(){return this._enablePostEffect};mt.prototype.setRootNode=function(e){if(this.rootNode!==e){for(var t=this.rootNode.children(),n=0;n<t.length;n++)e.add(t[n]);e!==this.scene&&this.scene.add(e),this.rootNode=e}};mt.prototype.add=function(e){this.rootNode.add(e)};mt.prototype.remove=function(e){this.rootNode.remove(e)};mt.prototype.removeAll=function(e){this.rootNode.removeAll(e)};Object.assign(mt.prototype,dh);function D0(e,t){var n=e.getBoxLayoutParams(),i=ml(n,{width:t.getWidth(),height:t.getHeight()});i.y=t.getHeight()-i.y-i.height,this.viewGL.setViewport(i.x,i.y,i.width,i.height,t.getDevicePixelRatio());var r=e.get("boxWidth"),a=e.get("boxHeight"),s=e.get("boxDepth");this.getAxis("x").setExtent(-r/2,r/2),this.getAxis("y").setExtent(s/2,-s/2),this.getAxis("z").setExtent(-a/2,a/2),this.size=[r,a,s]}function N0(e,t){var n={};function i(r,a){n[r]=n[r]||[1/0,-1/0],n[r][0]=Math.min(a[0],n[r][0]),n[r][1]=Math.max(a[1],n[r][1])}e.eachSeries(function(r){if(r.coordinateSystem===this){var a=r.getData();["x","y","z"].forEach(function(s){a.mapDimensionsAll(s,!0).forEach(function(o){i(s,a.getDataExtent(o,!0))})})}},this),["xAxis3D","yAxis3D","zAxis3D"].forEach(function(r){e.eachComponent(r,function(a){var s=r.charAt(0),o=a.getReferringComponents("grid3D").models[0],l=o.coordinateSystem;if(l===this){var c=l.getAxis(s);if(!c){var h=hh(n[s]||[1/0,-1/0],a);c=new el(s,h),c.type=a.get("type");var u=c.type==="category";c.onBand=u&&a.get("boundaryGap"),c.inverse=a.get("inverse"),a.axis=c,c.model=a,c.getLabelModel=function(){return a.getModel("axisLabel",o.getModel("axisLabel"))},c.getTickModel=function(){return a.getModel("axisTick",o.getModel("axisTick"))},l.addAxis(c)}}},this)},this),this.resize(this.model,t)}var I0={dimensions:Cs.prototype.dimensions,create:function(e,t){var n=[];e.eachComponent("grid3D",function(a){a.__viewGL=a.__viewGL||new mt;var s=new Cs;s.model=a,s.viewGL=a.__viewGL,a.coordinateSystem=s,n.push(s),s.resize=D0,s.update=N0});var i=["xAxis3D","yAxis3D","zAxis3D"];function r(a,s){return i.map(function(o){var l=a.getReferringComponents(o).models[0];return l==null&&(l=s.getComponent(o)),l})}return e.eachSeries(function(a){if(a.get("coordinateSystem")==="cartesian3D"){var s=a.getReferringComponents("grid3D").models[0];if(s==null){var o=r(a,e),s=o[0].getCoordSysModel();o.forEach(function(h){h.getCoordSysModel()})}var l=s.coordinateSystem;a.coordinateSystem=l}}),n}};const O0=I0;var Op=ja.extend({type:"cartesian3DAxis",axis:null,getCoordSysModel:function(){return this.ecModel.queryComponents({mainType:"grid3D",index:this.option.gridIndex,id:this.option.gridId})[0]}});yv(Op);const U0=Op;var Up={show:!0,grid3DIndex:0,inverse:!1,name:"",nameLocation:"middle",nameTextStyle:{fontSize:16},nameGap:20,axisPointer:{},axisLine:{},axisTick:{},axisLabel:{},splitArea:{}},F0=pt({boundaryGap:!0,axisTick:{alignWithLabel:!1,interval:"auto"},axisLabel:{interval:"auto"},axisPointer:{label:{show:!1}}},Up),Eh=pt({boundaryGap:[0,0],splitNumber:5,axisPointer:{label:{}}},Up),B0=fr({scale:!0,min:"dataMin",max:"dataMax"},Eh),Fp=fr({logBase:10},Eh);Fp.scale=!0;const z0={categoryAxis3D:F0,valueAxis3D:Eh,timeAxis3D:B0,logAxis3D:Fp};var G0=["value","category","time","log"];function H0(e,t,n,i,r){G0.forEach(function(a){var s=n.extend({type:t+"Axis3D."+a,__ordinalMeta:null,mergeDefaultAndTheme:function(o,l){var c=l.getTheme();pt(o,c.get(a+"Axis3D")),pt(o,this.getDefaultOption()),o.type=i(t,o)},optionUpdated:function(){var o=this.option;o.type==="category"&&(this.__ordinalMeta=Tv.createByAxisModel(this))},getCategories:function(){if(this.option.type==="category")return this.__ordinalMeta.categories},getOrdinalMeta:function(){return this.__ordinalMeta},defaultOption:pt(Sv(z0[a+"Axis3D"]),r||{},!0)});e.registerComponentModel(s)}),e.registerSubTypeDefaulter(t+"Axis3D",Ev(i,t))}function V0(e,t){return t.type||(t.data?"category":"value")}function k0(e){e.registerComponentModel(K_),e.registerComponentView(e0),e.registerCoordinateSystem("grid3D",O0),["x","y","z"].forEach(function(t){H0(e,t,U0,V0,{name:t.toUpperCase()});const n=e.ComponentView.extend({type:t+"Axis3D"});e.registerComponentView(n)}),e.registerAction({type:"grid3DChangeCamera",event:"grid3dcamerachanged",update:"series:updateCamera"},function(t,n){n.eachComponent({mainType:"grid3D",query:t},function(i){i.setView(t)})}),e.registerAction({type:"grid3DShowAxisPointer",event:"grid3dshowaxispointer",update:"grid3D:showAxisPointer"},function(t,n){}),e.registerAction({type:"grid3DHideAxisPointer",event:"grid3dhideaxispointer",update:"grid3D:hideAxisPointer"},function(t,n){})}mn(k0);const Qa={defaultOption:{shading:null,realisticMaterial:{textureTiling:1,textureOffset:0,detailTexture:null},lambertMaterial:{textureTiling:1,textureOffset:0,detailTexture:null},colorMaterial:{textureTiling:1,textureOffset:0,detailTexture:null},hatchingMaterial:{textureTiling:1,textureOffset:0,paperColor:"#fff"}}},Bp={getFilledRegions:function(e,t){var n=(e||[]).slice(),i;if(typeof t=="string"?(t=Vc(t),i=t&&t.geoJson):t&&t.features&&(i=t),!i)return[];for(var r={},a=i.features,s=0;s<n.length;s++)r[n[s].name]=n[s];for(var s=0;s<a.length;s++){var o=a[s].properties.name;r[o]||n.push({name:o})}return n},defaultOption:{show:!0,zlevel:-10,map:"",left:0,top:0,width:"100%",height:"100%",boxWidth:100,boxHeight:10,boxDepth:"auto",regionHeight:3,environment:"auto",groundPlane:{show:!1,color:"#aaa"},shading:"lambert",light:{main:{alpha:40,beta:30}},viewControl:{alpha:40,beta:0,distance:100,orthographicSize:60,minAlpha:5,minBeta:-80,maxBeta:80},label:{show:!1,distance:2,textStyle:{fontSize:20,color:"#000",backgroundColor:"rgba(255,255,255,0.7)",padding:3,borderRadius:4}},itemStyle:{color:"#fff",borderWidth:0,borderColor:"#333"},emphasis:{itemStyle:{color:"#639fc0"},label:{show:!0}}}};var es=ja.extend({type:"geo3D",layoutMode:"box",coordinateSystem:null,optionUpdated:function(){var e=this.option;e.regions=this.getFilledRegions(e.regions,e.map);var t=Gs(e.data||[],{coordDimensions:["value"],encodeDefine:this.get("encode"),dimensionsDefine:this.get("dimensions")}),n=new vi(t,this);n.initData(e.regions);var i={};n.each(function(r){var a=n.getName(r),s=n.getItemModel(r);i[a]=s}),this._regionModelMap=i,this._data=n},getData:function(){return this._data},getRegionModel:function(e){var t=this.getData().getName(e);return this._regionModelMap[t]||new dl(null,this)},getRegionPolygonCoords:function(e){var t=this.getData().getName(e),n=this.coordinateSystem.getRegion(t);return n?n.geometries:[]},getFormattedLabel:function(e,t){var n=this._data.getName(e),i=this.getRegionModel(e),r=i.get(t==="normal"?["label","formatter"]:["emphasis","label","formatter"]);r==null&&(r=i.get(["label","formatter"]));var a={name:n};if(typeof r=="function")return a.status=t,r(a);if(typeof r=="string"){var s=a.seriesName;return r.replace("{a}",s??"")}else return n},defaultOption:{regions:[]}});pt(es.prototype,Bp);pt(es.prototype,_l);pt(es.prototype,Ka);pt(es.prototype,$a);pt(es.prototype,Qa);const W0=es;function zp(e,t,n){n=n||2;var i=t&&t.length,r=i?t[0]*n:e.length,a=Gp(e,0,r,n,!0),s=[];if(!a)return s;var o,l,c,h,u,f,d;if(i&&(a=Z0(e,t,a,n)),e.length>80*n){o=c=e[0],l=h=e[1];for(var p=n;p<r;p+=n)u=e[p],f=e[p+1],u<o&&(o=u),f<l&&(l=f),u>c&&(c=u),f>h&&(h=f);d=Math.max(c-o,h-l)}return Ps(a,s,n,o,l,d),s}function Gp(e,t,n,i,r){var a,s;if(r===eh(e,t,n,i)>0)for(a=t;a<n;a+=i)s=Vu(a,e[a],e[a+1],s);else for(a=n-i;a>=t;a-=i)s=Vu(a,e[a],e[a+1],s);return s&&Hr(s,s.next)&&(Ns(s),s=s.next),s}function Ls(e,t){if(!e)return e;t||(t=e);var n=e,i;do if(i=!1,!n.steiner&&(Hr(n,n.next)||yn(n.prev,n,n.next)===0)){if(Ns(n),n=t=n.prev,n===n.next)return null;i=!0}else n=n.next;while(i||n!==t);return t}function Ps(e,t,n,i,r,a,s){if(e){!s&&a&&Q0(e,i,r,a);for(var o=e,l,c;e.prev!==e.next;){if(l=e.prev,c=e.next,a?Y0(e,i,r,a):X0(e)){t.push(l.i/n),t.push(e.i/n),t.push(c.i/n),Ns(e),e=c.next,o=c.next;continue}if(e=c,e===o){s?s===1?(e=q0(e,t,n),Ps(e,t,n,i,r,a,2)):s===2&&j0(e,t,n,i,r,a):Ps(Ls(e),t,n,i,r,a,1);break}}}}function X0(e){var t=e.prev,n=e,i=e.next;if(yn(t,n,i)>=0)return!1;for(var r=e.next.next;r!==e.prev;){if(tl(t.x,t.y,n.x,n.y,i.x,i.y,r.x,r.y)&&yn(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function Y0(e,t,n,i){var r=e.prev,a=e,s=e.next;if(yn(r,a,s)>=0)return!1;for(var o=r.x<a.x?r.x<s.x?r.x:s.x:a.x<s.x?a.x:s.x,l=r.y<a.y?r.y<s.y?r.y:s.y:a.y<s.y?a.y:s.y,c=r.x>a.x?r.x>s.x?r.x:s.x:a.x>s.x?a.x:s.x,h=r.y>a.y?r.y>s.y?r.y:s.y:a.y>s.y?a.y:s.y,u=Jc(o,l,t,n,i),f=Jc(c,h,t,n,i),d=e.nextZ;d&&d.z<=f;){if(d!==e.prev&&d!==e.next&&tl(r.x,r.y,a.x,a.y,s.x,s.y,d.x,d.y)&&yn(d.prev,d,d.next)>=0)return!1;d=d.nextZ}for(d=e.prevZ;d&&d.z>=u;){if(d!==e.prev&&d!==e.next&&tl(r.x,r.y,a.x,a.y,s.x,s.y,d.x,d.y)&&yn(d.prev,d,d.next)>=0)return!1;d=d.prevZ}return!0}function q0(e,t,n){var i=e;do{var r=i.prev,a=i.next.next;!Hr(r,a)&&Hp(r,i,i.next,a)&&Ds(r,a)&&Ds(a,r)&&(t.push(r.i/n),t.push(i.i/n),t.push(a.i/n),Ns(i),Ns(i.next),i=e=a),i=i.next}while(i!==e);return i}function j0(e,t,n,i,r,a){var s=e;do{for(var o=s.next.next;o!==s.prev;){if(s.i!==o.i&&nx(s,o)){var l=Vp(s,o);s=Ls(s,s.next),l=Ls(l,l.next),Ps(s,t,n,i,r,a),Ps(l,t,n,i,r,a);return}o=o.next}s=s.next}while(s!==e)}function Z0(e,t,n,i){var r=[],a,s,o,l,c;for(a=0,s=t.length;a<s;a++)o=t[a]*i,l=a<s-1?t[a+1]*i:e.length,c=Gp(e,o,l,i,!1),c===c.next&&(c.steiner=!0),r.push(tx(c));for(r.sort(K0),a=0;a<r.length;a++)$0(r[a],n),n=Ls(n,n.next);return n}function K0(e,t){return e.x-t.x}function $0(e,t){if(t=J0(e,t),t){var n=Vp(t,e);Ls(n,n.next)}}function J0(e,t){var n=t,i=e.x,r=e.y,a=-1/0,s;do{if(r<=n.y&&r>=n.next.y&&n.next.y!==n.y){var o=n.x+(r-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(o<=i&&o>a){if(a=o,o===i){if(r===n.y)return n;if(r===n.next.y)return n.next}s=n.x<n.next.x?n:n.next}}n=n.next}while(n!==t);if(!s)return null;if(i===a)return s.prev;var l=s,c=s.x,h=s.y,u=1/0,f;for(n=s.next;n!==l;)i>=n.x&&n.x>=c&&i!==n.x&&tl(r<h?i:a,r,c,h,r<h?a:i,r,n.x,n.y)&&(f=Math.abs(r-n.y)/(i-n.x),(f<u||f===u&&n.x>s.x)&&Ds(n,e)&&(s=n,u=f)),n=n.next;return s}function Q0(e,t,n,i){var r=e;do r.z===null&&(r.z=Jc(r.x,r.y,t,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next;while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,ex(r)}function ex(e){var t,n,i,r,a,s,o,l,c=1;do{for(n=e,e=null,a=null,s=0;n;){for(s++,i=n,o=0,t=0;t<c&&(o++,i=i.nextZ,!!i);t++);for(l=c;o>0||l>0&&i;)o!==0&&(l===0||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,l--),a?a.nextZ=r:e=r,r.prevZ=a,a=r;n=i}a.nextZ=null,c*=2}while(s>1);return e}function Jc(e,t,n,i,r){return e=32767*(e-n)/r,t=32767*(t-i)/r,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,e|t<<1}function tx(e){var t=e,n=e;do t.x<n.x&&(n=t),t=t.next;while(t!==e);return n}function tl(e,t,n,i,r,a,s,o){return(r-s)*(t-o)-(e-s)*(a-o)>=0&&(e-s)*(i-o)-(n-s)*(t-o)>=0&&(n-s)*(a-o)-(r-s)*(i-o)>=0}function nx(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!ix(e,t)&&Ds(e,t)&&Ds(t,e)&&rx(e,t)}function yn(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function Hr(e,t){return e.x===t.x&&e.y===t.y}function Hp(e,t,n,i){return Hr(e,t)&&Hr(n,i)||Hr(e,i)&&Hr(n,t)?!0:yn(e,t,n)>0!=yn(e,t,i)>0&&yn(n,i,e)>0!=yn(n,i,t)>0}function ix(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&Hp(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}function Ds(e,t){return yn(e.prev,e,e.next)<0?yn(e,t,e.next)>=0&&yn(e,e.prev,t)>=0:yn(e,t,e.prev)<0||yn(e,e.next,t)<0}function rx(e,t){var n=e,i=!1,r=(e.x+t.x)/2,a=(e.y+t.y)/2;do n.y>a!=n.next.y>a&&n.next.y!==n.y&&r<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next;while(n!==e);return i}function Vp(e,t){var n=new Qc(e.i,e.x,e.y),i=new Qc(t.i,t.x,t.y),r=e.next,a=t.prev;return e.next=t,t.prev=e,n.next=r,r.prev=n,i.next=n,n.prev=i,a.next=i,i.prev=a,i}function Vu(e,t,n,i){var r=new Qc(e,t,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function Ns(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function Qc(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}zp.deviation=function(e,t,n,i){var r=t&&t.length,a=r?t[0]*n:e.length,s=Math.abs(eh(e,0,a,n));if(r)for(var o=0,l=t.length;o<l;o++){var c=t[o]*n,h=o<l-1?t[o+1]*n:e.length;s-=Math.abs(eh(e,c,h,n))}var u=0;for(o=0;o<i.length;o+=3){var f=i[o]*n,d=i[o+1]*n,p=i[o+2]*n;u+=Math.abs((e[f]-e[p])*(e[d+1]-e[f+1])-(e[f]-e[d])*(e[p+1]-e[f+1]))}return s===0&&u===0?0:Math.abs((u-s)/s)};function eh(e,t,n,i){for(var r=0,a=t,s=n-i;a<n;a+=i)r+=(e[s]-e[a])*(e[a+1]+e[s+1]),s=a;return r}function ec(e,t,n){var i=e[t];e[t]=e[n],e[n]=i}function kp(e,t,n,i,r){var a=n,s=e[t];ec(e,t,i);for(var o=n;o<i;o++)r(e[o],s)<0&&(ec(e,o,a),a++);return ec(e,i,a),a}function nl(e,t,n,i){if(n<i){var r=Math.floor((n+i)/2),a=kp(e,r,n,i,t);nl(e,t,n,a-1),nl(e,t,a+1,i)}}function Ha(){this._parts=[]}Ha.prototype.step=function(e,t,n){var i=e.length;if(n===0){this._parts=[],this._sorted=!1;var r=Math.floor(i/2);this._parts.push({pivot:r,left:0,right:i-1}),this._currentSortPartIdx=0}if(!this._sorted){var a=this._parts;if(a.length===0)return this._sorted=!0,!0;if(a.length<512){for(var s=0;s<a.length;s++)a[s].pivot=kp(e,a[s].pivot,a[s].left,a[s].right,t);for(var o=[],s=0;s<a.length;s++){var l=a[s].left,c=a[s].pivot-1;c>l&&o.push({pivot:Math.floor((c+l)/2),left:l,right:c});var l=a[s].pivot+1,c=a[s].right;c>l&&o.push({pivot:Math.floor((c+l)/2),left:l,right:c})}a=this._parts=o}else for(var s=0;s<Math.floor(a.length/10);s++){var h=a.length-1-this._currentSortPartIdx;if(nl(e,t,a[h].left,a[h].right),this._currentSortPartIdx++,this._currentSortPartIdx===a.length)return this._sorted=!0,!0}return!1}};Ha.sort=nl;var Pa=Ot.vec3,ku=Pa.create(),Wu=Pa.create(),Xu=Pa.create();const Mh={needsSortTriangles:function(){return this.indices&&this.sortTriangles},needsSortTrianglesProgressively:function(){return this.needsSortTriangles()&&this.triangleCount>=2e4},doSortTriangles:function(e,t){var n=this.indices;if(t===0){var i=this.attributes.position,e=e.array;(!this._triangleZList||this._triangleZList.length!==this.triangleCount)&&(this._triangleZList=new Float32Array(this.triangleCount),this._sortedTriangleIndices=new Uint32Array(this.triangleCount),this._indicesTmp=new n.constructor(n.length),this._triangleZListTmp=new Float32Array(this.triangleCount));for(var r=0,a,s=0;s<n.length;){i.get(n[s++],ku),i.get(n[s++],Wu),i.get(n[s++],Xu);var o=Pa.sqrDist(ku,e),l=Pa.sqrDist(Wu,e),c=Pa.sqrDist(Xu,e),h=Math.min(o,l);h=Math.min(h,c),s===3?(a=h,h=0):h=h-a,this._triangleZList[r++]=h}}for(var u=this._sortedTriangleIndices,s=0;s<u.length;s++)u[s]=s;if(this.triangleCount<2e4)t===0&&this._simpleSort(!0);else for(var s=0;s<3;s++)this._progressiveQuickSort(t*3+s);for(var f=this._indicesTmp,d=this._triangleZListTmp,p=this._triangleZList,s=0;s<this.triangleCount;s++){var g=u[s]*3,v=s*3;f[v++]=n[g++],f[v++]=n[g++],f[v]=n[g],d[s]=p[u[s]]}var m=this._indicesTmp;this._indicesTmp=this.indices,this.indices=m;var m=this._triangleZListTmp;this._triangleZListTmp=this._triangleZList,this._triangleZList=m,this.dirtyIndices()},_simpleSort:function(e){var t=this._triangleZList,n=this._sortedTriangleIndices;function i(r,a){return t[a]-t[r]}e?Array.prototype.sort.call(n,i):Ha.sort(n,i,0,n.length-1)},_progressiveQuickSort:function(e){var t=this._triangleZList,n=this._sortedTriangleIndices;this._quickSort=this._quickSort||new Ha,this._quickSort.step(n,function(i,r){return t[r]-t[i]},e)}};function ax(e){const t=e.getVisual("style");if(t){const n=e.getVisual("drawType");return t[n]}}function sx(e){return e.getVisual("style").opacity}function Zt(e,t){const n=e.getItemVisual(t,"style");if(n){const i=e.getVisual("drawType");return n[i]}}function jt(e,t){const n=e.getItemVisual(t,"style");return n&&n.opacity}var Wp=1,Xp=2;function Ui(e,t,n){this._labelsMesh=new xh,this._labelTextureSurface=new Qo({width:512,height:512,devicePixelRatio:n.getDevicePixelRatio(),onupdate:function(){n.getZr().refresh()}}),this._api=n,this._labelsMesh.material.set("textureAtlas",this._labelTextureSurface.getTexture())}Ui.prototype.getLabelPosition=function(e,t,n){return[0,0,0]};Ui.prototype.getLabelDistance=function(e,t,n){return 0};Ui.prototype.getMesh=function(){return this._labelsMesh};Ui.prototype.updateData=function(e,t,n){t==null&&(t=0),n==null&&(n=e.count()),(!this._labelsVisibilitiesBits||this._labelsVisibilitiesBits.length!==n-t)&&(this._labelsVisibilitiesBits=new Uint8Array(n-t));for(var i=["label","show"],r=["emphasis","label","show"],a=t;a<n;a++){var s=e.getItemModel(a),o=s.get(i),l=s.get(r);l==null&&(l=o);var c=(o?Wp:0)|(l?Xp:0);this._labelsVisibilitiesBits[a-t]=c}this._start=t,this._end=n,this._data=e};Ui.prototype.updateLabels=function(e){if(this._data){e=e||[];for(var t=e.length>0,n={},i=0;i<e.length;i++)n[e[i]]=!0;this._labelsMesh.geometry.convertToDynamicArray(!0),this._labelTextureSurface.clear();for(var r=["label"],a=["emphasis","label"],s=this._data.hostModel,o=this._data,l=s.getModel(r),c=s.getModel(a,l),h={left:"right",right:"left",top:"center",bottom:"center"},u={left:"middle",right:"middle",top:"bottom",bottom:"top"},f=this._start;f<this._end;f++){var d=!1;t&&n[f]&&(d=!0);var p=this._labelsVisibilitiesBits[f-this._start]&(d?Xp:Wp);if(p){var g=o.getItemModel(f),v=g.getModel(d?a:r,d?c:l),m=v.get("distance")||0,y=v.get("position"),_=this._api.getDevicePixelRatio(),x=s.getFormattedLabel(f,d?"emphasis":"normal");if(x==null||x==="")return;var A=new qo({style:jo(v,{text:x,fill:v.get("color")||Zt(o,f)||"#000",align:"left",verticalAlign:"top",opacity:Ye.firstNotNull(v.get("opacity"),jt(o,f),1)})}),E=A.getBoundingRect(),w=1.2;E.height*=w;var b=this._labelTextureSurface.add(A),M=h[y]||"center",T=u[y]||"bottom";this._labelsMesh.geometry.addSprite(this.getLabelPosition(f,y,m),[E.width*_,E.height*_],b,M,T,this.getLabelDistance(f,y,m)*_)}}this._labelsMesh.material.set("uvScale",this._labelTextureSurface.getCoordsScale()),this._labelTextureSurface.getZr().refreshImmediately(),this._labelsMesh.geometry.convertToTypedArray(),this._labelsMesh.geometry.dirty()}};Ui.prototype.dispose=function(){this._labelTextureSurface.dispose()};var Mn=Ot.vec3;R.Shader.import(Sl);function Va(e){this.rootNode=new R.Node,this._triangulationResults={},this._shadersMap=R.COMMON_SHADERS.filter(function(n){return n!=="shadow"}).reduce(function(n,i){return n[i]=R.createShader("ecgl."+i),n},{}),this._linesShader=R.createShader("ecgl.meshLines3D");var t={};R.COMMON_SHADERS.forEach(function(n){t[n]=new R.Material({shader:R.createShader("ecgl."+n)})}),this._groundMaterials=t,this._groundMesh=new R.Mesh({geometry:new R.PlaneGeometry({dynamic:!0}),castShadow:!1,renderNormal:!0,$ignorePicking:!0}),this._groundMesh.rotation.rotateX(-Math.PI/2),this._labelsBuilder=new Ui(512,512,e),this._labelsBuilder.getMesh().renderOrder=100,this._labelsBuilder.getMesh().material.depthTest=!1,this.rootNode.add(this._labelsBuilder.getMesh()),this._initMeshes(),this._api=e}Va.prototype={constructor:Va,extrudeY:!0,update:function(e,t,n,i,r){var a=e.getData();i==null&&(i=0),r==null&&(r=a.count()),this._startIndex=i,this._endIndex=r-1,this._triangulation(e,i,r);var s=this._getShader(e.get("shading"));this._prepareMesh(e,s,n,i,r),this.rootNode.updateWorldTransform(),this._updateRegionMesh(e,n,i,r);var o=e.coordinateSystem;o.type==="geo3D"&&this._updateGroundPlane(e,o,n);var l=this;this._labelsBuilder.updateData(a,i,r),this._labelsBuilder.getLabelPosition=function(c,h,u){var f=a.getName(c),d,p=u;if(o.type==="geo3D"){var g=o.getRegion(f);if(!g)return[NaN,NaN,NaN];d=g.getCenter();var v=o.dataToPoint([d[0],d[1],p]);return v}else var m=l._triangulationResults[c-l._startIndex],d=l.extrudeY?[(m.max[0]+m.min[0])/2,m.max[1]+p,(m.max[2]+m.min[2])/2]:[(m.max[0]+m.min[0])/2,(m.max[1]+m.min[1])/2,m.max[2]+p]},this._data=a,this._labelsBuilder.updateLabels(),this._updateDebugWireframe(e),this._lastHoverDataIndex=0},_initMeshes:function(){var e=this;function t(){var r=new R.Mesh({name:"Polygon",material:new R.Material({shader:e._shadersMap.lambert}),geometry:new R.Geometry({sortTriangles:!0,dynamic:!0}),culling:!1,ignorePicking:!0,renderNormal:!0});return Object.assign(r.geometry,Mh),r}var n=t(),i=new R.Mesh({material:new R.Material({shader:this._linesShader}),castShadow:!1,ignorePicking:!0,$ignorePicking:!0,geometry:new pr({useNativeLine:!1})});this.rootNode.add(n),this.rootNode.add(i),n.material.define("both","VERTEX_COLOR"),n.material.define("fragment","DOUBLE_SIDED"),this._polygonMesh=n,this._linesMesh=i,this.rootNode.add(this._groundMesh)},_getShader:function(e){var t=this._shadersMap[e];return t||(t=this._shadersMap.lambert),t.__shading=e,t},_prepareMesh:function(e,t,n,i,r){for(var a=0,s=0,o=0,l=0,c=i;c<r;c++){var h=this._getRegionPolygonInfo(c),u=this._getRegionLinesInfo(c,e,this._linesMesh.geometry);a+=h.vertexCount,s+=h.triangleCount,o+=u.vertexCount,l+=u.triangleCount}var f=this._polygonMesh,d=f.geometry;["position","normal","texcoord0","color"].forEach(function(p){d.attributes[p].init(a)}),d.indices=a>65535?new Uint32Array(s*3):new Uint16Array(s*3),f.material.shader!==t&&f.material.attachShader(t,!0),R.setMaterialFromModel(t.__shading,f.material,e,n),o>0&&(this._linesMesh.geometry.resetOffset(),this._linesMesh.geometry.setVertexCount(o),this._linesMesh.geometry.setTriangleCount(l)),this._dataIndexOfVertex=new Uint32Array(a),this._vertexRangeOfDataIndex=new Uint32Array((r-i)*2)},_updateRegionMesh:function(e,t,n,i){for(var r=e.getData(),a=0,s=0,o=!1,E=this._polygonMesh,l=this._linesMesh,c=n;c<i;c++){var h=e.getRegionModel(c),u=h.getModel("itemStyle"),f=Ye.firstNotNull(Zt(r,c),u.get("color"),"#fff"),d=Ye.firstNotNull(jt(r,c),u.get("opacity"),1),p=R.parseColor(f),g=R.parseColor(u.get("borderColor"));p[3]*=d,g[3]*=d;var v=p[3]<.99;E.material.set("color",[1,1,1,1]),o=o||v;for(var m=Ye.firstNotNull(h.get("height",!0),e.get("regionHeight")),y=this._updatePolygonGeometry(e,E.geometry,c,m,a,s,p),_=a;_<y.vertexOffset;_++)this._dataIndexOfVertex[_]=c;this._vertexRangeOfDataIndex[(c-n)*2]=a,this._vertexRangeOfDataIndex[(c-n)*2+1]=y.vertexOffset,a=y.vertexOffset,s=y.triangleOffset;var x=u.get("borderWidth"),A=x>0;A&&(x*=t.getDevicePixelRatio(),this._updateLinesGeometry(l.geometry,e,c,m,x,e.coordinateSystem.transform)),l.invisible=!A,l.material.set({color:g})}var E=this._polygonMesh;E.material.transparent=o,E.material.depthMask=!o,E.geometry.updateBoundingBox(),E.frontFace=this.extrudeY?R.Mesh.CCW:R.Mesh.CW,E.material.get("normalMap")&&E.geometry.generateTangents(),E.seriesIndex=e.seriesIndex,E.on("mousemove",this._onmousemove,this),E.on("mouseout",this._onmouseout,this)},_updateDebugWireframe:function(e){var t=e.getModel("debug.wireframe");if(t.get("show")){var n=R.parseColor(t.get("lineStyle.color")||"rgba(0,0,0,0.5)"),i=Ye.firstNotNull(t.get("lineStyle.width"),1),r=this._polygonMesh;r.geometry.generateBarycentric(),r.material.define("both","WIREFRAME_TRIANGLE"),r.material.set("wireframeLineColor",n),r.material.set("wireframeLineWidth",i)}},_onmousemove:function(e){var t=this._dataIndexOfVertex[e.triangle[0]];t==null&&(t=-1),t!==this._lastHoverDataIndex&&(this.downplay(this._lastHoverDataIndex),this.highlight(t),this._labelsBuilder.updateLabels([t])),this._lastHoverDataIndex=t,this._polygonMesh.dataIndex=t},_onmouseout:function(e){e.target&&(this.downplay(this._lastHoverDataIndex),this._lastHoverDataIndex=-1,this._polygonMesh.dataIndex=-1),this._labelsBuilder.updateLabels([])},_updateGroundPlane:function(e,t,n){var i=e.getModel("groundPlane",e);if(this._groundMesh.invisible=!i.get("show",!0),!this._groundMesh.invisible){var r=e.get("shading"),a=this._groundMaterials[r];a||(a=this._groundMaterials.lambert),R.setMaterialFromModel(r,a,i,n),a.get("normalMap")&&this._groundMesh.geometry.generateTangents(),this._groundMesh.material=a,this._groundMesh.material.set("color",R.parseColor(i.get("color"))),this._groundMesh.scale.set(t.size[0],t.size[2],1)}},_triangulation:function(e,t,n){this._triangulationResults=[];for(var i=[1/0,1/0,1/0],r=[-1/0,-1/0,-1/0],a=e.coordinateSystem,s=t;s<n;s++){for(var o=[],l=e.getRegionPolygonCoords(s),c=0;c<l.length;c++){var h=l[c].exterior,u=l[c].interiors,f=[],d=[];if(!(h.length<3)){for(var p=0,g=0;g<h.length;g++){var v=h[g];f[p++]=v[0],f[p++]=v[1]}for(var g=0;g<u.length;g++)if(!(u[g].length<3)){for(var m=f.length/2,y=0;y<u[g].length;y++){var v=u[g][y];f.push(v[0]),f.push(v[1])}d.push(m)}for(var _=zp(f,d),x=new Float64Array(f.length/2*3),A=[],E=[1/0,1/0,1/0],w=[-1/0,-1/0,-1/0],b=0,g=0;g<f.length;)Mn.set(A,f[g++],0,f[g++]),a&&a.transform&&Mn.transformMat4(A,A,a.transform),Mn.min(E,E,A),Mn.max(w,w,A),x[b++]=A[0],x[b++]=A[1],x[b++]=A[2];Mn.min(i,i,E),Mn.max(r,r,w),o.push({points:x,indices:_,min:E,max:w})}}this._triangulationResults.push(o)}this._geoBoundingBox=[i,r]},_getRegionPolygonInfo:function(e){for(var t=this._triangulationResults[e-this._startIndex],n=0,i=0,r=0;r<t.length;r++)n+=t[r].points.length/3,i+=t[r].indices.length/3;var a=n*2+n*4,s=i*2+n*2;return{vertexCount:a,triangleCount:s}},_updatePolygonGeometry:function(e,t,n,i,r,a,s){var o=e.get("projectUVOnGround"),l=t.attributes.position,c=t.attributes.normal,h=t.attributes.texcoord0,u=t.attributes.color,f=this._triangulationResults[n-this._startIndex],d=u.value&&s,p=t.indices,g=this.extrudeY?1:2,v=this.extrudeY?2:1,m=[this.rootNode.worldTransform.x.len(),this.rootNode.worldTransform.y.len(),this.rootNode.worldTransform.z.len()],y=Mn.mul([],this._geoBoundingBox[0],m),_=Mn.mul([],this._geoBoundingBox[1],m),x=Math.max(_[0]-y[0],_[2]-y[2]);function A(Me,Ae,Pe){for(var G=Me.points,ke=G.length,Te=[],ht=[],we=0;we<ke;we+=3)Te[0]=G[we],Te[g]=Ae,Te[v]=G[we+2],ht[0]=(G[we]*m[0]-y[0])/x,ht[1]=(G[we+2]*m[v]-y[2])/x,l.set(r,Te),d&&u.set(r,s),h.set(r++,ht)}function E(Me,Ae,Pe){var G=r;A(Me,Ae);for(var ke=Me.indices.length,Te=0;Te<ke;Te++)p[a*3+Te]=Me.indices[Te]+G;a+=Me.indices.length/3}for(var w=this.extrudeY?[0,1,0]:[0,0,1],b=Mn.negate([],w),M=0;M<f.length;M++){var T=r,P=f[M];E(P,0),E(P,i);for(var O=P.points.length/3,D=0;D<O;D++)c.set(T+D,b),c.set(T+D+O,w);for(var N=[0,3,1,1,3,2],B=[[],[],[],[]],z=[],Y=[],F=[],J=[],V=0,D=0;D<O;D++){for(var ce=(D+1)%O,fe=(P.points[ce*3]-P.points[D*3])*m[0],ye=(P.points[ce*3+2]-P.points[D*3+2])*m[v],W=Math.sqrt(fe*fe+ye*ye),Q=0;Q<4;Q++){var de=Q===0||Q===3,se=(de?D:ce)*3;B[Q][0]=P.points[se],B[Q][g]=Q>1?i:0,B[Q][v]=P.points[se+2],l.set(r+Q,B[Q]),o?(J[0]=(P.points[se]*m[0]-y[0])/x,J[1]=(P.points[se+2]*m[v]-y[v])/x):(J[0]=(de?V:V+W)/x,J[1]=(B[Q][g]*m[g]-y[g])/x),h.set(r+Q,J)}Mn.sub(z,B[1],B[0]),Mn.sub(Y,B[3],B[0]),Mn.cross(F,z,Y),Mn.normalize(F,F);for(var Q=0;Q<4;Q++)c.set(r+Q,F),d&&u.set(r+Q,s);for(var Q=0;Q<6;Q++)p[a*3+Q]=N[Q]+r;r+=4,a+=2,V+=W}}return t.dirty(),{vertexOffset:r,triangleOffset:a}},_getRegionLinesInfo:function(e,t,n){var i=0,r=0,a=t.getRegionModel(e),s=a.getModel("itemStyle"),o=s.get("borderWidth");if(o>0){var l=t.getRegionPolygonCoords(e);l.forEach(function(c){var h=c.exterior,u=c.interiors;i+=n.getPolylineVertexCount(h),r+=n.getPolylineTriangleCount(h);for(var f=0;f<u.length;f++)i+=n.getPolylineVertexCount(u[f]),r+=n.getPolylineTriangleCount(u[f])},this)}return{vertexCount:i,triangleCount:r}},_updateLinesGeometry:function(e,t,n,i,r,a){function s(c){for(var h=new Float64Array(c.length*3),u=0,f=[],d=0;d<c.length;d++)f[0]=c[d][0],f[1]=i+.1,f[2]=c[d][1],a&&Mn.transformMat4(f,f,a),h[u++]=f[0],h[u++]=f[1],h[u++]=f[2];return h}var o=[1,1,1,1],l=t.getRegionPolygonCoords(n);l.forEach(function(c){var h=c.exterior,u=c.interiors;e.addPolyline(s(h),o,r);for(var f=0;f<u.length;f++)e.addPolyline(s(u[f]),o,r)})},highlight:function(e){var t=this._data;if(t){var n=t.getItemModel(e),i=n.getModel(["emphasis","itemStyle"]),r=i.get("color"),a=Ye.firstNotNull(i.get("opacity"),jt(t,e),1);if(r==null){var s=Zt(t,e);r=uh(s,-.4)}a==null&&(a=jt(t,e));var o=R.parseColor(r);o[3]*=a,this._setColorOfDataIndex(t,e,o)}},downplay:function(e){var t=this._data;if(t){var n=t.getItemModel(e),i=Ye.firstNotNull(Zt(t,e),n.get(["itemStyle","color"]),"#fff"),r=Ye.firstNotNull(jt(t,e),n.get(["itemStyle","opacity"]),1),a=R.parseColor(i);a[3]*=r,this._setColorOfDataIndex(t,e,a)}},dispose:function(){this._labelsBuilder.dispose()},_setColorOfDataIndex:function(e,t,n){if(!(t<this._startIndex&&t>this._endIndex)){t-=this._startIndex;for(var i=this._vertexRangeOfDataIndex[t*2];i<this._vertexRangeOfDataIndex[t*2+1];i++)this._polygonMesh.geometry.attributes.color.set(i,n);this._polygonMesh.geometry.dirty(),this._api.getZr().refresh()}}};const ox=zs.extend({type:"geo3D",__ecgl__:!0,init:function(e,t){this._geo3DBuilder=new Va(t),this.groupGL=new R.Node,this._lightRoot=new R.Node,this._sceneHelper=new cr(this._lightRoot),this._sceneHelper.initLight(this._lightRoot),this._control=new yl({zr:t.getZr()}),this._control.init()},render:function(e,t,n){this.groupGL.add(this._geo3DBuilder.rootNode);var i=e.coordinateSystem;if(!(!i||!i.viewGL)){i.viewGL.add(this._lightRoot),e.get("show")?i.viewGL.add(this.groupGL):i.viewGL.remove(this.groupGL);var r=this._control;r.setViewGL(i.viewGL);var a=e.getModel("viewControl");r.setFromViewControlModel(a,0),this._sceneHelper.setScene(i.viewGL.scene),this._sceneHelper.updateLight(e),i.viewGL.setPostEffect(e.getModel("postEffect"),n),i.viewGL.setTemporalSuperSampling(e.getModel("temporalSuperSampling")),this._geo3DBuilder.update(e,t,n,0,e.getData().count());var s=i.viewGL.isLinearSpace()?"define":"undefine";this._geo3DBuilder.rootNode.traverse(function(o){o.material&&o.material[s]("fragment","SRGB_DECODE")}),r.off("update"),r.on("update",function(){n.dispatchAction({type:"geo3DChangeCamera",alpha:r.getAlpha(),beta:r.getBeta(),distance:r.getDistance(),center:r.getCenter(),from:this.uid,geo3DId:e.id})}),r.update()}},afterRender:function(e,t,n,i){var r=i.renderer;this._sceneHelper.updateAmbientCubemap(r,e,n),this._sceneHelper.updateSkybox(r,e,n)},dispose:function(){this._control.dispose(),this._geo3DBuilder.dispose()}});var lx={Russia:[100,60],"United States":[-99,38],"United States of America":[-99,38]};function cx(e,t){if(e==="world"){var n=lx[t.name];if(n){var i=[n[0],n[1]];t.setCenter(i)}}}var hx=Ot.vec3,Ra=Ot.mat4,ux=[wv,cx];function il(e,t,n,i,r){this.name=e,this.map=t,this.regionHeight=0,this.regions=[],this._nameCoordMap={},this.loadGeoJson(n,i,r),this.transform=Ra.identity(new Float64Array(16)),this.invTransform=Ra.identity(new Float64Array(16)),this.extrudeY=!0,this.altitudeAxis}il.prototype={constructor:il,type:"geo3D",dimensions:["lng","lat","alt"],containPoint:function(){},loadGeoJson:function(e,t,n){var i=qh||qh;try{this.regions=e?i(e):[]}catch(c){throw`Invalid geoJson format
`+c}t=t||{},n=n||{};for(var r=this.regions,a={},s=0;s<r.length;s++){var o=r[s].name;o=n[o]||o,r[s].name=o,a[o]=r[s],this.addGeoCoord(o,r[s].getCenter());var l=t[o];l&&r[s].transformTo(l.left,l.top,l.width,l.height)}this._regionsMap=a,this._geoRect=null,ux.forEach(function(c){c(this)},this)},getGeoBoundingRect:function(){if(this._geoRect)return this._geoRect;for(var e,t=this.regions,n=0;n<t.length;n++){var i=t[n].getBoundingRect();e=e||i.clone(),e.union(i)}return this._geoRect=e||new Mv(0,0,0,0)},addGeoCoord:function(e,t){this._nameCoordMap[e]=t},getRegion:function(e){return this._regionsMap[e]},getRegionByCoord:function(e){for(var t=this.regions,n=0;n<t.length;n++)if(t[n].contain(e))return t[n]},setSize:function(e,t,n){this.size=[e,t,n];var i=this.getGeoBoundingRect(),r=e/i.width,a=-n/i.height,s=-e/2-i.x*r,o=n/2-i.y*a,l=this.extrudeY?[s,0,o]:[s,o,0],c=this.extrudeY?[r,1,a]:[r,a,1],h=this.transform;Ra.identity(h),Ra.translate(h,h,l),Ra.scale(h,h,c),Ra.invert(this.invTransform,h)},dataToPoint:function(e,t){t=t||[];var n=this.extrudeY?1:2,i=this.extrudeY?2:1,r=e[2];return isNaN(r)&&(r=0),t[0]=e[0],t[i]=e[1],this.altitudeAxis?t[n]=this.altitudeAxis.dataToCoord(r):t[n]=0,t[n]+=this.regionHeight,hx.transformMat4(t,t,this.transform),t},pointToData:function(e,t){}};function fx(e,t){var n=e.getBoxLayoutParams(),i=ml(n,{width:t.getWidth(),height:t.getHeight()});i.y=t.getHeight()-i.y-i.height,this.viewGL.setViewport(i.x,i.y,i.width,i.height,t.getDevicePixelRatio());var r=this.getGeoBoundingRect(),a=r.width/r.height*(e.get("aspectScale")||.75),s=e.get("boxWidth"),o=e.get("boxDepth"),l=e.get("boxHeight");l==null&&(l=5),isNaN(s)&&isNaN(o)&&(s=100),isNaN(o)?o=s/a:isNaN(s)&&(s=o/a),this.setSize(s,l,o),this.regionHeight=e.get("regionHeight"),this.altitudeAxis&&this.altitudeAxis.setExtent(0,Math.max(l-this.regionHeight,0))}function dx(e,t){var n=[1/0,-1/0];if(e.eachSeries(function(r){if(r.coordinateSystem===this&&r.type!=="series.map3D"){var a=r.getData(),s=r.coordDimToDataDim("alt"),o=s&&s[0];if(o){var l=a.getDataExtent(o,!0);n[0]=Math.min(n[0],l[0]),n[1]=Math.max(n[1],l[1])}}},this),n&&isFinite(n[1]-n[0])){var i=hh(n,{type:"value",min:"dataMin",max:"dataMax"});this.altitudeAxis=new pl("altitude",i),this.resize(this.model,t)}}var Yu=0,Yp={dimensions:il.prototype.dimensions,create:function(e,t){var n=[];if(!Vc)throw new Error("geo3D component depends on geo component");function i(r,a){var s=Yp.createGeo3D(r);r.__viewGL=r.__viewGL||new mt,s.viewGL=r.__viewGL,r.coordinateSystem=s,s.model=r,n.push(s),s.resize=fx,s.resize(r,t),s.update=dx}return e.eachComponent("geo3D",function(r,a){i(r)}),e.eachSeriesByType("map3D",function(r,a){var s=r.get("coordinateSystem");s==null&&(s="geo3D"),s==="geo3D"&&i(r)}),e.eachSeries(function(r){if(r.get("coordinateSystem")==="geo3D"){if(r.type==="series.map3D")return;var a=r.getReferringComponents("geo3D").models[0];if(a||(a=e.getComponent("geo3D")),!a)throw new Error('geo "'+Ye.firstNotNull(r.get("geo3DIndex"),r.get("geo3DId"),0)+'" not found');r.coordinateSystem=a.coordinateSystem}}),n},createGeo3D:function(e){var t=e.get("map"),n;return typeof t=="string"?(n=t,t=Vc(t)):t&&t.features&&(t={geoJson:t}),n==null&&(n="GEO_ANONYMOUS_"+Yu++),new il(n+Yu++,n,t&&t.geoJson,t&&t.specialAreas,e.get("nameMap"))}};const qp=Yp;function jp(e){e.registerComponentModel(W0),e.registerComponentView(ox),e.registerAction({type:"geo3DChangeCamera",event:"geo3dcamerachanged",update:"series:updateCamera"},function(t,n){n.eachComponent({mainType:"geo3D",query:t},function(i){i.setView(t)})}),e.registerCoordinateSystem("geo3D",qp)}mn(jp);function qu(e,t){e.id=e.id||e.name||t+""}var Xr=ja.extend({type:"globe",layoutMode:"box",coordinateSystem:null,init:function(){Xr.superApply(this,"init",arguments),mi(this.option.layers,function(e,t){pt(e,this.defaultLayerOption),qu(e,t)},this)},mergeOption:function(e){var t=this.option.layers;this.option.layers=null,Xr.superApply(this,"mergeOption",arguments);function n(s){return Av(s,function(o,l,c){return qu(l,c),o[l.id]=l,o},{})}if(t&&t.length){var i=n(e.layers),r=n(t);for(var a in i)r[a]?pt(r[a],i[a],!0):t.push(e.layers[a]);this.option.layers=t}mi(this.option.layers,function(s){pt(s,this.defaultLayerOption)},this)},optionUpdated:function(){this.updateDisplacementHash()},defaultLayerOption:{show:!0,type:"overlay"},defaultOption:{show:!0,zlevel:-10,left:0,top:0,width:"100%",height:"100%",environment:"auto",baseColor:"#fff",baseTexture:"",heightTexture:"",displacementTexture:"",displacementScale:0,displacementQuality:"medium",globeRadius:100,globeOuterRadius:150,shading:"lambert",light:{main:{time:""}},atmosphere:{show:!1,offset:5,color:"#ffffff",glowPower:6,innerGlowPower:2},viewControl:{autoRotate:!0,panSensitivity:0,targetCoord:null},layers:[]},setDisplacementData:function(e,t,n){this.displacementData=e,this.displacementWidth=t,this.displacementHeight=n},getDisplacementTexture:function(){return this.get("displacementTexture")||this.get("heightTexture")},getDisplacemenScale:function(){var e=this.getDisplacementTexture(),t=this.get("displacementScale");return(!e||e==="none")&&(t=0),t},hasDisplacement:function(){return this.getDisplacemenScale()>0},_displacementChanged:!0,_displacementScale:0,updateDisplacementHash:function(){var e=this.getDisplacementTexture(),t=this.getDisplacemenScale();this._displacementChanged=this._displacementTexture!==e||this._displacementScale!==t,this._displacementTexture=e,this._displacementScale=t},isDisplacementChanged:function(){return this._displacementChanged}});pt(Xr.prototype,_l);pt(Xr.prototype,Ka);pt(Xr.prototype,$a);pt(Xr.prototype,Qa);const px=Xr;var Zp=Math.PI,Xn=Math.sin,Ni=Math.cos,Kp=Math.tan,$p=Math.asin,Jp=Math.atan2,Yr=Zp/180,mx=1e3*60*60*24,vx=2440588,gx=2451545;function _x(e){return e.valueOf()/mx-.5+vx}function xx(e){return _x(e)-gx}var rl=Yr*23.4397;function yx(e,t){return Jp(Xn(e)*Ni(rl)-Kp(t)*Xn(rl),Ni(e))}function Tx(e,t){return $p(Xn(t)*Ni(rl)+Ni(t)*Xn(rl)*Xn(e))}function Sx(e,t,n){return Jp(Xn(e),Ni(e)*Xn(t)-Kp(n)*Ni(t))}function Ex(e,t,n){return $p(Xn(t)*Xn(n)+Ni(t)*Ni(n)*Ni(e))}function Mx(e,t){return Yr*(280.16+360.9856235*e)-t}function wx(e){return Yr*(357.5291+.98560028*e)}function Ax(e){var t=Yr*(1.9148*Xn(e)+.02*Xn(2*e)+3e-4*Xn(3*e)),n=Yr*102.9372;return e+t+n+Zp}function bx(e){var t=wx(e),n=Ax(t);return{dec:Tx(n,0),ra:yx(n,0)}}var Qp={};Qp.getPosition=function(e,t,n){var i=Yr*-n,r=Yr*t,a=xx(e),s=bx(a),o=Mx(a,i)-s.ra;return{azimuth:Sx(o,r,s.dec),altitude:Ex(o,r,s.dec)}};const Cx=Qp,Rx=`@export ecgl.atmosphere.vertex
attribute vec3 position: POSITION;
attribute vec3 normal : NORMAL;
uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;
uniform mat4 normalMatrix : WORLDINVERSETRANSPOSE;

varying vec3 v_Normal;

void main() {
 v_Normal = normalize((normalMatrix * vec4(normal, 0.0)).xyz);
 gl_Position = worldViewProjection * vec4(position, 1.0);
}
@end


@export ecgl.atmosphere.fragment
uniform mat4 viewTranspose: VIEWTRANSPOSE;
uniform float glowPower;
uniform vec3 glowColor;

varying vec3 v_Normal;

void main() {
 float intensity = pow(1.0 - dot(v_Normal, (viewTranspose * vec4(0.0, 0.0, 1.0, 0.0)).xyz), glowPower);
 gl_FragColor = vec4(glowColor, intensity * intensity);
}
@end`;R.Shader.import(dp);R.Shader.import(Rx);const Lx=zs.extend({type:"globe",__ecgl__:!0,_displacementScale:0,init:function(e,t){this.groupGL=new R.Node,this._sphereGeometry=new R.SphereGeometry({widthSegments:200,heightSegments:100,dynamic:!0}),this._overlayGeometry=new R.SphereGeometry({widthSegments:80,heightSegments:40}),this._planeGeometry=new R.PlaneGeometry,this._earthMesh=new R.Mesh({renderNormal:!0}),this._atmosphereMesh=new R.Mesh,this._atmosphereGeometry=new R.SphereGeometry({widthSegments:80,heightSegments:40}),this._atmosphereMaterial=new R.Material({shader:new R.Shader(R.Shader.source("ecgl.atmosphere.vertex"),R.Shader.source("ecgl.atmosphere.fragment")),transparent:!0}),this._atmosphereMesh.geometry=this._atmosphereGeometry,this._atmosphereMesh.material=this._atmosphereMaterial,this._atmosphereMesh.frontFace=R.Mesh.CW,this._lightRoot=new R.Node,this._sceneHelper=new cr,this._sceneHelper.initLight(this._lightRoot),this.groupGL.add(this._atmosphereMesh),this.groupGL.add(this._earthMesh),this._control=new yl({zr:t.getZr()}),this._control.init(),this._layerMeshes={}},render:function(e,t,n){var i=e.coordinateSystem,r=e.get("shading");i.viewGL.add(this._lightRoot),e.get("show")?i.viewGL.add(this.groupGL):i.viewGL.remove(this.groupGL),this._sceneHelper.setScene(i.viewGL.scene),i.viewGL.setPostEffect(e.getModel("postEffect"),n),i.viewGL.setTemporalSuperSampling(e.getModel("temporalSuperSampling"));var a=this._earthMesh;a.geometry=this._sphereGeometry;var s="ecgl."+r;(!a.material||a.material.shader.name!==s)&&(a.material=R.createMaterial(s)),R.setMaterialFromModel(r,a.material,e,n),["roughnessMap","metalnessMap","detailMap","normalMap"].forEach(function(u){var f=a.material.get(u);f&&(f.flipY=!1)}),a.material.set("color",R.parseColor(e.get("baseColor")));var o=i.radius*.99;if(a.scale.set(o,o,o),e.get("atmosphere.show")){a.material.define("both","ATMOSPHERE_ENABLED"),this._atmosphereMesh.invisible=!1,this._atmosphereMaterial.setUniforms({glowPower:e.get("atmosphere.glowPower")||6,glowColor:e.get("atmosphere.color")||"#ffffff"}),a.material.setUniforms({glowPower:e.get("atmosphere.innerGlowPower")||2,glowColor:e.get("atmosphere.color")||"#ffffff"});var l=e.get("atmosphere.offset")||5;this._atmosphereMesh.scale.set(o+l,o+l,o+l)}else a.material.undefine("both","ATMOSPHERE_ENABLED"),this._atmosphereMesh.invisible=!0;var c=a.material.setTextureImage("diffuseMap",e.get("baseTexture"),n,{flipY:!1,anisotropic:8});c&&c.surface&&c.surface.attachToMesh(a);var h=a.material.setTextureImage("bumpMap",e.get("heightTexture"),n,{flipY:!1,anisotropic:8});h&&h.surface&&h.surface.attachToMesh(a),a.material[e.get("postEffect.enable")?"define":"undefine"]("fragment","SRGB_DECODE"),this._updateLight(e,n),this._displaceVertices(e,n),this._updateViewControl(e,n),this._updateLayers(e,n)},afterRender:function(e,t,n,i){var r=i.renderer;this._sceneHelper.updateAmbientCubemap(r,e,n),this._sceneHelper.updateSkybox(r,e,n)},_updateLayers:function(e,t){var n=e.coordinateSystem,i=e.get("layers"),r=n.radius,a=[],s=[],o=[],l=[];mi(i,function(d){var p=new dl(d),g=p.get("type"),v=R.loadTexture(p.get("texture"),t,{flipY:!1,anisotropic:8});if(v.surface&&v.surface.attachToMesh(this._earthMesh),g==="blend"){var m=p.get("blendTo"),y=Ye.firstNotNull(p.get("intensity"),1);m==="emission"?(o.push(v),l.push(y)):(a.push(v),s.push(y))}else{var _=p.get("id"),x=this._layerMeshes[_];x||(x=this._layerMeshes[_]=new R.Mesh({geometry:this._overlayGeometry,castShadow:!1,ignorePicking:!0}));var A=p.get("shading");A==="lambert"?(x.material=x.__lambertMaterial||new R.Material({autoUpdateTextureStatus:!1,shader:R.createShader("ecgl.lambert"),transparent:!0,depthMask:!1}),x.__lambertMaterial=x.material):(x.material=x.__colorMaterial||new R.Material({autoUpdateTextureStatus:!1,shader:R.createShader("ecgl.color"),transparent:!0,depthMask:!1}),x.__colorMaterial=x.material),x.material.enableTexture("diffuseMap");var E=p.get("distance"),w=r+(E??n.radius/100);x.scale.set(w,w,w),r=w;var b=this._blankTexture||(this._blankTexture=R.createBlankTexture("rgba(255, 255, 255, 0)"));x.material.set("diffuseMap",b),R.loadTexture(p.get("texture"),t,{flipY:!1,anisotropic:8},function(M){M.surface&&M.surface.attachToMesh(x),x.material.set("diffuseMap",M),t.getZr().refresh()}),p.get("show")?this.groupGL.add(x):this.groupGL.remove(x)}},this);var c=this._earthMesh.material;c.define("fragment","LAYER_DIFFUSEMAP_COUNT",a.length),c.define("fragment","LAYER_EMISSIVEMAP_COUNT",o.length),c.set("layerDiffuseMap",a),c.set("layerDiffuseIntensity",s),c.set("layerEmissiveMap",o),c.set("layerEmissionIntensity",l);var h=e.getModel("debug.wireframe");if(h.get("show")){c.define("both","WIREFRAME_TRIANGLE");var u=R.parseColor(h.get("lineStyle.color")||"rgba(0,0,0,0.5)"),f=Ye.firstNotNull(h.get("lineStyle.width"),1);c.set("wireframeLineWidth",f),c.set("wireframeLineColor",u)}else c.undefine("both","WIREFRAME_TRIANGLE")},_updateViewControl:function(e,t){var n=e.coordinateSystem,i=e.getModel("viewControl");n.viewGL.camera;var r=this;function a(){return{type:"globeChangeCamera",alpha:s.getAlpha(),beta:s.getBeta(),distance:s.getDistance()-n.radius,center:s.getCenter(),from:r.uid,globeId:e.id}}var s=this._control;s.setViewGL(n.viewGL);var o=i.get("targetCoord"),l,c;o!=null&&(c=o[0]+90,l=o[1]),s.setFromViewControlModel(i,{baseDistance:n.radius,alpha:l,beta:c}),s.off("update"),s.on("update",function(){t.dispatchAction(a())})},_displaceVertices:function(e,t){var n=e.get("displacementQuality"),i=e.get("debug.wireframe.show"),r=e.coordinateSystem;if(!(!e.isDisplacementChanged()&&n===this._displacementQuality&&i===this._showDebugWireframe)){this._displacementQuality=n,this._showDebugWireframe=i;var a=this._sphereGeometry,s={low:100,medium:200,high:400,ultra:800}[n]||200,o=s/2;(a.widthSegments!==s||i)&&(a.widthSegments=s,a.heightSegments=o,a.build()),this._doDisplaceVertices(a,r),i&&a.generateBarycentric()}},_doDisplaceVertices:function(e,t){var n=e.attributes.position.value,i=e.attributes.texcoord0.value,r=e.__originalPosition;(!r||r.length!==n.length)&&(r=new Float32Array(n.length),r.set(n),e.__originalPosition=r);for(var a=t.displacementWidth,s=t.displacementHeight,o=t.displacementData,l=0;l<e.vertexCount;l++){var c=l*3,h=l*2,u=r[c+1],f=r[c+2],d=r[c+3],p=i[h++],g=i[h++],v=Math.round(p*(a-1)),m=Math.round(g*(s-1)),y=m*a+v,_=o?o[y]:0;n[c+1]=u+u*_,n[c+2]=f+f*_,n[c+3]=d+d*_}e.generateVertexNormals(),e.dirty(),e.updateBoundingBox()},_updateLight:function(e,t){var n=this._earthMesh;this._sceneHelper.updateLight(e);var i=this._sceneHelper.mainLight,r=e.get("light.main.time")||new Date,a=Cx.getPosition(bv(r),0,0),s=Math.cos(a.altitude);i.position.y=-s*Math.cos(a.azimuth),i.position.x=Math.sin(a.altitude),i.position.z=s*Math.sin(a.azimuth),i.lookAt(n.getWorldPosition())},dispose:function(e,t){this.groupGL.removeAll(),this._control.dispose()}});var Px=Ot.vec3;function al(e){this.radius=e,this.viewGL=null,this.altitudeAxis,this.displacementData=null,this.displacementWidth,this.displacementHeight}al.prototype={constructor:al,dimensions:["lng","lat","alt"],type:"globe",containPoint:function(){},setDisplacementData:function(e,t,n){this.displacementData=e,this.displacementWidth=t,this.displacementHeight=n},_getDisplacementScale:function(e,t){var n=(e+180)/360*(this.displacementWidth-1),i=(90-t)/180*(this.displacementHeight-1),r=Math.round(n)+Math.round(i)*this.displacementWidth;return this.displacementData[r]},dataToPoint:function(e,t){var n=e[0],i=e[1],r=e[2]||0,a=this.radius;this.displacementData&&(a*=1+this._getDisplacementScale(n,i)),this.altitudeAxis&&(a+=this.altitudeAxis.dataToCoord(r)),n=n*Math.PI/180,i=i*Math.PI/180;var s=Math.cos(i)*a;return t=t||[],t[0]=-s*Math.cos(n+Math.PI),t[1]=Math.sin(i)*a,t[2]=s*Math.sin(n+Math.PI),t},pointToData:function(e,t){var n=e[0],i=e[1],r=e[2],a=Px.len(e);n/=a,i/=a,r/=a;var s=Math.asin(i),o=Math.atan2(r,-n);o<0&&(o=Math.PI*2+o);var l=s*180/Math.PI,c=o*180/Math.PI-180;return t=t||[],t[0]=c,t[1]=l,t[2]=a-this.radius,this.altitudeAxis&&(t[2]=this.altitudeAxis.coordToData(t[2])),t}};function Dx(e,t){var n=document.createElement("canvas"),i=n.getContext("2d"),r=e.width,a=e.height;n.width=r,n.height=a,i.drawImage(e,0,0,r,a);for(var s=i.getImageData(0,0,r,a).data,o=new Float32Array(s.length/4),l=0;l<s.length/4;l++){var c=s[l*4];o[l]=c/255*t}return{data:o,width:r,height:a}}function Nx(e,t){var n=e.getBoxLayoutParams(),i=ml(n,{width:t.getWidth(),height:t.getHeight()});i.y=t.getHeight()-i.y-i.height,this.viewGL.setViewport(i.x,i.y,i.width,i.height,t.getDevicePixelRatio()),this.radius=e.get("globeRadius");var r=e.get("globeOuterRadius");this.altitudeAxis&&this.altitudeAxis.setExtent(0,r-this.radius)}function Ix(e,t){var n=[1/0,-1/0];if(e.eachSeries(function(r){if(r.coordinateSystem===this){var a=r.getData(),s=r.coordDimToDataDim("alt"),o=s&&s[0];if(o){var l=a.getDataExtent(o,!0);n[0]=Math.min(n[0],l[0]),n[1]=Math.max(n[1],l[1])}}},this),n&&isFinite(n[1]-n[0])){var i=hh(n,{type:"value",min:"dataMin",max:"dataMax"});this.altitudeAxis=new pl("altitude",i),this.resize(this.model,t)}}var Ox={dimensions:al.prototype.dimensions,create:function(e,t){var n=[];return e.eachComponent("globe",function(i){i.__viewGL=i.__viewGL||new mt;var r=new al;r.viewGL=i.__viewGL,i.coordinateSystem=r,r.model=i,n.push(r),r.resize=Nx,r.resize(i,t),r.update=Ix}),e.eachSeries(function(i){if(i.get("coordinateSystem")==="globe"){var r=i.getReferringComponents("globe").models[0];if(r||(r=e.getComponent("globe")),!r)throw new Error('globe "'+Ye.firstNotNull(i.get("globe3DIndex"),i.get("globe3DId"),0)+'" not found');var a=r.coordinateSystem;i.coordinateSystem=a}}),e.eachComponent("globe",function(i,r){var a=i.coordinateSystem,s=i.getDisplacementTexture(),o=i.getDisplacemenScale();if(i.isDisplacementChanged()){if(i.hasDisplacement()){var l=!0;R.loadTexture(s,t,function(c){var h=c.image,u=Dx(h,o);i.setDisplacementData(u.data,u.width,u.height),l||t.dispatchAction({type:"globeUpdateDisplacment"})}),l=!1}else a.setDisplacementData(null,0,0);a.setDisplacementData(i.displacementData,i.displacementWidth,i.displacementHeight)}}),n}};const Ux=Ox;function Fx(e){e.registerComponentModel(px),e.registerComponentView(Lx),e.registerCoordinateSystem("globe",Ux),e.registerAction({type:"globeChangeCamera",event:"globecamerachanged",update:"series:updateCamera"},function(t,n){n.eachComponent({mainType:"globe",query:t},function(i){i.setView(t)})}),e.registerAction({type:"globeUpdateDisplacment",event:"globedisplacementupdated",update:"update"},function(t,n){})}mn(Fx);var ju=["zoom","center","pitch","bearing"],wh=ja.extend({type:"mapbox3D",layoutMode:"box",coordinateSystem:null,defaultOption:{zlevel:-10,style:"mapbox://styles/mapbox/light-v9",center:[0,0],zoom:0,pitch:0,bearing:0,light:{main:{alpha:20,beta:30}},altitudeScale:1,boxHeight:"auto"},getMapboxCameraOption:function(){var e=this;return ju.reduce(function(t,n){return t[n]=e.get(n),t},{})},setMapboxCameraOption:function(e){e!=null&&ju.forEach(function(t){e[t]!=null&&(this.option[t]=e[t])},this)},getMapbox:function(){return this._mapbox},setMapbox:function(e){this._mapbox=e}});pt(wh.prototype,Ka);pt(wh.prototype,$a);const Bx=wh;function mr(e,t){if(this.id=e,this.zr=t,this.dom=document.createElement("div"),this.dom.style.cssText="position:absolute;left:0;right:0;top:0;bottom:0;",!mapboxgl)throw new Error("Mapbox GL library must be included. See https://www.mapbox.com/mapbox-gl-js/api/");this._mapbox=new mapboxgl.Map({container:this.dom}),this._initEvents()}mr.prototype.setUnpainted=function(){};mr.prototype.resize=function(){this._mapbox.resize()};mr.prototype.getMapbox=function(){return this._mapbox};mr.prototype.clear=function(){};mr.prototype.refresh=function(){this._mapbox.resize()};var em=["mousedown","mouseup","click","dblclick","mousemove","mousewheel","wheel","touchstart","touchend","touchmove","touchcancel"];mr.prototype._initEvents=function(){var e=this._mapbox.getCanvasContainer();this._handlers=this._handlers||{contextmenu:function(t){return t.preventDefault(),!1}},em.forEach(function(t){this._handlers[t]=function(n){var i={};for(var r in n)i[r]=n[r];i.bubbles=!1;var a=new n.constructor(n.type,i);e.dispatchEvent(a)},this.zr.dom.addEventListener(t,this._handlers[t])},this),this.zr.dom.addEventListener("contextmenu",this._handlers.contextmenu)};mr.prototype.dispose=function(){em.forEach(function(e){this.zr.dom.removeEventListener(e,this._handlers[e])},this)};const tm=`
@export ecgl.displayShadow.vertex

@import ecgl.common.transformUniforms

@import ecgl.common.uv.header

@import ecgl.common.attributes

varying vec3 v_WorldPosition;

varying vec3 v_Normal;

void main()
{
 @import ecgl.common.uv.main
 v_Normal = normalize((worldInverseTranspose * vec4(normal, 0.0)).xyz);

 v_WorldPosition = (world * vec4(position, 1.0)).xyz;
 gl_Position = worldViewProjection * vec4(position, 1.0);
}

@end


@export ecgl.displayShadow.fragment

@import ecgl.common.uv.fragmentHeader

varying vec3 v_Normal;
varying vec3 v_WorldPosition;

uniform float roughness: 0.2;

#ifdef DIRECTIONAL_LIGHT_COUNT
@import clay.header.directional_light
#endif

@import ecgl.common.ssaoMap.header

@import clay.plugin.compute_shadow_map

void main()
{
 float shadow = 1.0;

 @import ecgl.common.ssaoMap.main

#if defined(DIRECTIONAL_LIGHT_COUNT) && defined(DIRECTIONAL_LIGHT_SHADOWMAP_COUNT)
 float shadowContribsDir[DIRECTIONAL_LIGHT_COUNT];
 if(shadowEnabled)
 {
 computeShadowOfDirectionalLights(v_WorldPosition, shadowContribsDir);
 }
 for (int i = 0; i < DIRECTIONAL_LIGHT_COUNT; i++) {
 shadow = min(shadow, shadowContribsDir[i] * 0.5 + 0.5);
 }
#endif

 shadow *= 0.5 + ao * 0.5;
 shadow = clamp(shadow, 0.0, 1.0);

 gl_FragColor = vec4(vec3(0.0), 1.0 - shadow);
}

@end`;R.Shader.import(tm);const zx=zs.extend({type:"mapbox3D",__ecgl__:!0,init:function(e,t){var n=t.getZr();this._zrLayer=new mr("mapbox3D",n),n.painter.insertLayer(-1e3,this._zrLayer),this._lightRoot=new R.Node,this._sceneHelper=new cr(this._lightRoot),this._sceneHelper.initLight(this._lightRoot);var i=this._zrLayer.getMapbox(),r=this._dispatchInteractAction.bind(this,t,i);["zoom","rotate","drag","pitch","rotate","move"].forEach(function(a){i.on(a,r)}),this._groundMesh=new R.Mesh({geometry:new R.PlaneGeometry,material:new R.Material({shader:new R.Shader({vertex:R.Shader.source("ecgl.displayShadow.vertex"),fragment:R.Shader.source("ecgl.displayShadow.fragment")}),depthMask:!1}),renderOrder:-100,culling:!1,castShadow:!1,$ignorePicking:!0,renderNormal:!0})},render:function(e,t,n){var i=this._zrLayer.getMapbox(),r=e.get("style"),a=JSON.stringify(r);a!==this._oldStyleStr&&r&&i.setStyle(r),this._oldStyleStr=a,i.setCenter(e.get("center")),i.setZoom(e.get("zoom")),i.setPitch(e.get("pitch")),i.setBearing(e.get("bearing")),e.setMapbox(i);var s=e.coordinateSystem;s.viewGL.scene.add(this._lightRoot),s.viewGL.add(this._groundMesh),this._updateGroundMesh(),this._sceneHelper.setScene(s.viewGL.scene),this._sceneHelper.updateLight(e),s.viewGL.setPostEffect(e.getModel("postEffect"),n),s.viewGL.setTemporalSuperSampling(e.getModel("temporalSuperSampling")),this._mapbox3DModel=e},afterRender:function(e,t,n,i){var r=i.renderer;this._sceneHelper.updateAmbientCubemap(r,e,n),this._sceneHelper.updateSkybox(r,e,n),e.coordinateSystem.viewGL.scene.traverse(function(a){a.material&&(a.material.define("fragment","NORMAL_UP_AXIS",2),a.material.define("fragment","NORMAL_FRONT_AXIS",1))})},updateCamera:function(e,t,n,i){e.coordinateSystem.setCameraOption(i),this._updateGroundMesh(),n.getZr().refresh()},_dispatchInteractAction:function(e,t,n){e.dispatchAction({type:"mapbox3DChangeCamera",pitch:t.getPitch(),zoom:t.getZoom(),center:t.getCenter().toArray(),bearing:t.getBearing(),mapbox3DId:this._mapbox3DModel&&this._mapbox3DModel.id})},_updateGroundMesh:function(){if(this._mapbox3DModel){var e=this._mapbox3DModel.coordinateSystem,t=e.dataToPoint(e.center);this._groundMesh.position.set(t[0],t[1],-.001);var n=new R.Plane(new R.Vector3(0,0,1),0),i=e.viewGL.camera.castRay(new R.Vector2(-1,-1)),r=e.viewGL.camera.castRay(new R.Vector2(1,1)),a=i.intersectPlane(n),s=r.intersectPlane(n),o=a.dist(s)/e.viewGL.rootNode.scale.x;this._groundMesh.scale.set(o,o,1)}},dispose:function(e,t){this._zrLayer&&this._zrLayer.dispose(),t.getZr().painter.delLayer(-1e3)}});var ki=Ot.mat4,us=512,tc=.6435011087932844,wn=Math.PI,sa=1/10;function ka(){this.width=0,this.height=0,this.altitudeScale=1,this.boxHeight="auto",this.altitudeExtent,this.bearing=0,this.pitch=0,this.center=[0,0],this._origin,this.zoom=0,this._initialZoom,this.maxPitch=60,this.zoomOffset=0}ka.prototype={constructor:ka,dimensions:["lng","lat","alt"],containPoint:function(){},setCameraOption:function(e){this.bearing=e.bearing,this.pitch=e.pitch,this.center=e.center,this.zoom=e.zoom,this._origin||(this._origin=this.projectOnTileWithScale(this.center,us)),this._initialZoom==null&&(this._initialZoom=this.zoom),this.updateTransform()},updateTransform:function(){if(this.height){var e=.5/Math.tan(tc/2)*this.height*sa,t=Math.max(Math.min(this.pitch,this.maxPitch),0)/180*Math.PI,n=tc/2,i=Math.PI/2+t,r=Math.sin(n)*e/Math.sin(Math.PI-i-n),a=Math.cos(Math.PI/2-t)*r+e,s=a*1.1;this.pitch>50&&(s=1e3);var o=[];ki.perspective(o,tc,this.width/this.height,1,s),this.viewGL.camera.projectionMatrix.setArray(o),this.viewGL.camera.decomposeProjectionMatrix();var o=ki.identity([]),l=this.dataToPoint(this.center);ki.scale(o,o,[1,-1,1]),ki.translate(o,o,[0,0,-e]),ki.rotateX(o,o,t),ki.rotateZ(o,o,-this.bearing/180*Math.PI),ki.translate(o,o,[-l[0]*this.getScale()*sa,-l[1]*this.getScale()*sa,0]),this.viewGL.camera.viewMatrix.array=o;var c=[];ki.invert(c,o),this.viewGL.camera.worldTransform.array=c,this.viewGL.camera.decomposeWorldTransform();var h=us*this.getScale(),u;if(this.altitudeExtent&&!isNaN(this.boxHeight)){var f=this.altitudeExtent[1]-this.altitudeExtent[0];u=this.boxHeight/f*this.getScale()/Math.pow(2,this._initialZoom-this.zoomOffset)}else u=h/(2*Math.PI*6378e3*Math.abs(Math.cos(this.center[1]*(Math.PI/180))))*this.altitudeScale*sa;this.viewGL.rootNode.scale.set(this.getScale()*sa,this.getScale()*sa,u)}},getScale:function(){return Math.pow(2,this.zoom-this.zoomOffset)},projectOnTile:function(e,t){return this.projectOnTileWithScale(e,this.getScale()*us,t)},projectOnTileWithScale:function(e,t,n){var i=e[0],r=e[1],a=i*wn/180,s=r*wn/180,o=t*(a+wn)/(2*wn),l=t*(wn-Math.log(Math.tan(wn/4+s*.5)))/(2*wn);return n=n||[],n[0]=o,n[1]=l,n},unprojectFromTile:function(e,t){return this.unprojectOnTileWithScale(e,this.getScale()*us,t)},unprojectOnTileWithScale:function(e,t,n){var i=e[0],r=e[1],a=i/t*(2*wn)-wn,s=2*(Math.atan(Math.exp(wn-r/t*(2*wn)))-wn/4);return n=n||[],n[0]=a*180/wn,n[1]=s*180/wn,n},dataToPoint:function(e,t){return t=this.projectOnTileWithScale(e,us,t),t[0]-=this._origin[0],t[1]-=this._origin[1],t[2]=isNaN(e[2])?0:e[2],isNaN(e[2])||(t[2]=e[2],this.altitudeExtent&&(t[2]-=this.altitudeExtent[0])),t}};function Is(){ka.apply(this,arguments)}Is.prototype=new ka;Is.prototype.constructor=Is;Is.prototype.type="mapbox3D";function nm(e,t,n){function i(a,s){var o=s.getWidth(),l=s.getHeight(),c=s.getDevicePixelRatio();this.viewGL.setViewport(0,0,o,l,c),this.width=o,this.height=l,this.altitudeScale=a.get("altitudeScale"),this.boxHeight=a.get("boxHeight")}function r(a,s){if(this.model.get("boxHeight")!=="auto"){var o=[1/0,-1/0];a.eachSeries(function(l){if(l.coordinateSystem===this){var c=l.getData(),h=l.coordDimToDataDim("alt")[0];if(h){var u=c.getDataExtent(h,!0);o[0]=Math.min(o[0],u[0]),o[1]=Math.max(o[1],u[1])}}},this),o&&isFinite(o[1]-o[0])&&(this.altitudeExtent=o)}}return{dimensions:t.prototype.dimensions,create:function(a,s){var o=[];return a.eachComponent(e,function(l){var c=l.__viewGL;c||(c=l.__viewGL=new mt,c.setRootNode(new R.Node));var h=new t;h.viewGL=l.__viewGL,h.resize=i,h.resize(l,s),o.push(h),l.coordinateSystem=h,h.model=l,h.update=r}),a.eachSeries(function(l){if(l.get("coordinateSystem")===e){var c=l.getReferringComponents(e).models[0];if(c||(c=a.getComponent(e)),!c)throw new Error(e+' "'+Ye.firstNotNull(l.get(e+"Index"),l.get(e+"Id"),0)+'" not found');l.coordinateSystem=c.coordinateSystem}}),n&&n(o,a,s),o}}}var Gx=nm("mapbox3D",Is,function(e){e.forEach(function(t){t.setCameraOption(t.model.getMapboxCameraOption())})});const Hx=Gx;function Vx(e){e.registerComponentModel(Bx),e.registerComponentView(zx),e.registerCoordinateSystem("mapbox3D",Hx),e.registerAction({type:"mapbox3DChangeCamera",event:"mapbox3dcamerachanged",update:"mapbox3D:updateCamera"},function(t,n){n.eachComponent({mainType:"mapbox3D",query:t},function(i){i.setMapboxCameraOption(t)})})}mn(Vx);var Zu=["zoom","center","pitch","bearing"],Ah=ja.extend({type:"maptalks3D",layoutMode:"box",coordinateSystem:null,defaultOption:{zlevel:-10,urlTemplate:"http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png",attribution:'&copy; <a href="http://osm.org">OpenStreetMap</a> contributors, &copy; <a href="https://carto.com/">CARTO</a>',center:[0,0],zoom:0,pitch:0,bearing:0,light:{main:{alpha:20,beta:30}},altitudeScale:1,boxHeight:"auto"},getMaptalksCameraOption:function(){var e=this;return Zu.reduce(function(t,n){return t[n]=e.get(n),t},{})},setMaptalksCameraOption:function(e){e!=null&&Zu.forEach(function(t){e[t]!=null&&(this.option[t]=e[t])},this)},getMaptalks:function(){return this._maptalks},setMaptalks:function(e){this._maptalks=e}});pt(Ah.prototype,Ka);pt(Ah.prototype,$a);const kx=Ah;function vr(e,t,n,i){if(this.id=e,this.zr=t,this.dom=document.createElement("div"),this.dom.style.cssText="position:absolute;left:0;right:0;top:0;bottom:0;",!maptalks)throw new Error("Maptalks library must be included. See https://maptalks.org");this._maptalks=new maptalks.Map(this.dom,{center:n,zoom:i,doubleClickZoom:!1,fog:!1}),this._initEvents()}vr.prototype.setUnpainted=function(){};vr.prototype.resize=function(){this._maptalks.checkSize()};vr.prototype.getMaptalks=function(){return this._maptalks};vr.prototype.clear=function(){};vr.prototype.refresh=function(){this._maptalks.checkSize()};var im=["mousedown","mouseup","click","dblclick","mousemove","mousewheel","DOMMouseScroll","touchstart","touchend","touchmove","touchcancel"];vr.prototype._initEvents=function(){var e=this.dom;this._handlers=this._handlers||{contextmenu:function(t){return t.preventDefault(),!1}},im.forEach(function(t){this._handlers[t]=function(n){var i={};for(var r in n)i[r]=n[r];i.bubbles=!1;var a=new n.constructor(n.type,i);t==="mousewheel"||t==="DOMMouseScroll"?e.dispatchEvent(a):e.firstElementChild.dispatchEvent(a)},this.zr.dom.addEventListener(t,this._handlers[t])},this),this.zr.dom.addEventListener("contextmenu",this._handlers.contextmenu)};vr.prototype.dispose=function(){im.forEach(function(e){this.zr.dom.removeEventListener(e,this._handlers[e])},this),this._maptalks.remove()};R.Shader.import(tm);const Wx=zs.extend({type:"maptalks3D",__ecgl__:!0,init:function(e,t){this._groundMesh=new R.Mesh({geometry:new R.PlaneGeometry,material:new R.Material({shader:new R.Shader({vertex:R.Shader.source("ecgl.displayShadow.vertex"),fragment:R.Shader.source("ecgl.displayShadow.fragment")}),depthMask:!1}),renderOrder:-100,culling:!1,castShadow:!1,$ignorePicking:!0,renderNormal:!0})},_initMaptalksLayer:function(e,t){var n=t.getZr();this._zrLayer=new vr("maptalks3D",n,e.get("center"),e.get("zoom")),n.painter.insertLayer(-1e3,this._zrLayer),this._lightRoot=new R.Node,this._sceneHelper=new cr(this._lightRoot),this._sceneHelper.initLight(this._lightRoot);var i=this._zrLayer.getMaptalks(),r=this._dispatchInteractAction.bind(this,t,i);["zoomend","zooming","zoomstart","dragrotating","pitch","pitchend","movestart","moving","moveend","resize","touchstart","touchmove","touchend","animating"].forEach(function(a){i.on(a,r)})},render:function(e,t,n){this._zrLayer||this._initMaptalksLayer(e,n);var i=this._zrLayer.getMaptalks(),r=e.get("urlTemplate"),a=i.getBaseLayer();r!==this._oldUrlTemplate&&(a?a.setOptions({urlTemplate:r,attribution:e.get("attribution")}):(a=new maptalks.TileLayer("maptalks-echarts-gl-baselayer",{urlTemplate:r,subdomains:["a","b","c"],attribution:e.get("attribution")}),i.setBaseLayer(a))),this._oldUrlTemplate=r,i.setCenter(e.get("center")),i.setZoom(e.get("zoom"),{animation:!1}),i.setPitch(e.get("pitch")),i.setBearing(e.get("bearing")),e.setMaptalks(i);var s=e.coordinateSystem;s.viewGL.scene.add(this._lightRoot),s.viewGL.add(this._groundMesh),this._updateGroundMesh(),this._sceneHelper.setScene(s.viewGL.scene),this._sceneHelper.updateLight(e),s.viewGL.setPostEffect(e.getModel("postEffect"),n),s.viewGL.setTemporalSuperSampling(e.getModel("temporalSuperSampling")),this._maptalks3DModel=e},afterRender:function(e,t,n,i){var r=i.renderer;this._sceneHelper.updateAmbientCubemap(r,e,n),this._sceneHelper.updateSkybox(r,e,n),e.coordinateSystem.viewGL.scene.traverse(function(a){a.material&&(a.material.define("fragment","NORMAL_UP_AXIS",2),a.material.define("fragment","NORMAL_FRONT_AXIS",1))})},updateCamera:function(e,t,n,i){e.coordinateSystem.setCameraOption(i),this._updateGroundMesh(),n.getZr().refresh()},_dispatchInteractAction:function(e,t,n){e.dispatchAction({type:"maptalks3DChangeCamera",pitch:t.getPitch(),zoom:Yx(t.getResolution())+1,center:t.getCenter().toArray(),bearing:t.getBearing(),maptalks3DId:this._maptalks3DModel&&this._maptalks3DModel.id})},_updateGroundMesh:function(){if(this._maptalks3DModel){var e=this._maptalks3DModel.coordinateSystem,t=e.dataToPoint(e.center);this._groundMesh.position.set(t[0],t[1],-.001);var n=new R.Plane(new R.Vector3(0,0,1),0),i=e.viewGL.camera.castRay(new R.Vector2(-1,-1)),r=e.viewGL.camera.castRay(new R.Vector2(1,1)),a=i.intersectPlane(n),s=r.intersectPlane(n),o=a.dist(s)/e.viewGL.rootNode.scale.x;this._groundMesh.scale.set(o,o,1)}},dispose:function(e,t){this._zrLayer&&this._zrLayer.dispose(),t.getZr().painter.delLayer(-1e3)}}),Xx=2*6378137*Math.PI/(256*Math.pow(2,20));function Yx(e){return 19-Math.log(e/Xx)/Math.LN2}function Os(){ka.apply(this,arguments),this.maxPitch=85,this.zoomOffset=1}Os.prototype=new ka;Os.prototype.constructor=Os;Os.prototype.type="maptalks3D";var qx=nm("maptalks3D",Os,function(e){e.forEach(function(t){t.setCameraOption(t.model.getMaptalksCameraOption())})});const jx=qx;function Zx(e){e.registerComponentModel(kx),e.registerComponentView(Wx),e.registerCoordinateSystem("maptalks3D",jx),e.registerAction({type:"maptalks3DChangeCamera",event:"maptalks3dcamerachanged",update:"maptalks3D:updateCamera"},function(t,n){n.eachComponent({mainType:"maptalks3D",query:t},function(i){i.setMaptalksCameraOption(t)})})}mn(Zx);var Kx=Ot.vec3,$x=fh.isDimensionStacked;function Jx(e){var t=e[0],n=e[1];return!(t>0&&n>0||t<0&&n<0)}function Qx(e,t){var n=e.getData(),i=e.get("barSize");if(i==null){var r=t.size,a,s,o=t.getAxis("x"),l=t.getAxis("y");o.type==="category"?a=o.getBandWidth()*.7:a=Math.round(r[0]/Math.sqrt(n.count()))*.6,l.type==="category"?s=l.getBandWidth()*.7:s=Math.round(r[1]/Math.sqrt(n.count()))*.6,i=[a,s]}else pi(i)||(i=[i,i]);var c=t.getAxis("z").scale.getExtent(),h=Jx(c),u=["x","y","z"].map(function(p){return e.coordDimToDataDim(p)[0]}),f=$x(n,u[2]),d=f?n.getCalculationInfo("stackResultDimension"):u[2];n.each(u,function(p,g,v,m){var y=n.get(d,m),_=f?y-v:h?0:c[0],x=t.dataToPoint([p,g,_]),A=t.dataToPoint([p,g,y]),E=Kx.dist(x,A),w=[0,A[1]<x[1]?-1:1,0];Math.abs(E)===0&&(E=.1);var b=[i[0],E,i[1]];n.setItemLayout(m,[x,w,b])}),n.setLayout("orient",[1,0,0])}function bh(e,t,n){for(var i=e.getDataExtent(t),r=e.getDataExtent(n),a=i[1]-i[0]||i[0],s=r[1]-r[0]||r[0],o=50,l=new Uint8Array(o*o),c=0;c<e.count();c++){var h=e.get(t,c),u=e.get(n,c),f=Math.floor((h-i[0])/a*(o-1)),d=Math.floor((u-r[0])/s*(o-1)),p=d*o+f;l[p]=l[p]||1}for(var g=0,c=0;c<l.length;c++)l[c]&&g++;return g/l.length}var Ku=Ot.vec3,ey=fh.isDimensionStacked;function ty(e,t){var n=e.getData(),i=e.get("minHeight")||0,r=e.get("barSize"),a=["lng","lat","alt"].map(function(c){return e.coordDimToDataDim(c)[0]});if(r==null){var s=t.radius*Math.PI,o=bh(n,a[0],a[1]);r=[s/Math.sqrt(n.count()/o),s/Math.sqrt(n.count()/o)]}else pi(r)||(r=[r,r]);var l=Ch(n,a);n.each(a,function(c,h,u,f){var d=n.get(l.dimension,f),p=l.isStacked?d-u:t.altitudeAxis.scale.getExtent()[0],g=Math.max(t.altitudeAxis.dataToCoord(u),i),v=t.dataToPoint([c,h,p]),m=t.dataToPoint([c,h,d]),y=Ku.sub([],m,v);Ku.normalize(y,y);var _=[r[0],g,r[1]];n.setItemLayout(f,[v,y,_])}),n.setLayout("orient",$.UP.array)}function ny(e,t){var n=e.getData(),i=e.get("barSize"),r=e.get("minHeight")||0,a=["lng","lat","alt"].map(function(h){return e.coordDimToDataDim(h)[0]});if(i==null){var s=Math.min(t.size[0],t.size[2]),o=bh(n,a[0],a[1]);i=[s/Math.sqrt(n.count()/o),s/Math.sqrt(n.count()/o)]}else pi(i)||(i=[i,i]);var l=[0,1,0],c=Ch(n,a);n.each(a,function(h,u,f,d){var p=n.get(c.dimension,d),g=c.isStacked?p-f:t.altitudeAxis.scale.getExtent()[0],v=Math.max(t.altitudeAxis.dataToCoord(f),r),m=t.dataToPoint([h,u,g]),y=[i[0],v,i[1]];n.setItemLayout(d,[m,l,y])}),n.setLayout("orient",[1,0,0])}function iy(e,t){var n=e.getData(),i=e.coordDimToDataDim("lng")[0],r=e.coordDimToDataDim("lat")[0],a=e.coordDimToDataDim("alt")[0],s=e.get("barSize"),o=e.get("minHeight")||0;if(s==null){var l=n.getDataExtent(i),c=n.getDataExtent(r),h=t.dataToPoint([l[0],c[0]]),u=t.dataToPoint([l[1],c[1]]),f=Math.min(Math.abs(h[0]-u[0]),Math.abs(h[1]-u[1]))||1,d=bh(n,i,r);s=[f/Math.sqrt(n.count()/d),f/Math.sqrt(n.count()/d)]}else pi(s)||(s=[s,s]),s[0]/=t.getScale()/16,s[1]/=t.getScale()/16;var p=[0,0,1],g=[i,r,a],v=Ch(n,g);n.each(g,function(m,y,_,x){var A=n.get(v.dimension,x),E=v.isStacked?A-_:0,w=t.dataToPoint([m,y,E]),b=t.dataToPoint([m,y,A]),M=Math.max(b[2]-w[2],o),T=[s[0],M,s[1]];n.setItemLayout(x,[w,p,T])}),n.setLayout("orient",[1,0,0])}function Ch(e,t){var n=ey(e,t[2]);return{dimension:n?e.getCalculationInfo("stackResultDimension"):t[2],isStacked:n}}function ry(e){e.registerLayout(function(t,n){t.eachSeriesByType("bar3D",function(i){var r=i.coordinateSystem,a=r&&r.type;a==="globe"?ty(i,r):a==="cartesian3D"?Qx(i,r):a==="geo3D"?ny(i,r):(a==="mapbox3D"||a==="maptalks3D")&&iy(i,r)})})}var gr={};gr.getFormattedLabel=function(e,t,n,i,r){n=n||"normal";var a=e.getData(i),s=a.getItemModel(t),o=e.getDataParams(t,i);r!=null&&o.value instanceof Array&&(o.value=o.value[r]);var l=s.get(n==="normal"?["label","formatter"]:["emphasis","label","formatter"]);l==null&&(l=s.get(["label","formatter"]));var c;return typeof l=="function"?(o.status=n,c=l(o)):typeof l=="string"&&(c=Cv(l,o)),c};gr.normalizeToArray=function(e){return e instanceof Array?e:e==null?[]:[e]};function ay(e,t){var n=[];return mi(e.dimensions,function(i){var r=e.getDimensionInfo(i),a=r.otherDims,s=a[t];s!=null&&s!==!1&&(n[s]=r.name)}),n}function Ws(e,t,n){function i(u){var f=[],d=ay(r,"tooltip");d.length?mi(d,function(g){p(r.get(g,t),g)}):mi(u,p);function p(g,v){var m=r.getDimensionInfo(v);if(!(!m||m.otherDims.tooltip===!1)){var y=m.type,_="- "+(m.tooltipName||m.name)+": "+(y==="ordinal"?g+"":y==="time"?n?"":Pv("yyyy/MM/dd hh:mm:ss",g):jh(g));_&&f.push(ba(_))}}return"<br/>"+f.join("<br/>")}var r=e.getData(),a=e.getRawValue(t),s=pi(a)?i(a):ba(jh(a)),o=r.getName(t),l=Zt(r,t);Rv(l)&&l.colorStops&&(l=(l.colorStops[0]||{}).color),l=l||"transparent";var c=Lv(l),h=e.name;return h==="\0-"&&(h=""),h=h?ba(h)+(n?": ":"<br/>"):"",n?c+h+s:h+c+(o?ba(o)+": "+s:s)}function El(e,t,n){n=n||e.getSource();var i=t||Zd(e.get("coordinateSystem"))||["x","y","z"],r=Gs(n,{dimensionsDefine:n.dimensionsDefine||e.get("dimensions"),encodeDefine:n.encodeDefine||e.get("encode"),coordDimensions:i.map(function(o){var l=e.getReferringComponents(o+"Axis3D").models[0];return{type:l&&l.get("type")==="category"?"ordinal":"float",name:o}})});e.get("coordinateSystem")==="cartesian3D"&&r.forEach(function(o){if(i.indexOf(o.coordDim)>=0){var l=e.getReferringComponents(o.coordDim+"Axis3D").models[0];l&&l.get("type")==="category"&&(o.ordinalMeta=l.getOrdinalMeta())}});var a=fh.enableDataStack(e,r,{byIndex:!0,stackedCoordDimension:"z"}),s=new vi(r,e);return s.setCalculationInfo(a),s.initData(n),s}var rm=ei.extend({type:"series.bar3D",dependencies:["globe"],visualStyleAccessPathvisu:"itemStyle",getInitialData:function(e,t){return El(this)},getFormattedLabel:function(e,t,n,i){var r=gr.getFormattedLabel(this,e,t,n,i);return r==null&&(r=this.getData().get("z",e)),r},formatTooltip:function(e){return Ws(this,e)},defaultOption:{coordinateSystem:"cartesian3D",globeIndex:0,grid3DIndex:0,zlevel:-10,bevelSize:0,bevelSmoothness:2,onGridPlane:"xy",shading:"color",minHeight:0,itemStyle:{opacity:1},label:{show:!1,distance:2,textStyle:{fontSize:14,color:"#000",backgroundColor:"rgba(255,255,255,0.7)",padding:3,borderRadius:3}},emphasis:{label:{show:!0}},animationDurationUpdate:500}});pt(rm.prototype,Qa);const sy=rm;var Rt=Ot.vec3,oy=Ot.mat3,Rh=je.extend(function(){return{attributes:{position:new je.Attribute("position","float",3,"POSITION"),normal:new je.Attribute("normal","float",3,"NORMAL"),color:new je.Attribute("color","float",4,"COLOR"),prevPosition:new je.Attribute("prevPosition","float",3),prevNormal:new je.Attribute("prevNormal","float",3)},dynamic:!0,enableNormal:!1,bevelSize:1,bevelSegments:0,_dataIndices:null,_vertexOffset:0,_triangleOffset:0}},{resetOffset:function(){this._vertexOffset=0,this._triangleOffset=0},setBarCount:function(e){var t=this.enableNormal,n=this.getBarVertexCount()*e,i=this.getBarTriangleCount()*e;this.vertexCount!==n&&(this.attributes.position.init(n),t?this.attributes.normal.init(n):this.attributes.normal.value=null,this.attributes.color.init(n)),this.triangleCount!==i&&(this.indices=n>65535?new Uint32Array(i*3):new Uint16Array(i*3),this._dataIndices=new Uint32Array(n))},getBarVertexCount:function(){var e=this.bevelSize>0?this.bevelSegments:0;return e>0?this._getBevelBarVertexCount(e):this.enableNormal?24:8},getBarTriangleCount:function(){var e=this.bevelSize>0?this.bevelSegments:0;return e>0?this._getBevelBarTriangleCount(e):12},_getBevelBarVertexCount:function(e){return(e+1)*4*(e+1)*2},_getBevelBarTriangleCount:function(e){var t=e*4+3,n=e*2+1;return(t+1)*n*2+4},setColor:function(e,t){for(var n=this.getBarVertexCount(),i=n*e,r=n*(e+1),a=i;a<r;a++)this.attributes.color.set(a,t);this.dirtyAttribute("color")},getDataIndexOfVertex:function(e){return this._dataIndices?this._dataIndices[e]:null},addBar:function(){for(var e=Rt.create,t=Rt.scaleAndAdd,n=e(),i=e(),r=e(),a=e(),s=e(),o=e(),l=e(),c=[],h=[],u=0;u<8;u++)c[u]=e();for(var f=[[0,1,5,4],[2,3,7,6],[4,5,6,7],[3,2,1,0],[0,4,7,3],[1,2,6,5]],d=[0,1,2,0,2,3],p=[],u=0;u<f.length;u++)for(var g=f[u],v=0;v<2;v++){for(var m=[],y=0;y<3;y++)m.push(g[d[v*3+y]]);p.push(m)}return function(_,x,A,E,w,b){var M=this._vertexOffset;if(this.bevelSize>0&&this.bevelSegments>0)this._addBevelBar(_,x,A,E,this.bevelSize,this.bevelSegments,w);else{Rt.copy(r,x),Rt.normalize(r,r),Rt.cross(a,A,r),Rt.normalize(a,a),Rt.cross(i,r,a),Rt.normalize(a,a),Rt.negate(s,i),Rt.negate(o,r),Rt.negate(l,a),t(c[0],_,i,E[0]/2),t(c[0],c[0],a,E[2]/2),t(c[1],_,i,E[0]/2),t(c[1],c[1],l,E[2]/2),t(c[2],_,s,E[0]/2),t(c[2],c[2],l,E[2]/2),t(c[3],_,s,E[0]/2),t(c[3],c[3],a,E[2]/2),t(n,_,r,E[1]),t(c[4],n,i,E[0]/2),t(c[4],c[4],a,E[2]/2),t(c[5],n,i,E[0]/2),t(c[5],c[5],l,E[2]/2),t(c[6],n,s,E[0]/2),t(c[6],c[6],l,E[2]/2),t(c[7],n,s,E[0]/2),t(c[7],c[7],a,E[2]/2);var T=this.attributes;if(this.enableNormal){h[0]=i,h[1]=s,h[2]=r,h[3]=o,h[4]=a,h[5]=l;for(var P=this._vertexOffset,O=0;O<f.length;O++){for(var D=this._triangleOffset*3,N=0;N<6;N++)this.indices[D++]=P+d[N];P+=4,this._triangleOffset+=2}for(var O=0;O<f.length;O++)for(var B=h[O],N=0;N<4;N++){var z=f[O][N];T.position.set(this._vertexOffset,c[z]),T.normal.set(this._vertexOffset,B),T.color.set(this._vertexOffset++,w)}}else{for(var O=0;O<p.length;O++){for(var D=this._triangleOffset*3,N=0;N<3;N++)this.indices[D+N]=p[O][N]+this._vertexOffset;this._triangleOffset++}for(var O=0;O<c.length;O++)T.position.set(this._vertexOffset,c[O]),T.color.set(this._vertexOffset++,w)}}for(var Y=this._vertexOffset,O=M;O<Y;O++)this._dataIndices[O]=b}}(),_addBevelBar:function(){var e=Rt.create(),t=Rt.create(),n=Rt.create(),i=oy.create(),r=[],a=[1,-1,-1,1],s=[1,1,-1,-1],o=[2,0];return function(l,c,h,u,f,d,p){Rt.copy(t,c),Rt.normalize(t,t),Rt.cross(n,h,t),Rt.normalize(n,n),Rt.cross(e,t,n),Rt.normalize(n,n),i[0]=e[0],i[1]=e[1],i[2]=e[2],i[3]=t[0],i[4]=t[1],i[5]=t[2],i[6]=n[0],i[7]=n[1],i[8]=n[2],f=Math.min(u[0],u[2])/2*f;for(var g=0;g<3;g++)r[g]=Math.max(u[g]-f*2,0);for(var v=(u[0]-r[0])/2,m=(u[1]-r[1])/2,y=(u[2]-r[2])/2,_=[],x=[],A=this._vertexOffset,E=[],g=0;g<2;g++){E[g]=E[g]=[];for(var w=0;w<=d;w++)for(var b=0;b<4;b++){(w===0&&g===0||g===1&&w===d)&&E[g].push(A);for(var M=0;M<=d;M++){var T=M/d*Math.PI/2+Math.PI/2*b,P=w/d*Math.PI/2+Math.PI/2*g;x[0]=v*Math.cos(T)*Math.sin(P),x[1]=m*Math.cos(P),x[2]=y*Math.sin(T)*Math.sin(P),_[0]=x[0]+a[b]*r[0]/2,_[1]=x[1]+m+o[g]*r[1]/2,_[2]=x[2]+s[b]*r[2]/2,Math.abs(v-m)<1e-6&&Math.abs(m-y)<1e-6||(x[0]/=v*v,x[1]/=m*m,x[2]/=y*y),Rt.normalize(x,x),Rt.transformMat3(_,_,i),Rt.transformMat3(x,x,i),Rt.add(_,_,l),this.attributes.position.set(A,_),this.enableNormal&&this.attributes.normal.set(A,x),this.attributes.color.set(A,p),A++}}}for(var O=d*4+3,D=d*2+1,N=O+1,b=0;b<D;b++)for(var g=0;g<=O;g++){var B=b*N+g+this._vertexOffset,z=b*N+(g+1)%N+this._vertexOffset,Y=(b+1)*N+(g+1)%N+this._vertexOffset,F=(b+1)*N+g+this._vertexOffset;this.setTriangleIndices(this._triangleOffset++,[Y,B,z]),this.setTriangleIndices(this._triangleOffset++,[Y,F,B])}this.setTriangleIndices(this._triangleOffset++,[E[0][0],E[0][2],E[0][1]]),this.setTriangleIndices(this._triangleOffset++,[E[0][0],E[0][3],E[0][2]]),this.setTriangleIndices(this._triangleOffset++,[E[1][0],E[1][1],E[1][2]]),this.setTriangleIndices(this._triangleOffset++,[E[1][0],E[1][2],E[1][3]]),this._vertexOffset=A}}()});fr(Rh.prototype,Vs);fr(Rh.prototype,Mh);var ly=Ot.vec3;const cy=ti.extend({type:"bar3D",__ecgl__:!0,init:function(e,t){this.groupGL=new R.Node,this._api=t,this._labelsBuilder=new Ui(256,256,t);var n=this;this._labelsBuilder.getLabelPosition=function(i,r,a){if(n._data){var s=n._data.getItemLayout(i),o=s[0],l=s[1],c=s[2][1];return ly.scaleAndAdd([],o,l,a+c)}else return[0,0]},this._labelsBuilder.getMesh().renderOrder=100},render:function(e,t,n){var i=this._prevBarMesh;this._prevBarMesh=this._barMesh,this._barMesh=i,this._barMesh||(this._barMesh=new R.Mesh({geometry:new Rh,shadowDepthMaterial:new R.Material({shader:new R.Shader(R.Shader.source("ecgl.sm.depth.vertex"),R.Shader.source("ecgl.sm.depth.fragment"))}),culling:e.coordinateSystem.type==="cartesian3D",renderOrder:10,renderNormal:!0})),this.groupGL.remove(this._prevBarMesh),this.groupGL.add(this._barMesh),this.groupGL.add(this._labelsBuilder.getMesh());var r=e.coordinateSystem;if(this._doRender(e,n),r&&r.viewGL){r.viewGL.add(this.groupGL);var a=r.viewGL.isLinearSpace()?"define":"undefine";this._barMesh.material[a]("fragment","SRGB_DECODE")}this._data=e.getData(),this._labelsBuilder.updateData(this._data),this._labelsBuilder.updateLabels(),this._updateAnimation(e)},_updateAnimation:function(e){R.updateVertexAnimation([["prevPosition","position"],["prevNormal","normal"]],this._prevBarMesh,this._barMesh,e)},_doRender:function(e,t){var n=e.getData(),i=e.get("shading"),r=i!=="color",a=this,s=this._barMesh,o="ecgl."+i;(!s.material||s.material.shader.name!==o)&&(s.material=R.createMaterial(o,["VERTEX_COLOR"])),R.setMaterialFromModel(i,s.material,e,t),s.geometry.enableNormal=r,s.geometry.resetOffset();var l=e.get("bevelSize"),c=e.get("bevelSmoothness");s.geometry.bevelSegments=c,s.geometry.bevelSize=l;var h=[],u=new Float32Array(n.count()*4),f=0,v=0,d=!1;n.each(function(y){if(n.hasValue(y)){var _=Zt(n,y),x=jt(n,y);x==null&&(x=1),R.parseColor(_,h),h[3]*=x,u[f++]=h[0],u[f++]=h[1],u[f++]=h[2],u[f++]=h[3],h[3]>0&&(v++,h[3]<.99&&(d=!0))}}),s.geometry.setBarCount(v);var p=n.getLayout("orient"),g=this._barIndexOfData=new Int32Array(n.count()),v=0;n.each(function(y){if(!n.hasValue(y)){g[y]=-1;return}var _=n.getItemLayout(y),x=_[0],A=_[1],E=_[2],w=y*4;h[0]=u[w++],h[1]=u[w++],h[2]=u[w++],h[3]=u[w++],h[3]>0&&(a._barMesh.geometry.addBar(x,A,p,E,h,y),g[y]=v++)}),s.geometry.dirty(),s.geometry.updateBoundingBox();var m=s.material;m.transparent=d,m.depthMask=!d,s.geometry.sortTriangles=d,this._initHandler(e,t)},_initHandler:function(e,t){var n=e.getData(),i=this._barMesh,r=e.coordinateSystem.type==="cartesian3D";i.seriesIndex=e.seriesIndex;var a=-1;i.off("mousemove"),i.off("mouseout"),i.on("mousemove",function(s){var o=i.geometry.getDataIndexOfVertex(s.triangle[0]);o!==a&&(this._downplay(a),this._highlight(o),this._labelsBuilder.updateLabels([o]),r&&t.dispatchAction({type:"grid3DShowAxisPointer",value:[n.get("x",o),n.get("y",o),n.get("z",o,!0)]})),a=o,i.dataIndex=o},this),i.on("mouseout",function(s){this._downplay(a),this._labelsBuilder.updateLabels(),a=-1,i.dataIndex=-1,r&&t.dispatchAction({type:"grid3DHideAxisPointer"})},this)},_highlight:function(e){var t=this._data;if(t){var n=this._barIndexOfData[e];if(!(n<0)){var i=t.getItemModel(e),r=i.getModel("emphasis.itemStyle"),a=r.get("color"),s=r.get("opacity");if(a==null){var o=Zt(t,e);a=uh(o,-.4)}s==null&&(s=jt(t,e));var l=R.parseColor(a);l[3]*=s,this._barMesh.geometry.setColor(n,l),this._api.getZr().refresh()}}},_downplay:function(e){var t=this._data;if(t){var n=this._barIndexOfData[e];if(!(n<0)){var i=Zt(t,e),r=jt(t,e),a=R.parseColor(i);a[3]*=r,this._barMesh.geometry.setColor(n,a),this._api.getZr().refresh()}}},highlight:function(e,t,n,i){this._toggleStatus("highlight",e,t,n,i)},downplay:function(e,t,n,i){this._toggleStatus("downplay",e,t,n,i)},_toggleStatus:function(e,t,n,i,r){var a=t.getData(),s=Ye.queryDataIndex(a,r),o=this;s!=null?mi(gr.normalizeToArray(s),function(l){e==="highlight"?this._highlight(l):this._downplay(l)},this):a.each(function(l){e==="highlight"?o._highlight(l):o._downplay(l)})},remove:function(){this.groupGL.removeAll()},dispose:function(){this._labelsBuilder.dispose(),this.groupGL.removeAll()}});function hy(e){e.registerChartView(cy),e.registerSeriesModel(sy),ry(e),e.registerProcessor(function(t,n){t.eachSeriesByType("bar3d",function(i){var r=i.getData();r.filterSelf(function(a){return r.hasValue(a)})})})}mn(hy);var uy=ei.extend({type:"series.line3D",dependencies:["grid3D"],visualStyleAccessPath:"lineStyle",visualDrawType:"stroke",getInitialData:function(e,t){return El(this)},formatTooltip:function(e){return Ws(this,e)},defaultOption:{coordinateSystem:"cartesian3D",zlevel:-10,grid3DIndex:0,lineStyle:{width:2},animationDurationUpdate:500}});const fy=uy;var dy=Ot.vec3;R.Shader.import(Sl);const py=ti.extend({type:"line3D",__ecgl__:!0,init:function(e,t){this.groupGL=new R.Node,this._api=t},render:function(e,t,n){var i=this._prevLine3DMesh;this._prevLine3DMesh=this._line3DMesh,this._line3DMesh=i,this._line3DMesh||(this._line3DMesh=new R.Mesh({geometry:new pr({useNativeLine:!1,sortTriangles:!0}),material:new R.Material({shader:R.createShader("ecgl.meshLines3D")}),renderOrder:10}),this._line3DMesh.geometry.pick=this._pick.bind(this)),this.groupGL.remove(this._prevLine3DMesh),this.groupGL.add(this._line3DMesh);var r=e.coordinateSystem;if(r&&r.viewGL){r.viewGL.add(this.groupGL);var a=r.viewGL.isLinearSpace()?"define":"undefine";this._line3DMesh.material[a]("fragment","SRGB_DECODE")}this._doRender(e,n),this._data=e.getData(),this._camera=r.viewGL.camera,this.updateCamera(),this._updateAnimation(e)},updateCamera:function(){this._updateNDCPosition()},_doRender:function(e,t){var n=e.getData(),i=this._line3DMesh;i.geometry.resetOffset();var r=n.getLayout("points"),a=[],s=new Float32Array(r.length/3*4),o=0,l=!1;n.each(function(u){var f=Zt(n,u),d=jt(n,u);d==null&&(d=1),R.parseColor(f,a),a[3]*=d,s[o++]=a[0],s[o++]=a[1],s[o++]=a[2],s[o++]=a[3],a[3]<.99&&(l=!0)}),i.geometry.setVertexCount(i.geometry.getPolylineVertexCount(r)),i.geometry.setTriangleCount(i.geometry.getPolylineTriangleCount(r)),i.geometry.addPolyline(r,s,Ye.firstNotNull(e.get("lineStyle.width"),1)),i.geometry.dirty(),i.geometry.updateBoundingBox();var c=i.material;c.transparent=l,c.depthMask=!l;var h=e.getModel("debug.wireframe");h.get("show")?(i.geometry.createAttribute("barycentric","float",3),i.geometry.generateBarycentric(),i.material.set("both","WIREFRAME_TRIANGLE"),i.material.set("wireframeLineColor",R.parseColor(h.get("lineStyle.color")||"rgba(0,0,0,0.5)")),i.material.set("wireframeLineWidth",Ye.firstNotNull(h.get("lineStyle.width"),1))):i.material.set("both","WIREFRAME_TRIANGLE"),this._points=r,this._initHandler(e,t)},_updateAnimation:function(e){R.updateVertexAnimation([["prevPosition","position"],["prevPositionPrev","positionPrev"],["prevPositionNext","positionNext"]],this._prevLine3DMesh,this._line3DMesh,e)},_initHandler:function(e,t){var n=e.getData(),i=e.coordinateSystem,r=this._line3DMesh,a=-1;r.seriesIndex=e.seriesIndex,r.off("mousemove"),r.off("mouseout"),r.on("mousemove",function(s){var o=i.pointToData(s.point.array),l=n.indicesOfNearest("x",o[0])[0];l!==a&&(t.dispatchAction({type:"grid3DShowAxisPointer",value:[n.get("x",l),n.get("y",l),n.get("z",l)]}),r.dataIndex=l),a=l},this),r.on("mouseout",function(s){a=-1,r.dataIndex=-1,t.dispatchAction({type:"grid3DHideAxisPointer"})},this)},_updateNDCPosition:function(){var e=new ue,t=this._camera;ue.multiply(e,t.projectionMatrix,t.viewMatrix);var n=this._positionNDC,i=this._points,r=i.length/3;(!n||n.length/2!==r)&&(n=this._positionNDC=new Float32Array(r*2));for(var a=[],s=0;s<r;s++){var o=s*3,l=s*2;a[0]=i[o],a[1]=i[o+1],a[2]=i[o+2],a[3]=1,dy.transformMat4(a,a,e.array),n[l]=a[0]/a[3],n[l+1]=a[1]/a[3]}},_pick:function(e,t,n,i,r,a){var s=this._positionNDC,o=this._data.hostModel,l=o.get("lineStyle.width"),c=-1,h=n.viewport.width,u=n.viewport.height,f=h*.5,d=u*.5;e=(e+1)*f,t=(t+1)*d;for(var p=1;p<s.length/2;p++){var g=(s[(p-1)*2]+1)*f,v=(s[(p-1)*2+1]+1)*d,m=(s[p*2]+1)*f,y=(s[p*2+1]+1)*d;if(Dv(g,v,m,y,l,e,t)){var _=(g-e)*(g-e)+(v-t)*(v-t),x=(m-e)*(m-e)+(y-t)*(y-t);c=_<x?p-1:p}}if(c>=0){var A=c*3,E=new $(this._points[A],this._points[A+1],this._points[A+2]);a.push({dataIndex:c,point:E,pointWorld:E.clone(),target:this._line3DMesh,distance:this._camera.getWorldPosition().dist(E)})}},remove:function(){this.groupGL.removeAll()},dispose:function(){this.groupGL.removeAll()}});function my(e){e.registerChartView(py),e.registerSeriesModel(fy),e.registerLayout(function(t,n){t.eachSeriesByType("line3D",function(i){var r=i.getData(),a=i.coordinateSystem;if(a){if(a.type!=="cartesian3D")return;var s=new Float32Array(r.count()*3),o=[],l=[],c=a.dimensions,h=c.map(function(u){return i.coordDimToDataDim(u)[0]});a&&r.each(h,function(u,f,d,p){o[0]=u,o[1]=f,o[2]=d,a.dataToPoint(o,l),s[p*3]=l[0],s[p*3+1]=l[1],s[p*3+2]=l[2]}),r.setLayout("points",s)}})})}mn(my);const vy=ei.extend({type:"series.scatter3D",dependencies:["globe","grid3D","geo3D"],visualStyleAccessPath:"itemStyle",hasSymbolVisual:!0,getInitialData:function(e,t){return El(this)},getFormattedLabel:function(e,t,n,i){var r=gr.getFormattedLabel(this,e,t,n,i);if(r==null){var a=this.getData(),s=a.dimensions[a.dimensions.length-1];r=a.get(s,e)}return r},formatTooltip:function(e){return Ws(this,e)},defaultOption:{coordinateSystem:"cartesian3D",zlevel:-10,progressive:1e5,progressiveThreshold:1e5,grid3DIndex:0,globeIndex:0,symbol:"circle",symbolSize:10,blendMode:"source-over",label:{show:!1,position:"right",distance:5,textStyle:{fontSize:14,color:"#000",backgroundColor:"rgba(255,255,255,0.7)",padding:3,borderRadius:3}},itemStyle:{opacity:.8},emphasis:{label:{show:!0}},animationDurationUpdate:500}});function nc(e,i,n){var i=i||document.createElement("canvas");i.width=e,i.height=e;var r=i.getContext("2d");return n&&n(r),i}function gy(e,t,n,i){pi(t)||(t=[t,t]);var r=Lh.getMarginByStyle(n,i),a=t[0]+r.left+r.right,s=t[1]+r.top+r.bottom,o=Nv(e,0,0,t[0],t[1]),l=Math.max(a,s);o.x=r.left,o.y=r.top,a>s?o.y+=(l-s)/2:o.x+=(l-a)/2;var c=o.getBoundingRect();return o.x-=c.x,o.y-=c.y,o.setStyle(n),o.update(),o.__size=l,o}function _y(e,t,n){var i=t.width,r=t.height,a=e.canvas.width,s=e.canvas.height,o=i/a,l=r/s;function c(m){return m<128?1:-1}function h(m,y){var _=1/0;m=Math.floor(m*o),y=Math.floor(y*l);for(var x=y*i+m,A=t.data[x*4],E=c(A),w=Math.max(y-n,0);w<Math.min(y+n,r);w++)for(var b=Math.max(m-n,0);b<Math.min(m+n,i);b++){var x=w*i+b,M=t.data[x*4],T=c(M),P=b-m,O=w-y;if(E!==T){var D=P*P+O*O;D<_&&(_=D)}}return E*Math.sqrt(_)}for(var u=e.createImageData(a,s),f=0;f<s;f++)for(var d=0;d<a;d++){var p=h(d,f),g=p/n*.5+.5,v=(f*a+d)*4;u.data[v++]=(1-g)*255,u.data[v++]=(1-g)*255,u.data[v++]=(1-g)*255,u.data[v++]=255}return u}var Lh={getMarginByStyle:function(e){var t=e.minMargin||0,n=0;e.stroke&&e.stroke!=="none"&&(n=e.lineWidth==null?1:e.lineWidth);var i=e.shadowBlur||0,r=e.shadowOffsetX||0,a=e.shadowOffsetY||0,s={};return s.left=Math.max(n/2,-r+i,t),s.right=Math.max(n/2,r+i,t),s.top=Math.max(n/2,-a+i,t),s.bottom=Math.max(n/2,a+i,t),s},createSymbolSprite:function(e,t,n,i){var r=gy(e,t,n),a=Lh.getMarginByStyle(n);return{image:nc(r.__size,i,function(s){Xd(s,r)}),margin:a}},createSDFFromCanvas:function(e,t,n,i){return nc(t,i,function(r){var a=e.getContext("2d"),s=a.getImageData(0,0,e.width,e.height);r.putImageData(_y(r,s,n),0,0)})},createSimpleSprite:function(e,t){return nc(e,t,function(n){var i=e/2;n.beginPath(),n.arc(i,i,60,0,Math.PI*2,!1),n.closePath();var r=n.createRadialGradient(i,i,0,i,i,i);r.addColorStop(0,"rgba(255, 255, 255, 1)"),r.addColorStop(.5,"rgba(255, 255, 255, 0.5)"),r.addColorStop(1,"rgba(255, 255, 255, 0)"),n.fillStyle=r,n.fill()})}};const $u=Lh;var Ju=Ot.vec3;const xy={needsSortVertices:function(){return this.sortVertices},needsSortVerticesProgressively:function(){return this.needsSortVertices()&&this.vertexCount>=2e4},doSortVertices:function(e,t){var n=this.indices,i=Ju.create();if(!n){n=this.indices=this.vertexCount>65535?new Uint32Array(this.vertexCount):new Uint16Array(this.vertexCount);for(var r=0;r<n.length;r++)n[r]=r}if(t===0){var a=this.attributes.position,e=e.array,s=0;(!this._zList||this._zList.length!==this.vertexCount)&&(this._zList=new Float32Array(this.vertexCount));for(var o,r=0;r<this.vertexCount;r++){a.get(r,i);var l=Ju.sqrDist(i,e);isNaN(l)&&(l=1e7,s++),r===0?(o=l,l=0):l=l-o,this._zList[r]=l}this._noneCount=s}if(this.vertexCount<2e4)t===0&&this._simpleSort(this._noneCount/this.vertexCount>.05);else for(var r=0;r<3;r++)this._progressiveQuickSort(t*3+r);this.dirtyIndices()},_simpleSort:function(e){var t=this._zList,n=this.indices;function i(r,a){return t[a]-t[r]}e?Array.prototype.sort.call(n,i):Ha.sort(n,i,0,n.length-1)},_progressiveQuickSort:function(e){var t=this._zList,n=this.indices;this._quickSort=this._quickSort||new Ha,this._quickSort.step(n,function(i,r){return t[r]-t[i]},e)}},yy=`@export ecgl.sdfSprite.vertex

uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;
uniform float elapsedTime : 0;

attribute vec3 position : POSITION;

#ifdef VERTEX_SIZE
attribute float size;
#else
uniform float u_Size;
#endif

#ifdef VERTEX_COLOR
attribute vec4 a_FillColor: COLOR;
varying vec4 v_Color;
#endif

#ifdef VERTEX_ANIMATION
attribute vec3 prevPosition;
attribute float prevSize;
uniform float percent : 1.0;
#endif


#ifdef POSITIONTEXTURE_ENABLED
uniform sampler2D positionTexture;
#endif

varying float v_Size;

void main()
{

#ifdef POSITIONTEXTURE_ENABLED
 gl_Position = worldViewProjection * vec4(texture2D(positionTexture, position.xy).xy, -10.0, 1.0);
#else

 #ifdef VERTEX_ANIMATION
 vec3 pos = mix(prevPosition, position, percent);
 #else
 vec3 pos = position;
 #endif
 gl_Position = worldViewProjection * vec4(pos, 1.0);
#endif

#ifdef VERTEX_SIZE
#ifdef VERTEX_ANIMATION
 v_Size = mix(prevSize, size, percent);
#else
 v_Size = size;
#endif
#else
 v_Size = u_Size;
#endif

#ifdef VERTEX_COLOR
 v_Color = a_FillColor;
 #endif

 gl_PointSize = v_Size;
}

@end

@export ecgl.sdfSprite.fragment

uniform vec4 color: [1, 1, 1, 1];
uniform vec4 strokeColor: [1, 1, 1, 1];
uniform float smoothing: 0.07;

uniform float lineWidth: 0.0;

#ifdef VERTEX_COLOR
varying vec4 v_Color;
#endif

varying float v_Size;

uniform sampler2D sprite;

@import clay.util.srgb

void main()
{
 gl_FragColor = color;

 vec4 _strokeColor = strokeColor;

#ifdef VERTEX_COLOR
 gl_FragColor *= v_Color;
 #endif

#ifdef SPRITE_ENABLED
 float d = texture2D(sprite, gl_PointCoord).r;
 gl_FragColor.a *= smoothstep(0.5 - smoothing, 0.5 + smoothing, d);

 if (lineWidth > 0.0) {
 float sLineWidth = lineWidth / 2.0;

 float outlineMaxValue0 = 0.5 + sLineWidth;
 float outlineMaxValue1 = 0.5 + sLineWidth + smoothing;
 float outlineMinValue0 = 0.5 - sLineWidth - smoothing;
 float outlineMinValue1 = 0.5 - sLineWidth;

 if (d <= outlineMaxValue1 && d >= outlineMinValue0) {
 float a = _strokeColor.a;
 if (d <= outlineMinValue1) {
 a = a * smoothstep(outlineMinValue0, outlineMinValue1, d);
 }
 else {
 a = a * smoothstep(outlineMaxValue1, outlineMaxValue0, d);
 }
 gl_FragColor.rgb = mix(gl_FragColor.rgb * gl_FragColor.a, _strokeColor.rgb, a);
 gl_FragColor.a = gl_FragColor.a * (1.0 - a) + a;
 }
 }
#endif

#ifdef SRGB_DECODE
 gl_FragColor = sRGBToLinear(gl_FragColor);
#endif
}
@end`;var ic=Ot.vec4;R.Shader.import(yy);var Ty=R.Mesh.extend(function(){var e=new R.Geometry({dynamic:!0,attributes:{color:new R.Geometry.Attribute("color","float",4,"COLOR"),position:new R.Geometry.Attribute("position","float",3,"POSITION"),size:new R.Geometry.Attribute("size","float",1),prevPosition:new R.Geometry.Attribute("prevPosition","float",3),prevSize:new R.Geometry.Attribute("prevSize","float",1)}});Object.assign(e,xy);var t=new R.Material({shader:R.createShader("ecgl.sdfSprite"),transparent:!0,depthMask:!1});t.enableTexture("sprite"),t.define("both","VERTEX_COLOR"),t.define("both","VERTEX_SIZE");var n=new R.Texture2D({image:document.createElement("canvas"),flipY:!1});return t.set("sprite",n),e.pick=this._pick.bind(this),{geometry:e,material:t,mode:R.Mesh.POINTS,sizeScale:1}},{_pick:function(e,t,n,i,r,a){var s=this._positionNDC;if(s)for(var o=n.viewport,l=2/o.width,c=2/o.height,h=this.geometry.vertexCount-1;h>=0;h--){var u;this.geometry.indices?u=this.geometry.indices[h]:u=h;var f=s[u*2],d=s[u*2+1],p=this.geometry.attributes.size.get(u)/this.sizeScale,g=p/2;if(e>f-g*l&&e<f+g*l&&t>d-g*c&&t<d+g*c){var v=new R.Vector3,m=new R.Vector3;this.geometry.attributes.position.get(u,v.array),R.Vector3.transformMat4(m,v,this.worldTransform),a.push({vertexIndex:u,point:v,pointWorld:m,target:this,distance:m.distance(i.getWorldPosition())})}}},updateNDCPosition:function(e,t,n){var i=this._positionNDC,r=this.geometry;(!i||i.length/2!==r.vertexCount)&&(i=this._positionNDC=new Float32Array(r.vertexCount*2));for(var a=ic.create(),s=0;s<r.vertexCount;s++)r.attributes.position.get(s,a),a[3]=1,ic.transformMat4(a,a,e.array),ic.scale(a,a,1/a[3]),i[s*2]=a[0],i[s*2+1]=a[1]}}),Qu=20,ef=-10;function Sy(e,t){return e&&t&&e[0]===t[0]&&e[1]===t[1]}function qr(e,t){this.rootNode=new R.Node,this.is2D=e,this._labelsBuilder=new Ui(256,256,t),this._labelsBuilder.getMesh().renderOrder=100,this.rootNode.add(this._labelsBuilder.getMesh()),this._api=t,this._spriteImageCanvas=document.createElement("canvas"),this._startDataIndex=0,this._endDataIndex=0,this._sizeScale=1}qr.prototype={constructor:qr,highlightOnMouseover:!0,update:function(e,t,n,i,r){var a=this._prevMesh;this._prevMesh=this._mesh,this._mesh=a;var s=e.getData();if(i==null&&(i=0),r==null&&(r=s.count()),this._startDataIndex=i,this._endDataIndex=r-1,!this._mesh){var o=this._prevMesh&&this._prevMesh.material;this._mesh=new Ty({renderOrder:10,frustumCulling:!1}),o&&(this._mesh.material=o)}var o=this._mesh.material,l=this._mesh.geometry,c=l.attributes;this.rootNode.remove(this._prevMesh),this.rootNode.add(this._mesh),this._setPositionTextureToMesh(this._mesh,this._positionTexture);var h=this._getSymbolInfo(e,i,r),u=n.getDevicePixelRatio(),f=e.getModel("itemStyle").getItemStyle(),d=e.get("large"),p=1;h.maxSize>2?(p=this._updateSymbolSprite(e,f,h,u),o.enableTexture("sprite")):o.disableTexture("sprite"),c.position.init(r-i);var g=[];if(d){o.undefine("VERTEX_SIZE"),o.undefine("VERTEX_COLOR");var v=ax(s),m=sx(s);R.parseColor(v,g),g[3]*=m,o.set({color:g,u_Size:h.maxSize*this._sizeScale})}else o.set({color:[1,1,1,1]}),o.define("VERTEX_SIZE"),o.define("VERTEX_COLOR"),c.size.init(r-i),c.color.init(r-i),this._originalOpacity=new Float32Array(r-i);for(var y=s.getLayout("points"),_=c.position.value,x=0;x<r-i;x++){var A=x*3,E=x*2;if(this.is2D?(_[A]=y[E],_[A+1]=y[E+1],_[A+2]=ef):(_[A]=y[A],_[A+1]=y[A+1],_[A+2]=y[A+2]),!d){var v=Zt(s,x),m=jt(s,x);R.parseColor(v,g),g[3]*=m,c.color.set(x,g),g[3]<.99;var w=s.getItemVisual(x,"symbolSize");w=w instanceof Array?Math.max(w[0],w[1]):w,isNaN(w)&&(w=0),c.size.value[x]=w*p*this._sizeScale,this._originalOpacity[x]=g[3]}}this._mesh.sizeScale=p,l.updateBoundingBox(),l.dirty(),this._updateMaterial(e,f);var b=e.coordinateSystem;if(b&&b.viewGL){var M=b.viewGL.isLinearSpace()?"define":"undefine";o[M]("fragment","SRGB_DECODE")}d||this._updateLabelBuilder(e,i,r),this._updateHandler(e,t,n),this._updateAnimation(e),this._api=n},getPointsMesh:function(){return this._mesh},updateLabels:function(e){this._labelsBuilder.updateLabels(e)},hideLabels:function(){this.rootNode.remove(this._labelsBuilder.getMesh())},showLabels:function(){this.rootNode.add(this._labelsBuilder.getMesh())},dispose:function(){this._labelsBuilder.dispose()},_updateSymbolSprite:function(e,t,n,i){n.maxSize=Math.min(n.maxSize*2,200);var r=[];return n.aspect>1?(r[0]=n.maxSize,r[1]=n.maxSize/n.aspect):(r[1]=n.maxSize,r[0]=n.maxSize*n.aspect),r[0]=r[0]||1,r[1]=r[1]||1,(this._symbolType!==n.type||!Sy(this._symbolSize,r)||this._lineWidth!==t.lineWidth)&&($u.createSymbolSprite(n.type,r,{fill:"#fff",lineWidth:t.lineWidth,stroke:"transparent",shadowColor:"transparent",minMargin:Math.min(r[0]/2,10)},this._spriteImageCanvas),$u.createSDFFromCanvas(this._spriteImageCanvas,Math.min(this._spriteImageCanvas.width,32),Qu,this._mesh.material.get("sprite").image),this._symbolType=n.type,this._symbolSize=r,this._lineWidth=t.lineWidth),this._spriteImageCanvas.width/n.maxSize*i},_updateMaterial:function(e,t){var n=e.get("blendMode")==="lighter"?R.additiveBlend:null,i=this._mesh.material;i.blend=n,i.set("lineWidth",t.lineWidth/Qu);var r=R.parseColor(t.stroke);i.set("strokeColor",r),i.transparent=!0,i.depthMask=!1,i.depthTest=!this.is2D,i.sortVertices=!this.is2D},_updateLabelBuilder:function(e,s,n){var i=e.getData(),r=this._mesh.geometry,a=r.attributes.position.value,s=this._startDataIndex,o=this._mesh.sizeScale;this._labelsBuilder.updateData(i,s,n),this._labelsBuilder.getLabelPosition=function(l,c,h){var u=(l-s)*3;return[a[u],a[u+1],a[u+2]]},this._labelsBuilder.getLabelDistance=function(l,c,h){var u=r.attributes.size.get(l-s)/o;return u/2+h},this._labelsBuilder.updateLabels()},_updateAnimation:function(e){R.updateVertexAnimation([["prevPosition","position"],["prevSize","size"]],this._prevMesh,this._mesh,e)},_updateHandler:function(e,t,n){var i=e.getData(),r=this._mesh,a=this,s=-1,o=e.coordinateSystem&&e.coordinateSystem.type==="cartesian3D",l;o&&(l=e.coordinateSystem.model),r.seriesIndex=e.seriesIndex,r.off("mousemove"),r.off("mouseout"),r.on("mousemove",function(c){var h=c.vertexIndex+a._startDataIndex;h!==s&&(this.highlightOnMouseover&&(this.downplay(i,s),this.highlight(i,h),this._labelsBuilder.updateLabels([h])),o&&n.dispatchAction({type:"grid3DShowAxisPointer",value:[i.get(e.coordDimToDataDim("x")[0],h),i.get(e.coordDimToDataDim("y")[0],h),i.get(e.coordDimToDataDim("z")[0],h)],grid3DIndex:l.componentIndex})),r.dataIndex=h,s=h},this),r.on("mouseout",function(c){var h=c.vertexIndex+a._startDataIndex;this.highlightOnMouseover&&(this.downplay(i,h),this._labelsBuilder.updateLabels()),s=-1,r.dataIndex=-1,o&&n.dispatchAction({type:"grid3DHideAxisPointer",grid3DIndex:l.componentIndex})},this)},updateLayout:function(e,t,n){var i=e.getData();if(this._mesh){var r=this._mesh.geometry.attributes.position.value,a=i.getLayout("points");if(this.is2D)for(var s=0;s<a.length/2;s++){var o=s*3,l=s*2;r[o]=a[l],r[o+1]=a[l+1],r[o+2]=ef}else for(var s=0;s<a.length;s++)r[s]=a[s];this._mesh.geometry.dirty(),n.getZr().refresh()}},updateView:function(e){if(this._mesh){var t=new ue;ue.mul(t,e.viewMatrix,this._mesh.worldTransform),ue.mul(t,e.projectionMatrix,t),this._mesh.updateNDCPosition(t,this.is2D,this._api)}},highlight:function(e,t){if(!(t>this._endDataIndex||t<this._startDataIndex)){var n=e.getItemModel(t),i=n.getModel("emphasis.itemStyle"),r=i.get("color"),a=i.get("opacity");if(r==null){var s=Zt(e,t);r=uh(s,-.4)}a==null&&(a=jt(e,t));var o=R.parseColor(r);o[3]*=a,this._mesh.geometry.attributes.color.set(t-this._startDataIndex,o),this._mesh.geometry.dirtyAttribute("color"),this._api.getZr().refresh()}},downplay:function(e,t){if(!(t>this._endDataIndex||t<this._startDataIndex)){var n=Zt(e,t),i=jt(e,t),r=R.parseColor(n);r[3]*=i,this._mesh.geometry.attributes.color.set(t-this._startDataIndex,r),this._mesh.geometry.dirtyAttribute("color"),this._api.getZr().refresh()}},fadeOutAll:function(e){if(this._originalOpacity){for(var t=this._mesh.geometry,n=0;n<t.vertexCount;n++){var i=this._originalOpacity[n]*e;t.attributes.color.value[n*4+3]=i}t.dirtyAttribute("color"),this._api.getZr().refresh()}},fadeInAll:function(){this.fadeOutAll(1)},setPositionTexture:function(e){this._mesh&&this._setPositionTextureToMesh(this._mesh,e),this._positionTexture=e},removePositionTexture:function(){this._positionTexture=null,this._mesh&&this._setPositionTextureToMesh(this._mesh,null)},setSizeScale:function(e){if(e!==this._sizeScale){if(this._mesh){var t=this._mesh.material.get("u_Size");this._mesh.material.set("u_Size",t/this._sizeScale*e);var n=this._mesh.geometry.attributes;if(n.size.value)for(var i=0;i<n.size.value.length;i++)n.size.value[i]=n.size.value[i]/this._sizeScale*e}this._sizeScale=e}},_setPositionTextureToMesh:function(e,t){t&&e.material.set("positionTexture",t),e.material[t?"enableTexture":"disableTexture"]("positionTexture")},_getSymbolInfo:function(e,t,n){if(e.get("large")){var i=Ye.firstNotNull(e.get("symbolSize"),1),o,a;return i instanceof Array?(o=Math.max(i[0],i[1]),a=i[0]/i[1]):(o=i,a=1),{maxSize:i,type:e.get("symbol"),aspect:a}}for(var r=e.getData(),a,s=r.getItemVisual(0,"symbol")||"circle",o=0,l=t;l<n;l++){var i=r.getItemVisual(l,"symbolSize"),c=r.getItemVisual(l,"symbol"),h;if(i instanceof Array)h=i[0]/i[1],o=Math.max(Math.max(i[0],i[1]),o);else{if(isNaN(i))continue;h=1,o=Math.max(i,o)}s=c,a=h}return{maxSize:o,type:s,aspect:a}}};const Ey=ti.extend({type:"scatter3D",hasSymbolVisual:!0,__ecgl__:!0,init:function(e,t){this.groupGL=new R.Node,this._pointsBuilderList=[],this._currentStep=0},render:function(e,t,n){if(this.groupGL.removeAll(),!!e.getData().count()){var i=e.coordinateSystem;if(i&&i.viewGL){i.viewGL.add(this.groupGL),this._camera=i.viewGL.camera;var r=this._pointsBuilderList[0];r||(r=this._pointsBuilderList[0]=new qr(!1,n)),this._pointsBuilderList.length=1,this.groupGL.add(r.rootNode),r.update(e,t,n),r.updateView(i.viewGL.camera)}}},incrementalPrepareRender:function(e,t,n){var i=e.coordinateSystem;i&&i.viewGL&&(i.viewGL.add(this.groupGL),this._camera=i.viewGL.camera),this.groupGL.removeAll(),this._currentStep=0},incrementalRender:function(e,t,n,i){if(!(e.end<=e.start)){var r=this._pointsBuilderList[this._currentStep];r||(r=new qr(!1,i),this._pointsBuilderList[this._currentStep]=r),this.groupGL.add(r.rootNode),r.update(t,n,i,e.start,e.end),r.updateView(t.coordinateSystem.viewGL.camera),this._currentStep++}},updateCamera:function(){this._pointsBuilderList.forEach(function(e){e.updateView(this._camera)},this)},highlight:function(e,t,n,i){this._toggleStatus("highlight",e,t,n,i)},downplay:function(e,t,n,i){this._toggleStatus("downplay",e,t,n,i)},_toggleStatus:function(e,t,n,i,r){var a=t.getData(),s=Ye.queryDataIndex(a,r),o=e==="highlight";s!=null?mi(gr.normalizeToArray(s),function(l){for(var c=0;c<this._pointsBuilderList.length;c++){var h=this._pointsBuilderList[c];o?h.highlight(a,l):h.downplay(a,l)}},this):a.each(function(l){for(var c=0;c<this._pointsBuilderList.length;c++){var h=this._pointsBuilderList[c];o?h.highlight(a,l):h.downplay(a,l)}})},dispose:function(){this._pointsBuilderList.forEach(function(e){e.dispose()}),this.groupGL.removeAll()},remove:function(){this.groupGL.removeAll()}});function My(e){e.registerChartView(Ey),e.registerSeriesModel(vy),e.registerLayout({seriesType:"scatter3D",reset:function(t){var n=t.coordinateSystem;if(n){var i=n.dimensions;if(i.length<3)return;var r=i.map(function(o){return t.coordDimToDataDim(o)[0]}),a=[],s=[];return{progress:function(o,l){for(var c=new Float32Array((o.end-o.start)*3),h=o.start;h<o.end;h++){var u=(h-o.start)*3;a[0]=l.get(r[0],h),a[1]=l.get(r[1],h),a[2]=l.get(r[2],h),n.dataToPoint(a,s),c[u]=s[0],c[u+1]=s[1],c[u+2]=s[2]}l.setLayout("points",c)}}}}})}mn(My);var Wt=Ot.vec3,tf=Ot.vec2,yi=Wt.normalize,uo=Wt.cross,nf=Wt.sub,rc=Wt.add,nr=Wt.create,Wi=nr(),zn=nr(),Xi=nr(),fs=nr(),rf=[],af=[];function wy(e,t){tf.copy(rf,e[0]),tf.copy(af,e[1]);var n=[],i=n[0]=nr(),r=n[1]=nr(),a=n[2]=nr(),s=n[3]=nr();t.dataToPoint(rf,i),t.dataToPoint(af,s),yi(Wi,i),nf(zn,s,i),yi(zn,zn),uo(Xi,zn,Wi),yi(Xi,Xi),uo(zn,Wi,Xi),rc(r,Wi,zn),yi(r,r),yi(Wi,s),nf(zn,i,s),yi(zn,zn),uo(Xi,zn,Wi),yi(Xi,Xi),uo(zn,Wi,Xi),rc(a,Wi,zn),yi(a,a),rc(fs,i,s),yi(fs,fs);var o=Wt.dot(i,fs),l=Wt.dot(fs,r),c=(Math.max(Wt.len(i),Wt.len(s))-o)/l*2;return Wt.scaleAndAdd(r,i,r,c),Wt.scaleAndAdd(a,s,a,c),n}function Ay(e,t,n){var i=[],r=i[0]=Wt.create(),a=i[1]=Wt.create(),s=i[2]=Wt.create(),o=i[3]=Wt.create();t.dataToPoint(e[0],r),t.dataToPoint(e[1],o);var l=Wt.dist(r,o);return Wt.lerp(a,r,o,.3),Wt.lerp(s,r,o,.3),Wt.scaleAndAdd(a,a,n,Math.min(l*.1,10)),Wt.scaleAndAdd(s,s,n,Math.min(l*.1,10)),i}function am(e,t){for(var n=new Float32Array(e.length*3),i=0,r=[],a=0;a<e.length;a++)t.dataToPoint(e[a],r),n[i++]=r[0],n[i++]=r[1],n[i++]=r[2];return n}function sm(e){var t=[];return e.each(function(n){var i=e.getItemModel(n),r=i.option instanceof Array?i.option:i.getShallow("coords",!0);t.push(r)}),{coordsList:t}}function by(e,t){var n=e.getData(),i=e.get("polyline");n.setLayout("lineType",i?"polyline":"cubicBezier");var r=sm(n);n.each(function(a){var s=r.coordsList[a],o=i?am:wy;n.setItemLayout(a,o(s,t))})}function sf(e,t,n){var i=e.getData(),r=e.get("polyline"),a=sm(i);i.setLayout("lineType",r?"polyline":"cubicBezier"),i.each(function(s){var o=a.coordsList[s],l=r?am(o,t):Ay(o,t,n);i.setItemLayout(s,l)})}function Cy(e,t){e.eachSeriesByType("lines3D",function(n){var i=n.coordinateSystem;i.type==="globe"?by(n,i):i.type==="geo3D"?sf(n,i,[0,1,0]):(i.type==="mapbox3D"||i.type==="maptalks3D")&&sf(n,i,[0,0,1])})}const Ry=ei.extend({type:"series.lines3D",dependencies:["globe"],visualStyleAccessPath:"lineStyle",visualDrawType:"stroke",getInitialData:function(e,t){var n=new vi(["value"],this);return n.hasItemOption=!1,n.initData(e.data,[],function(i,r,a,s){if(i instanceof Array)return NaN;n.hasItemOption=!0;var o=i.value;if(o!=null)return o instanceof Array?o[s]:o}),n},defaultOption:{coordinateSystem:"globe",globeIndex:0,geo3DIndex:0,zlevel:-10,polyline:!1,effect:{show:!1,period:4,trailWidth:4,trailLength:.2,spotIntensity:6},silent:!0,blendMode:"source-over",lineStyle:{width:1,opacity:.5}}}),Ly=`@export ecgl.trail2.vertex
attribute vec3 position: POSITION;
attribute vec3 positionPrev;
attribute vec3 positionNext;
attribute float offset;
attribute float dist;
attribute float distAll;
attribute float start;

attribute vec4 a_Color : COLOR;

uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;
uniform vec4 viewport : VIEWPORT;
uniform float near : NEAR;

uniform float speed : 0;
uniform float trailLength: 0.3;
uniform float time;
uniform float period: 1000;

uniform float spotSize: 1;

varying vec4 v_Color;
varying float v_Percent;
varying float v_SpotPercent;

@import ecgl.common.wireframe.vertexHeader

@import ecgl.lines3D.clipNear

void main()
{
 @import ecgl.lines3D.expandLine

 gl_Position = currProj;

 v_Color = a_Color;

 @import ecgl.common.wireframe.vertexMain

#ifdef CONSTANT_SPEED
 float t = mod((speed * time + start) / distAll, 1. + trailLength) - trailLength;
#else
 float t = mod((time + start) / period, 1. + trailLength) - trailLength;
#endif

 float trailLen = distAll * trailLength;

 v_Percent = (dist - t * distAll) / trailLen;

 v_SpotPercent = spotSize / distAll;

 }
@end


@export ecgl.trail2.fragment

uniform vec4 color : [1.0, 1.0, 1.0, 1.0];
uniform float spotIntensity: 5;

varying vec4 v_Color;
varying float v_Percent;
varying float v_SpotPercent;

@import ecgl.common.wireframe.fragmentHeader

@import clay.util.srgb

void main()
{
 if (v_Percent > 1.0 || v_Percent < 0.0) {
 discard;
 }

 float fade = v_Percent;

#ifdef SRGB_DECODE
 gl_FragColor = sRGBToLinear(color * v_Color);
#else
 gl_FragColor = color * v_Color;
#endif

 @import ecgl.common.wireframe.fragmentMain

 if (v_Percent > (1.0 - v_SpotPercent)) {
 gl_FragColor.rgb *= spotIntensity;
 }

 gl_FragColor.a *= fade;
}

@end`;var of=Ot.vec3;function Py(e){return e>0?1:-1}R.Shader.import(Ly);const Dy=R.Mesh.extend(function(){var e=new R.Material({shader:new R.Shader(R.Shader.source("ecgl.trail2.vertex"),R.Shader.source("ecgl.trail2.fragment")),transparent:!0,depthMask:!1}),t=new pr({dynamic:!0});return t.createAttribute("dist","float",1),t.createAttribute("distAll","float",1),t.createAttribute("start","float",1),{geometry:t,material:e,culling:!1,$ignorePicking:!0}},{updateData:function(e,t,n){var i=e.hostModel,r=this.geometry,a=i.getModel("effect"),s=a.get("trailWidth")*t.getDevicePixelRatio(),o=a.get("trailLength"),l=i.get("effect.constantSpeed"),c=i.get("effect.period")*1e3,h=l!=null;h?this.material.set("speed",l/1e3):this.material.set("period",c),this.material[h?"define":"undefine"]("vertex","CONSTANT_SPEED");var u=i.get("polyline");r.trailLength=o,this.material.set("trailLength",o),r.resetOffset(),["position","positionPrev","positionNext"].forEach(function(w){r.attributes[w].value=n.attributes[w].value});var f=["dist","distAll","start","offset","color"];f.forEach(function(w){r.attributes[w].init(r.vertexCount)}),r.indices=n.indices;var d=[],p=a.get("trailColor"),g=a.get("trailOpacity"),v=p!=null,m=g!=null;this.updateWorldTransform();var y=this.worldTransform.x.len(),_=this.worldTransform.y.len(),x=this.worldTransform.z.len(),A=0,E=0;e.each(function(w){var b=e.getItemLayout(w),M=m?g:jt(e,w),T=Zt(e,w);M==null&&(M=1),d=R.parseColor(v?p:T,d),d[3]*=M;for(var P=u?n.getPolylineVertexCount(b):n.getCubicCurveVertexCount(b[0],b[1],b[2],b[3]),O=0,D=[],N=[],B=A;B<A+P;B++)r.attributes.position.get(B,D),D[0]*=y,D[1]*=_,D[2]*=x,B>A&&(O+=of.dist(D,N)),r.attributes.dist.set(B,O),of.copy(N,D);E=Math.max(E,O);for(var z=Math.random()*(h?O:c),B=A;B<A+P;B++)r.attributes.distAll.set(B,O),r.attributes.start.set(B,z),r.attributes.offset.set(B,Py(n.attributes.offset.get(B))*s/2),r.attributes.color.set(B,d);A+=P}),this.material.set("spotSize",E*.1*o),this.material.set("spotIntensity",a.get("spotIntensity")),r.dirty()},setAnimationTime:function(e){this.material.set("time",e)}});R.Shader.import(Sl);function Ny(e){return e.radius!=null?e.radius:e.size!=null?Math.max(e.size[0],e.size[1],e.size[2]):100}const Iy=ti.extend({type:"lines3D",__ecgl__:!0,init:function(e,t){this.groupGL=new R.Node,this._meshLinesMaterial=new R.Material({shader:R.createShader("ecgl.meshLines3D"),transparent:!0,depthMask:!1}),this._linesMesh=new R.Mesh({geometry:new pr,material:this._meshLinesMaterial,$ignorePicking:!0}),this._trailMesh=new Dy},render:function(e,t,n){this.groupGL.add(this._linesMesh);var i=e.coordinateSystem,r=e.getData();if(i&&i.viewGL){var a=i.viewGL;a.add(this.groupGL),this._updateLines(e,t,n);var s=i.viewGL.isLinearSpace()?"define":"undefine";this._linesMesh.material[s]("fragment","SRGB_DECODE"),this._trailMesh.material[s]("fragment","SRGB_DECODE")}var o=this._trailMesh;if(o.stopAnimation(),e.get("effect.show")){this.groupGL.add(o),o.updateData(r,n,this._linesMesh.geometry),o.__time=o.__time||0;var l=3600*1e3;this._curveEffectsAnimator=o.animate("",{loop:!0}).when(l,{__time:l}).during(function(){o.setAnimationTime(o.__time)}).start()}else this.groupGL.remove(o),this._curveEffectsAnimator=null;this._linesMesh.material.blend=this._trailMesh.material.blend=e.get("blendMode")==="lighter"?R.additiveBlend:null},pauseEffect:function(){this._curveEffectsAnimator&&this._curveEffectsAnimator.pause()},resumeEffect:function(){this._curveEffectsAnimator&&this._curveEffectsAnimator.resume()},toggleEffect:function(){var e=this._curveEffectsAnimator;e&&(e.isPaused()?e.resume():e.pause())},_updateLines:function(e,t,n){var i=e.getData(),r=e.coordinateSystem,a=this._linesMesh.geometry,s=e.get("polyline");a.expandLine=!0;var o=Ny(r);a.segmentScale=o/20;var l="lineStyle.width".split("."),c=n.getDevicePixelRatio();i.each(function(d){var p=i.getItemModel(d),g=p.get(l);g==null&&(g=1),i.setItemVisual(d,"lineWidth",g)}),a.useNativeLine=!1;var h=0,u=0;i.each(function(d){var p=i.getItemLayout(d);s?(h+=a.getPolylineVertexCount(p),u+=a.getPolylineTriangleCount(p)):(h+=a.getCubicCurveVertexCount(p[0],p[1],p[2],p[3]),u+=a.getCubicCurveTriangleCount(p[0],p[1],p[2],p[3]))}),a.setVertexCount(h),a.setTriangleCount(u),a.resetOffset();var f=[];i.each(function(d){var p=i.getItemLayout(d),g=Zt(i,d),v=jt(i,d),m=i.getItemVisual(d,"lineWidth")*c;v==null&&(v=1),f=R.parseColor(g,f),f[3]*=v,s?a.addPolyline(p,f,m):a.addCubicCurve(p[0],p[1],p[2],p[3],f,m)}),a.dirty()},remove:function(){this.groupGL.removeAll()},dispose:function(){this.groupGL.removeAll()}});function Oy(e){e.registerChartView(Iy),e.registerSeriesModel(Ry),e.registerLayout(Cy),e.registerAction({type:"lines3DPauseEffect",event:"lines3deffectpaused",update:"series.lines3D:pauseEffect"},function(){}),e.registerAction({type:"lines3DResumeEffect",event:"lines3deffectresumed",update:"series.lines3D:resumeEffect"},function(){}),e.registerAction({type:"lines3DToggleEffect",event:"lines3deffectchanged",update:"series.lines3D:toggleEffect"},function(){})}mn(Oy);function lf(e,t){for(var n=[],i=0;i<t.length;i++)n.push(e.dataToPoint(t[i]));return n}var om=ei.extend({type:"series.polygons3D",getRegionModel:function(e){return this.getData().getItemModel(e)},getRegionPolygonCoords:function(e){var t=this.coordinateSystem,n=this.getData().getItemModel(e),i=n.option instanceof Array?n.option:n.getShallow("coords");n.get("multiPolygon")||(i=[i]);for(var r=[],a=0;a<i.length;a++){for(var s=[],o=1;o<i[a].length;o++)s.push(lf(t,i[a][o]));r.push({exterior:lf(t,i[a][0]),interiors:s})}return r},getInitialData:function(e){var t=new vi(["value"],this);return t.hasItemOption=!1,t.initData(e.data,[],function(n,i,r,a){if(n instanceof Array)return NaN;t.hasItemOption=!0;var s=n.value;if(s!=null)return s instanceof Array?s[a]:s}),t},defaultOption:{show:!0,data:null,multiPolygon:!1,progressiveThreshold:1e3,progressive:1e3,zlevel:-10,label:{show:!1,distance:2,textStyle:{fontSize:20,color:"#000",backgroundColor:"rgba(255,255,255,0.7)",padding:3,borderRadius:4}},itemStyle:{color:"#fff",borderWidth:0,borderColor:"#333"},emphasis:{itemStyle:{color:"#639fc0"},label:{show:!0}}}});pt(om.prototype,Qa);const Uy=om,Fy=ti.extend({type:"polygons3D",__ecgl__:!0,init:function(e,t){this.groupGL=new R.Node,this._geo3DBuilderList=[],this._currentStep=0},render:function(e,t,n){this.groupGL.removeAll();var i=e.coordinateSystem;i&&i.viewGL&&i.viewGL.add(this.groupGL);var r=this._geo3DBuilderList[0];r||(r=new Va(n),r.extrudeY=i.type!=="mapbox3D"&&i.type!=="maptalks3D",this._geo3DBuilderList[0]=r),this._updateShaderDefines(i,r),r.update(e,t,n),this._geo3DBuilderList.length=1,this.groupGL.add(r.rootNode)},incrementalPrepareRender:function(e,t,n){this.groupGL.removeAll();var i=e.coordinateSystem;i&&i.viewGL&&i.viewGL.add(this.groupGL),this._currentStep=0},incrementalRender:function(e,t,n,i){var r=this._geo3DBuilderList[this._currentStep],a=t.coordinateSystem;r||(r=new Va(i),r.extrudeY=a.type!=="mapbox3D"&&a.type!=="maptalks3D",this._geo3DBuilderList[this._currentStep]=r),r.update(t,n,i,e.start,e.end),this.groupGL.add(r.rootNode),this._updateShaderDefines(a,r),this._currentStep++},_updateShaderDefines:function(e,t){var n=e.viewGL.isLinearSpace()?"define":"undefine";t.rootNode.traverse(function(i){i.material&&(i.material[n]("fragment","SRGB_DECODE"),(e.type==="mapbox3D"||e.type==="maptalks3D")&&(i.material.define("fragment","NORMAL_UP_AXIS",2),i.material.define("fragment","NORMAL_FRONT_AXIS",1)))})},remove:function(){this.groupGL.removeAll()},dispose:function(){this.groupGL.removeAll(),this._geo3DBuilderList.forEach(function(e){e.dispose()})}});function By(e){e.registerChartView(Fy),e.registerSeriesModel(Uy)}mn(By);var lm=ei.extend({type:"series.surface",dependencies:["globe","grid3D","geo3D"],visualStyleAccessPath:"itemStyle",formatTooltip:function(e){return Ws(this,e)},getInitialData:function(e,t){var n=e.data;function i(Y){return!(isNaN(Y.min)||isNaN(Y.max)||isNaN(Y.step))}function r(Y){var F=Yd;return Math.max(F(Y.min),F(Y.max),F(Y.step))+1}if(!n)if(e.parametric){var x=e.parametricEquation||{},A=x.u||{},E=x.v||{};["u","v"].forEach(function(F){i(x[F])}),["x","y","z"].forEach(function(F){x[F]});var w=Math.floor((A.max+A.step-A.min)/A.step),b=Math.floor((E.max+E.step-E.min)/E.step);n=new Float32Array(w*b*5);for(var M=r(A),T=r(E),f=0,d=0;d<b;d++)for(var p=0;p<w;p++){var P=p*A.step+A.min,O=d*E.step+E.min,D=Qs(Math.min(P,A.max),M),N=Qs(Math.min(O,E.max),T),g=x.x(D,N),v=x.y(D,N),_=x.z(D,N);n[f++]=g,n[f++]=v,n[f++]=_,n[f++]=D,n[f++]=N}}else{var a=e.equation||{},s=a.x||{},o=a.y||{};if(["x","y"].forEach(function(Y){i(a[Y])}),typeof a.z!="function")return;var l=Math.floor((s.max+s.step-s.min)/s.step),c=Math.floor((o.max+o.step-o.min)/o.step);n=new Float32Array(l*c*3);for(var h=r(s),u=r(o),f=0,d=0;d<c;d++)for(var p=0;p<l;p++){var g=p*s.step+s.min,v=d*o.step+o.min,m=Qs(Math.min(g,s.max),h),y=Qs(Math.min(v,o.max),u),_=a.z(m,y);n[f++]=m,n[f++]=y,n[f++]=_}}var B=["x","y","z"];e.parametric&&B.push("u","v");var z=El(this,B,n);return z},defaultOption:{coordinateSystem:"cartesian3D",zlevel:-10,grid3DIndex:0,shading:"lambert",parametric:!1,wireframe:{show:!0,lineStyle:{color:"rgba(0,0,0,0.5)",width:1}},equation:{x:{min:-1,max:1,step:.1},y:{min:-1,max:1,step:.1},z:null},parametricEquation:{u:{min:-1,max:1,step:.1},v:{min:-1,max:1,step:.1},x:null,y:null,z:null},dataShape:null,itemStyle:{},animationDurationUpdate:500}});pt(lm.prototype,Qa);const zy=lm;var Cr=Ot.vec3;function Gy(e){return isNaN(e[0])||isNaN(e[1])||isNaN(e[2])}const Hy=ti.extend({type:"surface",__ecgl__:!0,init:function(e,t){this.groupGL=new R.Node},render:function(e,t,n){var i=this._prevSurfaceMesh;this._prevSurfaceMesh=this._surfaceMesh,this._surfaceMesh=i,this._surfaceMesh||(this._surfaceMesh=this._createSurfaceMesh()),this.groupGL.remove(this._prevSurfaceMesh),this.groupGL.add(this._surfaceMesh);var r=e.coordinateSystem,a=e.get("shading"),s=e.getData(),o="ecgl."+a;if((!this._surfaceMesh.material||this._surfaceMesh.material.shader.name!==o)&&(this._surfaceMesh.material=R.createMaterial(o,["VERTEX_COLOR","DOUBLE_SIDED"])),R.setMaterialFromModel(a,this._surfaceMesh.material,e,n),r&&r.viewGL){r.viewGL.add(this.groupGL);var l=r.viewGL.isLinearSpace()?"define":"undefine";this._surfaceMesh.material[l]("fragment","SRGB_DECODE")}var c=e.get("parametric"),h=e.get("dataShape");h||(h=this._getDataShape(s,c));var u=e.getModel("wireframe"),f=u.get("lineStyle.width"),d=u.get("show")&&f>0;this._updateSurfaceMesh(this._surfaceMesh,e,h,d);var p=this._surfaceMesh.material;d?(p.define("WIREFRAME_QUAD"),p.set("wireframeLineWidth",f),p.set("wireframeLineColor",R.parseColor(u.get("lineStyle.color")))):p.undefine("WIREFRAME_QUAD"),this._initHandler(e,n),this._updateAnimation(e)},_updateAnimation:function(e){R.updateVertexAnimation([["prevPosition","position"],["prevNormal","normal"]],this._prevSurfaceMesh,this._surfaceMesh,e)},_createSurfaceMesh:function(){var e=new R.Mesh({geometry:new R.Geometry({dynamic:!0,sortTriangles:!0}),shadowDepthMaterial:new R.Material({shader:new R.Shader(R.Shader.source("ecgl.sm.depth.vertex"),R.Shader.source("ecgl.sm.depth.fragment"))}),culling:!1,renderOrder:10,renderNormal:!0});return e.geometry.createAttribute("barycentric","float",4),e.geometry.createAttribute("prevPosition","float",3),e.geometry.createAttribute("prevNormal","float",3),Object.assign(e.geometry,Mh),e},_initHandler:function(e,t){var n=e.getData(),i=this._surfaceMesh,r=e.coordinateSystem;function a(o,l){for(var c=1/0,h=-1,u=[],f=0;f<o.length;f++){i.geometry.attributes.position.get(o[f],u);var d=Cr.dist(l.array,u);d<c&&(c=d,h=o[f])}return h}i.seriesIndex=e.seriesIndex;var s=-1;i.off("mousemove"),i.off("mouseout"),i.on("mousemove",function(o){var l=a(o.triangle,o.point);if(l>=0){var c=[];i.geometry.attributes.position.get(l,c);for(var h=r.pointToData(c),u=1/0,f=-1,d=[],p=0;p<n.count();p++){d[0]=n.get("x",p),d[1]=n.get("y",p),d[2]=n.get("z",p);var g=Cr.squaredDistance(d,h);g<u&&(f=p,u=g)}f!==s&&t.dispatchAction({type:"grid3DShowAxisPointer",value:h}),s=f,i.dataIndex=f}else i.dataIndex=-1},this),i.on("mouseout",function(o){s=-1,i.dataIndex=-1,t.dispatchAction({type:"grid3DHideAxisPointer"})},this)},_updateSurfaceMesh:function(e,t,n,i){var r=e.geometry,a=t.getData(),s=a.getLayout("points"),o=0;a.each(function(Te){a.hasValue(Te)||o++});var l=o||i,c=r.attributes.position,h=r.attributes.normal,u=r.attributes.texcoord0,f=r.attributes.barycentric,d=r.attributes.color,p=n[0],g=n[1],v=t.get("shading"),m=v!=="color";if(l){var y=(p-1)*(g-1)*4;c.init(y),i&&f.init(y)}else c.value=new Float32Array(s);d.init(r.vertexCount),u.init(r.vertexCount);var _=[0,3,1,1,3,2],x=[[1,1,0,0],[0,1,0,1],[1,0,0,1],[1,0,1,0]],A=r.indices=new(r.vertexCount>65535?Uint32Array:Uint16Array)((p-1)*(g-1)*6),E=function(Te,ht,we){we[1]=Te*g+ht,we[0]=Te*g+ht+1,we[3]=(Te+1)*g+ht+1,we[2]=(Te+1)*g+ht},w=!1;if(l){var b=[],M=[],T=0;m?h.init(r.vertexCount):h.value=null;for(var P=[[],[],[]],O=[],D=[],N=Cr.create(),B=function(Te,ht,we){var ct=ht*3;return we[0]=Te[ct],we[1]=Te[ct+1],we[2]=Te[ct+2],we},z=new Float32Array(s.length),Y=new Float32Array(s.length/3*4),F=0;F<a.count();F++)if(a.hasValue(F)){var Pe=R.parseColor(Zt(a,F)),J=jt(a,F);J!=null&&(Pe[3]*=J),Pe[3]<.99&&(w=!0);for(var V=0;V<4;V++)Y[F*4+V]=Pe[V]}for(var ce=[1e7,1e7,1e7],F=0;F<p-1;F++)for(var fe=0;fe<g-1;fe++){var ye=F*(g-1)+fe,W=ye*4;E(F,fe,b);for(var Q=!1,V=0;V<4;V++)B(s,b[V],M),Gy(M)&&(Q=!0);for(var V=0;V<4;V++)Q?c.set(W+V,ce):(B(s,b[V],M),c.set(W+V,M)),i&&f.set(W+V,x[V]);for(var V=0;V<6;V++)A[T++]=_[V]+W;if(m&&!Q)for(var V=0;V<2;V++){for(var de=V*3,se=0;se<3;se++){var Me=b[_[de]+se];B(s,Me,P[se])}Cr.sub(O,P[0],P[1]),Cr.sub(D,P[1],P[2]),Cr.cross(N,O,D);for(var se=0;se<3;se++){var Ae=b[_[de]+se]*3;z[Ae]=z[Ae]+N[0],z[Ae+1]=z[Ae+1]+N[1],z[Ae+2]=z[Ae+2]+N[2]}}}if(m)for(var F=0;F<z.length/3;F++)B(z,F,N),Cr.normalize(N,N),z[F*3]=N[0],z[F*3+1]=N[1],z[F*3+2]=N[2];for(var Pe=[],G=[],F=0;F<p-1;F++)for(var fe=0;fe<g-1;fe++){var ye=F*(g-1)+fe,W=ye*4;E(F,fe,b);for(var V=0;V<4;V++){for(var se=0;se<4;se++)Pe[se]=Y[b[V]*4+se];d.set(W+V,Pe),m&&(B(z,b[V],N),h.set(W+V,N));var Me=b[V];G[0]=Me%g/(g-1),G[1]=Math.floor(Me/g)/(p-1),u.set(W+V,G)}ye++}}else{for(var G=[],F=0;F<a.count();F++){G[0]=F%g/(g-1),G[1]=Math.floor(F/g)/(p-1);var Pe=R.parseColor(Zt(a,F)),J=jt(a,F);J!=null&&(Pe[3]*=J),Pe[3]<.99&&(w=!0),d.set(F,Pe),u.set(F,G)}for(var b=[],ke=0,F=0;F<p-1;F++)for(var fe=0;fe<g-1;fe++){E(F,fe,b);for(var V=0;V<6;V++)A[ke++]=b[_[V]]}m?r.generateVertexNormals():h.value=null}e.material.get("normalMap")&&r.generateTangents(),r.updateBoundingBox(),r.dirty(),e.material.transparent=w,e.material.depthMask=!w},_getDataShape:function(e,t){for(var n=-1/0,i=0,r=0,a=!1,s=t?"u":"x",o=e.count(),l=0;l<o;l++){var c=e.get(s,l);c<n&&(r=0,i++),n=c,r++}if((!i||r===1)&&(a=!0),!a)return[i+1,r];for(var h=Math.floor(Math.sqrt(o));h>0;){if(Math.floor(o/h)===o/h)return[h,o/h];h--}return h=Math.floor(Math.sqrt(o)),[h,h]},dispose:function(){this.groupGL.removeAll()},remove:function(){this.groupGL.removeAll()}});function Vy(e){e.registerChartView(Hy),e.registerSeriesModel(zy),e.registerLayout(function(t,n){t.eachSeriesByType("surface",function(i){var r=i.coordinateSystem;!r||r.type;var a=i.getData(),s=new Float32Array(3*a.count()),o=[NaN,NaN,NaN];if(r&&r.type==="cartesian3D"){var l=r.dimensions,c=l.map(function(h){return i.coordDimToDataDim(h)[0]});a.each(c,function(h,u,f,d){var p;a.hasValue(d)?p=r.dataToPoint([h,u,f]):p=o,s[d*3]=p[0],s[d*3+1]=p[1],s[d*3+2]=p[2]})}a.setLayout("points",s)})})}mn(Vy);function cf(e,t){for(var n=[],i=0;i<t.length;i++)n.push(e.dataToPoint(t[i]));return n}var ts=ei.extend({type:"series.map3D",layoutMode:"box",coordinateSystem:null,visualStyleAccessPath:"itemStyle",optionUpdated:function(e){var t=this.get("coordinateSystem");t==null||t==="geo3D"||(this.get("groundPlane.show")&&(this.option.groundPlane.show=!1),this._geo=null)},getInitialData:function(e){e.data=this.getFilledRegions(e.data,e.map);var t=Gs(e.data,{coordDimensions:["value"]}),n=new vi(t,this);n.initData(e.data);var i={};return n.each(function(r){var a=n.getName(r),s=n.getItemModel(r);i[a]=s}),this._regionModelMap=i,n},formatTooltip:function(e){return Ws(this,e)},getRegionModel:function(e){var t=this.getData().getName(e);return this._regionModelMap[t]||new dl(null,this)},getRegionPolygonCoords:function(e){var t=this.coordinateSystem,n=this.getData().getName(e);if(t.transform){var i=t.getRegion(n);return i?i.geometries:[]}else{this._geo||(this._geo=qp.createGeo3D(this));for(var i=this._geo.getRegion(n),r=[],a=0;a<i.geometries.length;a++){var s=i.geometries[a],o=[],l=cf(t,s.exterior);if(o&&o.length)for(var c=0;c<s.interiors.length;c++)o.push(cf(t,o[c]));r.push({interiors:o,exterior:l})}return r}},getFormattedLabel:function(e,t){var n=gr.getFormattedLabel(this,e,t);return n==null&&(n=this.getData().getName(e)),n},defaultOption:{coordinateSystem:"geo3D",data:null}});pt(ts.prototype,Bp);pt(ts.prototype,_l);pt(ts.prototype,Ka);pt(ts.prototype,$a);pt(ts.prototype,Qa);const ky=ts,Wy=ti.extend({type:"map3D",__ecgl__:!0,init:function(e,t){this._geo3DBuilder=new Va(t),this.groupGL=new R.Node},render:function(e,t,n){var i=e.coordinateSystem;if(!(!i||!i.viewGL)){if(this.groupGL.add(this._geo3DBuilder.rootNode),i.viewGL.add(this.groupGL),i.type==="geo3D"){this._sceneHelper||(this._sceneHelper=new cr,this._sceneHelper.initLight(this.groupGL)),this._sceneHelper.setScene(i.viewGL.scene),this._sceneHelper.updateLight(e),i.viewGL.setPostEffect(e.getModel("postEffect"),n),i.viewGL.setTemporalSuperSampling(e.getModel("temporalSuperSampling"));var r=this._control;r||(r=this._control=new yl({zr:n.getZr()}),this._control.init());var a=e.getModel("viewControl");r.setViewGL(i.viewGL),r.setFromViewControlModel(a,0),r.off("update"),r.on("update",function(){n.dispatchAction({type:"map3DChangeCamera",alpha:r.getAlpha(),beta:r.getBeta(),distance:r.getDistance(),from:this.uid,map3DId:e.id})}),this._geo3DBuilder.extrudeY=!0}else this._control&&(this._control.dispose(),this._control=null),this._sceneHelper&&(this._sceneHelper.dispose(),this._sceneHelper=null),e.getData().getLayout("geo3D"),this._geo3DBuilder.extrudeY=!1;this._geo3DBuilder.update(e,t,n,0,e.getData().count());var s=i.viewGL.isLinearSpace()?"define":"undefine";this._geo3DBuilder.rootNode.traverse(function(o){o.material&&o.material[s]("fragment","SRGB_DECODE")})}},afterRender:function(e,t,n,i){var r=i.renderer,a=e.coordinateSystem;a&&a.type==="geo3D"&&(this._sceneHelper.updateAmbientCubemap(r,e,n),this._sceneHelper.updateSkybox(r,e,n))},dispose:function(){this.groupGL.removeAll(),this._control.dispose(),this._geo3DBuilder.dispose()}});function Xy(e){jp(e),e.registerChartView(Wy),e.registerSeriesModel(ky),e.registerAction({type:"map3DChangeCamera",event:"map3dcamerachanged",update:"series:updateCamera"},function(t,n){n.eachComponent({mainType:"series",subType:"map3D",query:t},function(i){i.setView(t)})})}mn(Xy);const Yy=ei.extend({type:"series.scatterGL",dependencies:["grid","polar","geo","singleAxis"],visualStyleAccessPath:"itemStyle",hasSymbolVisual:!0,getInitialData:function(){return Iv(this)},defaultOption:{coordinateSystem:"cartesian2d",zlevel:10,progressive:1e5,progressiveThreshold:1e5,large:!1,symbol:"circle",symbolSize:10,zoomScale:0,blendMode:"source-over",itemStyle:{opacity:.8},postEffect:{enable:!1,colorCorrection:{exposure:0,brightness:0,contrast:1,saturation:1,enable:!0}}}});function Fi(e){this.viewGL=e}Fi.prototype.reset=function(e,t){this._updateCamera(t.getWidth(),t.getHeight(),t.getDevicePixelRatio()),this._viewTransform=Ov(),this.updateTransform(e,t)};Fi.prototype.updateTransform=function(e,t){var n=e.coordinateSystem;n.getRoamTransform&&(Uv(this._viewTransform,n.getRoamTransform()),this._setCameraTransform(this._viewTransform),t.getZr().refresh())};Fi.prototype.dataToPoint=function(e,t,n){n=e.dataToPoint(t,null,n);var i=this._viewTransform;i&&Kd(n,n,i)};Fi.prototype.removeTransformInPoint=function(e){return this._viewTransform&&Kd(e,e,this._viewTransform),e};Fi.prototype.getZoom=function(){if(this._viewTransform){var e=this._viewTransform;return 1/Math.max(Math.sqrt(e[0]*e[0]+e[1]*e[1]),Math.sqrt(e[2]*e[2]+e[3]*e[3]))}return 1};Fi.prototype._setCameraTransform=function(e){var t=this.viewGL.camera;t.position.set(e[4],e[5],0),t.scale.set(Math.sqrt(e[0]*e[0]+e[1]*e[1]),Math.sqrt(e[2]*e[2]+e[3]*e[3]),1)};Fi.prototype._updateCamera=function(e,t,n){this.viewGL.setViewport(0,0,e,t,n);var i=this.viewGL.camera;i.left=i.top=0,i.bottom=t,i.right=e,i.near=0,i.far=100};const qy=ti.extend({type:"scatterGL",__ecgl__:!0,init:function(e,t){this.groupGL=new R.Node,this.viewGL=new mt("orthographic"),this.viewGL.add(this.groupGL),this._pointsBuilderList=[],this._currentStep=0,this._sizeScale=1,this._glViewHelper=new Fi(this.viewGL)},render:function(e,t,n){if(this.groupGL.removeAll(),this._glViewHelper.reset(e,n),!!e.getData().count()){var i=this._pointsBuilderList[0];i||(i=this._pointsBuilderList[0]=new qr(!0,n)),this._pointsBuilderList.length=1,this.groupGL.add(i.rootNode),this._removeTransformInPoints(e.getData().getLayout("points")),i.update(e,t,n),this.viewGL.setPostEffect(e.getModel("postEffect"),n)}},incrementalPrepareRender:function(e,t,n){this.groupGL.removeAll(),this._glViewHelper.reset(e,n),this._currentStep=0,this.viewGL.setPostEffect(e.getModel("postEffect"),n)},incrementalRender:function(e,t,n,i){if(!(e.end<=e.start)){var r=this._pointsBuilderList[this._currentStep];r||(r=new qr(!0,i),this._pointsBuilderList[this._currentStep]=r),this.groupGL.add(r.rootNode),this._removeTransformInPoints(t.getData().getLayout("points")),r.setSizeScale(this._sizeScale),r.update(t,n,i,e.start,e.end),i.getZr().refresh(),this._currentStep++}},updateTransform:function(e,t,n){if(e.coordinateSystem.getRoamTransform){this._glViewHelper.updateTransform(e,n);var i=this._glViewHelper.getZoom(),r=Math.max((e.get("zoomScale")||0)*(i-1)+1,0);this._sizeScale=r,this._pointsBuilderList.forEach(function(a){a.setSizeScale(r)})}},_removeTransformInPoints:function(e){if(e)for(var t=[],n=0;n<e.length;n+=2)t[0]=e[n],t[1]=e[n+1],this._glViewHelper.removeTransformInPoint(t),e[n]=t[0],e[n+1]=t[1]},dispose:function(){this.groupGL.removeAll(),this._pointsBuilderList.forEach(function(e){e.dispose()})},remove:function(){this.groupGL.removeAll()}});function jy(e){e.registerChartView(qy),e.registerSeriesModel(Yy),e.registerLayout({seriesType:"scatterGL",reset:function(t){var n=t.coordinateSystem,i=t.getData(),r;if(n){var a=n.dimensions.map(function(o){return i.mapDimension(o)}).slice(0,2),s=[];a.length===1?r=function(o){for(var l=new Float32Array((o.end-o.start)*2),c=o.start;c<o.end;c++){var h=(c-o.start)*2,u=i.get(a[0],c),f=n.dataToPoint(u);l[h]=f[0],l[h+1]=f[1]}i.setLayout("points",l)}:a.length===2&&(r=function(o){for(var l=new Float32Array((o.end-o.start)*2),c=o.start;c<o.end;c++){var h=(c-o.start)*2,u=i.get(a[0],c),f=i.get(a[1],c);s[0]=u,s[1]=f,s=n.dataToPoint(s),l[h]=s[0],l[h+1]=s[1]}i.setLayout("points",l)})}return{progress:r}}})}mn(jy);function Zy(e,t,n,i,r){for(var a=new Bv(i),s=0;s<e.length;s++)a.addNode(Ye.firstNotNull(e[s].id,e[s].name,s),s);for(var o=[],l=[],c=0,s=0;s<t.length;s++){var h=t[s],u=h.source,f=h.target;a.addEdge(u,f,c)&&(l.push(h),o.push(Ye.firstNotNull(h.id,u+" > "+f)),c++)}var d,p=Gs(e,{coordDimensions:["value"]});d=new vi(p,n),d.initData(e);var g=new vi(["value"],n);return g.initData(l,o),r&&r(d,g),Fv({mainData:d,struct:a,structAttr:"graph",datas:{node:d,edge:g},datasAttr:{node:"data",edge:"edgeData"}}),a.update(),a}var xs=ei.extend({type:"series.graphGL",visualStyleAccessPath:"itemStyle",hasSymbolVisual:!0,init:function(e){xs.superApply(this,"init",arguments),this.legendDataProvider=function(){return this._categoriesData},this._updateCategoriesData()},mergeOption:function(e){xs.superApply(this,"mergeOption",arguments),this._updateCategoriesData()},getFormattedLabel:function(e,t,n,i){var r=gr.getFormattedLabel(this,e,t,n,i);if(r==null){var a=this.getData(),s=a.dimensions[a.dimensions.length-1];r=a.get(s,e)}return r},getInitialData:function(e,t){var n=e.edges||e.links||[],i=e.data||e.nodes||[],r=this;if(i&&n)return Zy(i,n,this,!0,a).data;function a(s,o){s.wrapMethod("getItemModel",function(u){const f=r._categoriesModels,d=u.getShallow("category"),p=f[d];return p&&(p.parentModel=u.parentModel,u.parentModel=p),u});const l=t.getModel([]).getModel;function c(u,f){const d=l.call(this,u,f);return d.resolveParentPath=h,d}o.wrapMethod("getItemModel",function(u){return u.resolveParentPath=h,u.getModel=c,u});function h(u){if(u&&(u[0]==="label"||u[1]==="label")){const f=u.slice();return u[0]==="label"?f[0]="edgeLabel":u[1]==="label"&&(f[1]="edgeLabel"),f}return u}}},getGraph:function(){return this.getData().graph},getEdgeData:function(){return this.getGraph().edgeData},getCategoriesData:function(){return this._categoriesData},formatTooltip:function(e,t,n){if(n==="edge"){var i=this.getData(),r=this.getDataParams(e,n),a=i.graph.getEdgeByIndex(e),s=i.getName(a.node1.dataIndex),o=i.getName(a.node2.dataIndex),l=[];return s!=null&&l.push(s),o!=null&&l.push(o),l=ba(l.join(" > ")),r.value&&(l+=" : "+ba(r.value)),l}else return xs.superApply(this,"formatTooltip",arguments)},_updateCategoriesData:function(){var e=(this.option.categories||[]).map(function(n){return n.value!=null?n:Object.assign({value:0},n)}),t=new vi(["value"],this);t.initData(e),this._categoriesData=t,this._categoriesModels=t.mapArray(function(n){return t.getItemModel(n,!0)})},setView:function(e){e.zoom!=null&&(this.option.zoom=e.zoom),e.offset!=null&&(this.option.offset=e.offset)},setNodePosition:function(e){for(var t=0;t<e.length/2;t++){var n=e[t*2],i=e[t*2+1],r=this.getData().getRawDataItem(t);r.x=n,r.y=i}},isAnimationEnabled:function(){return xs.superCall(this,"isAnimationEnabled")&&!(this.get("layout")==="force"&&this.get("force.layoutAnimation"))},defaultOption:{zlevel:10,z:2,legendHoverLink:!0,layout:"forceAtlas2",forceAtlas2:{initLayout:null,GPU:!0,steps:1,maxSteps:1e3,repulsionByDegree:!0,linLogMode:!1,strongGravityMode:!1,gravity:1,edgeWeightInfluence:1,edgeWeight:[1,4],nodeWeight:[1,4],preventOverlap:!1,gravityCenter:null},focusNodeAdjacency:!0,focusNodeAdjacencyOn:"mouseover",left:"center",top:"center",symbol:"circle",symbolSize:5,roam:!1,center:null,zoom:1,label:{show:!1,formatter:"{b}",position:"right",distance:5,textStyle:{fontSize:14}},itemStyle:{},lineStyle:{color:"#aaa",width:1,opacity:.5},emphasis:{label:{show:!0}},animation:!1}});const Ky=xs;var Vt=Ot.vec2,hf=[[0,0],[1,1]],cm=je.extend(function(){return{segmentScale:4,dynamic:!0,useNativeLine:!0,attributes:{position:new je.Attribute("position","float",2,"POSITION"),normal:new je.Attribute("normal","float",2),offset:new je.Attribute("offset","float",1),color:new je.Attribute("color","float",4,"COLOR")}}},{resetOffset:function(){this._vertexOffset=0,this._faceOffset=0,this._itemVertexOffsets=[]},setVertexCount:function(e){var t=this.attributes;this.vertexCount!==e&&(t.position.init(e),t.color.init(e),this.useNativeLine||(t.offset.init(e),t.normal.init(e)),e>65535?this.indices instanceof Uint16Array&&(this.indices=new Uint32Array(this.indices)):this.indices instanceof Uint32Array&&(this.indices=new Uint16Array(this.indices)))},setTriangleCount:function(e){this.triangleCount!==e&&(e===0?this.indices=null:this.indices=this.vertexCount>65535?new Uint32Array(e*3):new Uint16Array(e*3))},_getCubicCurveApproxStep:function(e,t,n,i){var r=Vt.dist(e,t)+Vt.dist(n,t)+Vt.dist(i,n),a=1/(r+1)*this.segmentScale;return a},getCubicCurveVertexCount:function(e,t,n,i){var r=this._getCubicCurveApproxStep(e,t,n,i),a=Math.ceil(1/r);return this.useNativeLine?a*2:a*2+2},getCubicCurveTriangleCount:function(e,t,n,i){var r=this._getCubicCurveApproxStep(e,t,n,i),a=Math.ceil(1/r);return this.useNativeLine?0:a*2},getLineVertexCount:function(){return this.getPolylineVertexCount(hf)},getLineTriangleCount:function(){return this.getPolylineTriangleCount(hf)},getPolylineVertexCount:function(e){var t;if(typeof e=="number")t=e;else{var n=typeof e[0]!="number";t=n?e.length:e.length/2}return this.useNativeLine?(t-1)*2:(t-1)*2+2},getPolylineTriangleCount:function(e){var t;if(typeof e=="number")t=e;else{var n=typeof e[0]!="number";t=n?e.length:e.length/2}return this.useNativeLine?0:(t-1)*2},addCubicCurve:function(e,t,n,i,r,a){a==null&&(a=1);for(var s=e[0],o=e[1],l=t[0],c=t[1],h=n[0],u=n[1],f=i[0],d=i[1],p=this._getCubicCurveApproxStep(e,t,n,i),g=p*p,v=g*p,m=3*p,y=3*g,_=6*g,x=6*v,A=s-l*2+h,E=o-c*2+u,w=(l-h)*3-s+f,b=(c-u)*3-o+d,M=s,T=o,P=(l-s)*m+A*y+w*v,O=(c-o)*m+E*y+b*v,D=A*_+w*x,N=E*_+b*x,B=w*x,z=b*x,Y=0,F=0,J=Math.ceil(1/p),V=new Float32Array((J+1)*3),V=[],ce=0,F=0;F<J+1;F++)V[ce++]=M,V[ce++]=T,M+=P,T+=O,P+=D,O+=N,D+=B,N+=z,Y+=p,Y>1&&(M=P>0?Math.min(M,f):Math.max(M,f),T=O>0?Math.min(T,d):Math.max(T,d));this.addPolyline(V,r,a)},addLine:function(e,t,n,i){this.addPolyline([e,t],n,i)},addPolyline:function(){var e=Vt.create(),t=Vt.create(),n=Vt.create(),i=Vt.create(),r=[],a=[],s=[];return function(o,l,c,h,u){if(o.length){var f=typeof o[0]!="number";if(u==null&&(u=f?o.length:o.length/2),!(u<2)){h==null&&(h=0),c==null&&(c=1),this._itemVertexOffsets.push(this._vertexOffset);for(var d=f?typeof l[0]!="number":l.length/4===u,p=this.attributes.position,g=this.attributes.color,v=this.attributes.offset,m=this.attributes.normal,y=this.indices,_=this._vertexOffset,x,A=0;A<u;A++){if(f)r=o[A+h],d?x=l[A+h]:x=l;else{var E=A*2+h;if(r=r||[],r[0]=o[E],r[1]=o[E+1],d){var w=A*4+h;x=x||[],x[0]=l[w],x[1]=l[w+1],x[2]=l[w+2],x[3]=l[w+3]}else x=l}if(this.useNativeLine)A>1&&(p.copy(_,_-1),g.copy(_,_-1),_++);else{var b;if(A<u-1){if(f)Vt.copy(a,o[A+1]);else{var E=(A+1)*2+h;a=a||[],a[0]=o[E],a[1]=o[E+1]}if(A>0){Vt.sub(e,r,s),Vt.sub(t,a,r),Vt.normalize(e,e),Vt.normalize(t,t),Vt.add(i,e,t),Vt.normalize(i,i);var M=c/2*Math.min(1/Vt.dot(e,i),2);n[0]=-i[1],n[1]=i[0],b=M}else Vt.sub(e,a,r),Vt.normalize(e,e),n[0]=-e[1],n[1]=e[0],b=c/2}else Vt.sub(e,r,s),Vt.normalize(e,e),n[0]=-e[1],n[1]=e[0],b=c/2;m.set(_,n),m.set(_+1,n),v.set(_,b),v.set(_+1,-b),Vt.copy(s,r),p.set(_,r),p.set(_+1,r),g.set(_,x),g.set(_+1,x),_+=2}if(this.useNativeLine)g.set(_,x),p.set(_,r),_++;else if(A>0){var T=this._faceOffset*3,y=this.indices;y[T]=_-4,y[T+1]=_-3,y[T+2]=_-2,y[T+3]=_-3,y[T+4]=_-1,y[T+5]=_-2,this._faceOffset+=2}}this._vertexOffset=_}}}}(),setItemColor:function(e,t){for(var n=this._itemVertexOffsets[e],i=e<this._itemVertexOffsets.length-1?this._itemVertexOffsets[e+1]:this._vertexOffset,r=n;r<i;r++)this.attributes.color.set(r,t);this.dirty("color")}});fr(cm.prototype,Vs);const hm=cm,$y=`@export ecgl.forceAtlas2.updateNodeRepulsion

#define NODE_COUNT 0

uniform sampler2D positionTex;

uniform vec2 textureSize;
uniform float gravity;
uniform float scaling;
uniform vec2 gravityCenter;

uniform bool strongGravityMode;
uniform bool preventOverlap;

varying vec2 v_Texcoord;

void main() {

 vec4 n0 = texture2D(positionTex, v_Texcoord);

 vec2 force = vec2(0.0);
 for (int i = 0; i < NODE_COUNT; i++) {
 vec2 uv = vec2(
 mod(float(i), textureSize.x) / (textureSize.x - 1.0),
 floor(float(i) / textureSize.x) / (textureSize.y - 1.0)
 );
 vec4 n1 = texture2D(positionTex, uv);

 vec2 dir = n0.xy - n1.xy;
 float d2 = dot(dir, dir);

 if (d2 > 0.0) {
 float factor = 0.0;
 if (preventOverlap) {
 float d = sqrt(d2);
 d = d - n0.w - n1.w;
 if (d > 0.0) {
 factor = scaling * n0.z * n1.z / (d * d);
 }
 else if (d < 0.0) {
 factor = scaling * 100.0 * n0.z * n1.z;
 }
 }
 else {
 factor = scaling * n0.z * n1.z / d2;
 }
 force += dir * factor;
 }
 }

 vec2 dir = gravityCenter - n0.xy;
 float d = 1.0;
 if (!strongGravityMode) {
 d = length(dir);
 }

 force += dir * n0.z * gravity / (d + 1.0);

 gl_FragColor = vec4(force, 0.0, 1.0);
}
@end

@export ecgl.forceAtlas2.updateEdgeAttraction.vertex

attribute vec2 node1;
attribute vec2 node2;
attribute float weight;

uniform sampler2D positionTex;
uniform float edgeWeightInfluence;
uniform bool preventOverlap;
uniform bool linLogMode;

uniform vec2 windowSize: WINDOW_SIZE;

varying vec2 v_Force;

void main() {

 vec4 n0 = texture2D(positionTex, node1);
 vec4 n1 = texture2D(positionTex, node2);

 vec2 dir = n1.xy - n0.xy;
 float d = length(dir);
 float w;
 if (edgeWeightInfluence == 0.0) {
 w = 1.0;
 }
 else if (edgeWeightInfluence == 1.0) {
 w = weight;
 }
 else {
 w = pow(weight, edgeWeightInfluence);
 }
 vec2 offset = vec2(1.0 / windowSize.x, 1.0 / windowSize.y);
 vec2 scale = vec2((windowSize.x - 1.0) / windowSize.x, (windowSize.y - 1.0) / windowSize.y);
 vec2 pos = node1 * scale * 2.0 - 1.0;
 gl_Position = vec4(pos + offset, 0.0, 1.0);
 gl_PointSize = 1.0;

 float factor;
 if (preventOverlap) {
 d = d - n1.w - n0.w;
 }
 if (d <= 0.0) {
 v_Force = vec2(0.0);
 return;
 }

 if (linLogMode) {
 factor = w * log(d) / d;
 }
 else {
 factor = w;
 }
 v_Force = dir * factor;
}
@end

@export ecgl.forceAtlas2.updateEdgeAttraction.fragment

varying vec2 v_Force;

void main() {
 gl_FragColor = vec4(v_Force, 0.0, 0.0);
}
@end

@export ecgl.forceAtlas2.calcWeightedSum.vertex

attribute vec2 node;

varying vec2 v_NodeUv;

void main() {

 v_NodeUv = node;
 gl_Position = vec4(0.0, 0.0, 0.0, 1.0);
 gl_PointSize = 1.0;
}
@end

@export ecgl.forceAtlas2.calcWeightedSum.fragment

varying vec2 v_NodeUv;

uniform sampler2D positionTex;
uniform sampler2D forceTex;
uniform sampler2D forcePrevTex;

void main() {
 vec2 force = texture2D(forceTex, v_NodeUv).rg;
 vec2 forcePrev = texture2D(forcePrevTex, v_NodeUv).rg;

 float mass = texture2D(positionTex, v_NodeUv).z;
 float swing = length(force - forcePrev) * mass;
 float traction = length(force + forcePrev) * 0.5 * mass;

 gl_FragColor = vec4(swing, traction, 0.0, 0.0);
}
@end

@export ecgl.forceAtlas2.calcGlobalSpeed

uniform sampler2D globalSpeedPrevTex;
uniform sampler2D weightedSumTex;
uniform float jitterTolerence;

void main() {
 vec2 weightedSum = texture2D(weightedSumTex, vec2(0.5)).xy;
 float prevGlobalSpeed = texture2D(globalSpeedPrevTex, vec2(0.5)).x;
 float globalSpeed = jitterTolerence * jitterTolerence
 * weightedSum.y / weightedSum.x;
 if (prevGlobalSpeed > 0.0) {
 globalSpeed = min(globalSpeed / prevGlobalSpeed, 1.5) * prevGlobalSpeed;
 }
 gl_FragColor = vec4(globalSpeed, 0.0, 0.0, 1.0);
}
@end

@export ecgl.forceAtlas2.updatePosition

uniform sampler2D forceTex;
uniform sampler2D forcePrevTex;
uniform sampler2D positionTex;
uniform sampler2D globalSpeedTex;

varying vec2 v_Texcoord;

void main() {
 vec2 force = texture2D(forceTex, v_Texcoord).xy;
 vec2 forcePrev = texture2D(forcePrevTex, v_Texcoord).xy;
 vec4 node = texture2D(positionTex, v_Texcoord);

 float globalSpeed = texture2D(globalSpeedTex, vec2(0.5)).r;
 float swing = length(force - forcePrev);
 float speed = 0.1 * globalSpeed / (0.1 + globalSpeed * sqrt(swing));

 float df = length(force);
 if (df > 0.0) {
 speed = min(df * speed, 10.0) / df;

 gl_FragColor = vec4(node.xy + speed * force, node.zw);
 }
 else {
 gl_FragColor = node;
 }
}
@end

@export ecgl.forceAtlas2.edges.vertex
uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;

attribute vec2 node;
attribute vec4 a_Color : COLOR;
varying vec4 v_Color;

uniform sampler2D positionTex;

void main()
{
 gl_Position = worldViewProjection * vec4(
 texture2D(positionTex, node).xy, -10.0, 1.0
 );
 v_Color = a_Color;
}
@end

@export ecgl.forceAtlas2.edges.fragment
uniform vec4 color : [1.0, 1.0, 1.0, 1.0];
varying vec4 v_Color;
void main() {
 gl_FragColor = color * v_Color;
}
@end`;R.Shader.import($y);var ac={repulsionByDegree:!0,linLogMode:!1,strongGravityMode:!1,gravity:1,scaling:1,edgeWeightInfluence:1,jitterTolerence:.1,preventOverlap:!1,dissuadeHubs:!1,gravityCenter:null};function Yt(e){var t={type:R.Texture.FLOAT,minFilter:R.Texture.NEAREST,magFilter:R.Texture.NEAREST};this._positionSourceTex=new R.Texture2D(t),this._positionSourceTex.flipY=!1,this._positionTex=new R.Texture2D(t),this._positionPrevTex=new R.Texture2D(t),this._forceTex=new R.Texture2D(t),this._forcePrevTex=new R.Texture2D(t),this._weightedSumTex=new R.Texture2D(t),this._weightedSumTex.width=this._weightedSumTex.height=1,this._globalSpeedTex=new R.Texture2D(t),this._globalSpeedPrevTex=new R.Texture2D(t),this._globalSpeedTex.width=this._globalSpeedTex.height=1,this._globalSpeedPrevTex.width=this._globalSpeedPrevTex.height=1,this._nodeRepulsionPass=new Bt({fragment:R.Shader.source("ecgl.forceAtlas2.updateNodeRepulsion")}),this._positionPass=new Bt({fragment:R.Shader.source("ecgl.forceAtlas2.updatePosition")}),this._globalSpeedPass=new Bt({fragment:R.Shader.source("ecgl.forceAtlas2.calcGlobalSpeed")}),this._copyPass=new Bt({fragment:R.Shader.source("clay.compositor.output")});var n=function(i){i.blendEquation(i.FUNC_ADD),i.blendFunc(i.ONE,i.ONE)};this._edgeForceMesh=new R.Mesh({geometry:new R.Geometry({attributes:{node1:new R.Geometry.Attribute("node1","float",2),node2:new R.Geometry.Attribute("node2","float",2),weight:new R.Geometry.Attribute("weight","float",1)},dynamic:!0,mainAttribute:"node1"}),material:new R.Material({transparent:!0,shader:R.createShader("ecgl.forceAtlas2.updateEdgeAttraction"),blend:n,depthMask:!1,depthText:!1}),mode:R.Mesh.POINTS}),this._weightedSumMesh=new R.Mesh({geometry:new R.Geometry({attributes:{node:new R.Geometry.Attribute("node","float",2)},dynamic:!0,mainAttribute:"node"}),material:new R.Material({transparent:!0,shader:R.createShader("ecgl.forceAtlas2.calcWeightedSum"),blend:n,depthMask:!1,depthText:!1}),mode:R.Mesh.POINTS}),this._framebuffer=new It({depthBuffer:!1}),this._dummyCamera=new R.OrthographicCamera({left:-1,right:1,top:1,bottom:-1,near:0,far:100}),this._globalSpeed=0}Yt.prototype.updateOption=function(e){for(var t in ac)this[t]=ac[t];var n=this._nodes.length;if(n>5e4?this.jitterTolerence=10:n>5e3?this.jitterTolerence=1:this.jitterTolerence=.1,n>100?this.scaling=2:this.scaling=10,e)for(var t in ac)e[t]!=null&&(this[t]=e[t]);if(this.repulsionByDegree)for(var i=this._positionSourceTex.pixels,r=0;r<this._nodes.length;r++)i[r*4+2]=(this._nodes[r].degree||0)+1};Yt.prototype._updateGravityCenter=function(e){var t=this._nodes,n=this._edges;if(this.gravityCenter)this._gravityCenter=this.gravityCenter;else{for(var i=[1/0,1/0],r=[-1/0,-1/0],a=0;a<t.length;a++)i[0]=Math.min(t[a].x,i[0]),i[1]=Math.min(t[a].y,i[1]),r[0]=Math.max(t[a].x,r[0]),r[1]=Math.max(t[a].y,r[1]);this._gravityCenter=[(i[0]+r[0])*.5,(i[1]+r[1])*.5]}for(var a=0;a<n.length;a++){var s=n[a].node1,o=n[a].node2;t[s].degree=(t[s].degree||0)+1,t[o].degree=(t[o].degree||0)+1}};Yt.prototype.initData=function(e,t){this._nodes=e,this._edges=t,this._updateGravityCenter();var n=Math.ceil(Math.sqrt(e.length)),i=n,r=new Float32Array(n*i*4);this._resize(n,i);for(var a=0,s=0;s<e.length;s++){var o=e[s];r[a++]=o.x||0,r[a++]=o.y||0,r[a++]=o.mass||1,r[a++]=o.size||1}this._positionSourceTex.pixels=r;var l=this._edgeForceMesh.geometry,c=t.length;l.attributes.node1.init(c*2),l.attributes.node2.init(c*2),l.attributes.weight.init(c*2);for(var h=[],s=0;s<t.length;s++){var u=l.attributes,f=t[s].weight;f==null&&(f=1),u.node1.set(s,this.getNodeUV(t[s].node1,h)),u.node2.set(s,this.getNodeUV(t[s].node2,h)),u.weight.set(s,f),u.node1.set(s+c,this.getNodeUV(t[s].node2,h)),u.node2.set(s+c,this.getNodeUV(t[s].node1,h)),u.weight.set(s+c,f)}var d=this._weightedSumMesh.geometry;d.attributes.node.init(e.length);for(var s=0;s<e.length;s++)d.attributes.node.set(s,this.getNodeUV(s,h));l.dirty(),d.dirty(),this._nodeRepulsionPass.material.define("fragment","NODE_COUNT",e.length),this._nodeRepulsionPass.material.setUniform("textureSize",[n,i]),this._inited=!1,this._frame=0};Yt.prototype.getNodes=function(){return this._nodes};Yt.prototype.getEdges=function(){return this._edges};Yt.prototype.step=function(e){this._inited||(this._initFromSource(e),this._inited=!0),this._frame++,this._framebuffer.attach(this._forceTex),this._framebuffer.bind(e);var t=this._nodeRepulsionPass;t.setUniform("strongGravityMode",this.strongGravityMode),t.setUniform("gravity",this.gravity),t.setUniform("gravityCenter",this._gravityCenter),t.setUniform("scaling",this.scaling),t.setUniform("preventOverlap",this.preventOverlap),t.setUniform("positionTex",this._positionPrevTex),t.render(e);var n=this._edgeForceMesh;n.material.set("linLogMode",this.linLogMode),n.material.set("edgeWeightInfluence",this.edgeWeightInfluence),n.material.set("preventOverlap",this.preventOverlap),n.material.set("positionTex",this._positionPrevTex),e.gl.enable(e.gl.BLEND),e.renderPass([n],this._dummyCamera),this._framebuffer.attach(this._weightedSumTex),e.gl.clearColor(0,0,0,0),e.gl.clear(e.gl.COLOR_BUFFER_BIT),e.gl.enable(e.gl.BLEND);var i=this._weightedSumMesh;i.material.set("positionTex",this._positionPrevTex),i.material.set("forceTex",this._forceTex),i.material.set("forcePrevTex",this._forcePrevTex),e.renderPass([i],this._dummyCamera),this._framebuffer.attach(this._globalSpeedTex);var r=this._globalSpeedPass;r.setUniform("globalSpeedPrevTex",this._globalSpeedPrevTex),r.setUniform("weightedSumTex",this._weightedSumTex),r.setUniform("jitterTolerence",this.jitterTolerence),e.gl.disable(e.gl.BLEND),r.render(e);var a=this._positionPass;this._framebuffer.attach(this._positionTex),a.setUniform("globalSpeedTex",this._globalSpeedTex),a.setUniform("positionTex",this._positionPrevTex),a.setUniform("forceTex",this._forceTex),a.setUniform("forcePrevTex",this._forcePrevTex),a.render(e),this._framebuffer.unbind(e),this._swapTexture()};Yt.prototype.update=function(e,t,n){t==null&&(t=1),t=Math.max(t,1);for(var i=0;i<t;i++)this.step(e);n&&n()};Yt.prototype.getNodePositionTexture=function(){return this._inited?this._positionPrevTex:this._positionSourceTex};Yt.prototype.getNodeUV=function(e,t){t=t||[];var n=this._positionTex.width,i=this._positionTex.height;return t[0]=e%n/(n-1),t[1]=Math.floor(e/n)/(i-1)||0,t};Yt.prototype.getNodePosition=function(e,t){var n=this._positionArr,i=this._positionTex.width,r=this._positionTex.height,a=i*r;(!n||n.length!==a*4)&&(n=this._positionArr=new Float32Array(a*4)),this._framebuffer.bind(e),this._framebuffer.attach(this._positionPrevTex),e.gl.readPixels(0,0,i,r,e.gl.RGBA,e.gl.FLOAT,n),this._framebuffer.unbind(e),t||(t=new Float32Array(this._nodes.length*2));for(var s=0;s<this._nodes.length;s++)t[s*2]=n[s*4],t[s*2+1]=n[s*4+1];return t};Yt.prototype.getTextureData=function(e,t){var n=this["_"+t+"Tex"],i=n.width,r=n.height;this._framebuffer.bind(e),this._framebuffer.attach(n);var a=new Float32Array(i*r*4);return e.gl.readPixels(0,0,i,r,e.gl.RGBA,e.gl.FLOAT,a),this._framebuffer.unbind(e),a};Yt.prototype.getTextureSize=function(){return{width:this._positionTex.width,height:this._positionTex.height}};Yt.prototype.isFinished=function(e){return this._frame>e};Yt.prototype._swapTexture=function(){var e=this._positionPrevTex;this._positionPrevTex=this._positionTex,this._positionTex=e;var e=this._forcePrevTex;this._forcePrevTex=this._forceTex,this._forceTex=e;var e=this._globalSpeedPrevTex;this._globalSpeedPrevTex=this._globalSpeedTex,this._globalSpeedTex=e};Yt.prototype._initFromSource=function(e){this._framebuffer.attach(this._positionPrevTex),this._framebuffer.bind(e),this._copyPass.setUniform("texture",this._positionSourceTex),this._copyPass.render(e),e.gl.clearColor(0,0,0,0),this._framebuffer.attach(this._forcePrevTex),e.gl.clear(e.gl.COLOR_BUFFER_BIT),this._framebuffer.attach(this._globalSpeedPrevTex),e.gl.clear(e.gl.COLOR_BUFFER_BIT),this._framebuffer.unbind(e)};Yt.prototype._resize=function(e,t){["_positionSourceTex","_positionTex","_positionPrevTex","_forceTex","_forcePrevTex"].forEach(function(n){this[n].width=e,this[n].height=t,this[n].dirty()},this)};Yt.prototype.dispose=function(e){this._framebuffer.dispose(e),this._copyPass.dispose(e),this._nodeRepulsionPass.dispose(e),this._positionPass.dispose(e),this._globalSpeedPass.dispose(e),this._edgeForceMesh.geometry.dispose(e),this._weightedSumMesh.geometry.dispose(e),this._positionSourceTex.dispose(e),this._positionTex.dispose(e),this._positionPrevTex.dispose(e),this._forceTex.dispose(e),this._forcePrevTex.dispose(e),this._weightedSumTex.dispose(e),this._globalSpeedTex.dispose(e),this._globalSpeedPrevTex.dispose(e)};function Jy(){var e={create:function(){return new Float32Array(2)},dist:function(l,c){var h=c[0]-l[0],u=c[1]-l[1];return Math.sqrt(h*h+u*u)},len:function(l){var c=l[0],h=l[1];return Math.sqrt(c*c+h*h)},scaleAndAdd:function(l,c,h,u){return l[0]=c[0]+h[0]*u,l[1]=c[1]+h[1]*u,l},scale:function(l,c,h){return l[0]=c[0]*h,l[1]=c[1]*h,l},add:function(l,c,h){return l[0]=c[0]+h[0],l[1]=c[1]+h[1],l},sub:function(l,c,h){return l[0]=c[0]-h[0],l[1]=c[1]-h[1],l},normalize:function(l,c){var h=c[0],u=c[1],f=h*h+u*u;return f>0&&(f=1/Math.sqrt(f),l[0]=c[0]*f,l[1]=c[1]*f),l},negate:function(l,c){return l[0]=-c[0],l[1]=-c[1],l},copy:function(l,c){return l[0]=c[0],l[1]=c[1],l},set:function(l,c,h){return l[0]=c,l[1]=h,l}};function t(){this.subRegions=[],this.nSubRegions=0,this.node=null,this.mass=0,this.centerOfMass=null,this.bbox=new Float32Array(4),this.size=0}var n=t.prototype;n.beforeUpdate=function(){for(var l=0;l<this.nSubRegions;l++)this.subRegions[l].beforeUpdate();this.mass=0,this.centerOfMass&&(this.centerOfMass[0]=0,this.centerOfMass[1]=0),this.nSubRegions=0,this.node=null},n.afterUpdate=function(){this.subRegions.length=this.nSubRegions;for(var l=0;l<this.nSubRegions;l++)this.subRegions[l].afterUpdate()},n.addNode=function(l){if(this.nSubRegions===0)if(this.node==null){this.node=l;return}else this._addNodeToSubRegion(this.node),this.node=null;this._addNodeToSubRegion(l),this._updateCenterOfMass(l)},n.findSubRegion=function(l,c){for(var h=0;h<this.nSubRegions;h++){var u=this.subRegions[h];if(u.contain(l,c))return u}},n.contain=function(l,c){return this.bbox[0]<=l&&this.bbox[2]>=l&&this.bbox[1]<=c&&this.bbox[3]>=c},n.setBBox=function(l,c,h,u){this.bbox[0]=l,this.bbox[1]=c,this.bbox[2]=h,this.bbox[3]=u,this.size=(h-l+u-c)/2},n._newSubRegion=function(){var l=this.subRegions[this.nSubRegions];return l||(l=new t,this.subRegions[this.nSubRegions]=l),this.nSubRegions++,l},n._addNodeToSubRegion=function(l){var c=this.findSubRegion(l.position[0],l.position[1]),h=this.bbox;if(!c){var u=(h[0]+h[2])/2,f=(h[1]+h[3])/2,d=(h[2]-h[0])/2,p=(h[3]-h[1])/2,g=l.position[0]>=u?1:0,v=l.position[1]>=f?1:0,c=this._newSubRegion();c.setBBox(g*d+h[0],v*p+h[1],(g+1)*d+h[0],(v+1)*p+h[1])}c.addNode(l)},n._updateCenterOfMass=function(l){this.centerOfMass==null&&(this.centerOfMass=new Float32Array(2));var c=this.centerOfMass[0]*this.mass,h=this.centerOfMass[1]*this.mass;c+=l.position[0]*l.mass,h+=l.position[1]*l.mass,this.mass+=l.mass,this.centerOfMass[0]=c/this.mass,this.centerOfMass[1]=h/this.mass};function i(){this.position=new Float32Array(2),this.force=e.create(),this.forcePrev=e.create(),this.mass=1,this.inDegree=0,this.outDegree=0}function r(l,c){this.source=l,this.target=c,this.weight=1}function a(){this.autoSettings=!0,this.barnesHutOptimize=!0,this.barnesHutTheta=1.5,this.repulsionByDegree=!0,this.linLogMode=!1,this.strongGravityMode=!1,this.gravity=1,this.scaling=1,this.edgeWeightInfluence=1,this.jitterTolerence=.1,this.preventOverlap=!1,this.dissuadeHubs=!1,this.rootRegion=new t,this.rootRegion.centerOfMass=e.create(),this.nodes=[],this.edges=[],this.bbox=new Float32Array(4),this.gravityCenter=null,this._massArr=null,this._swingingArr=null,this._sizeArr=null,this._globalSpeed=0}var s=a.prototype;s.initNodes=function(l,c,h){var u=c.length;this.nodes.length=0;for(var f=typeof h<"u",d=0;d<u;d++){var p=new i;p.position[0]=l[d*2],p.position[1]=l[d*2+1],p.mass=c[d],f&&(p.size=h[d]),this.nodes.push(p)}this._massArr=c,this._swingingArr=new Float32Array(u),f&&(this._sizeArr=h)},s.initEdges=function(l,c){var h=l.length/2;this.edges.length=0;for(var u=0;u<h;u++){var f=l[u*2],d=l[u*2+1],p=this.nodes[f],g=this.nodes[d];if(!p||!g){console.error("Node not exists, try initNodes before initEdges");return}p.outDegree++,g.inDegree++;var v=new r(p,g);c&&(v.weight=c[u]),this.edges.push(v)}},s.updateSettings=function(){if(this.repulsionByDegree)for(var l=0;l<this.nodes.length;l++){var c=this.nodes[l];c.mass=c.inDegree+c.outDegree+1}else for(var l=0;l<this.nodes.length;l++){var c=this.nodes[l];c.mass=this._massArr[l]}},s.update=function(){var l=this.nodes.length;if(this.updateSettings(),this.updateBBox(),this.barnesHutOptimize){this.rootRegion.setBBox(this.bbox[0],this.bbox[1],this.bbox[2],this.bbox[3]),this.rootRegion.beforeUpdate();for(var c=0;c<l;c++)this.rootRegion.addNode(this.nodes[c]);this.rootRegion.afterUpdate()}for(var c=0;c<l;c++){var h=this.nodes[c];e.copy(h.forcePrev,h.force),e.set(h.force,0,0)}for(var c=0;c<l;c++){var u=this.nodes[c];if(this.barnesHutOptimize)this.applyRegionToNodeRepulsion(this.rootRegion,u);else for(var f=c+1;f<l;f++){var d=this.nodes[f];this.applyNodeToNodeRepulsion(u,d,!1)}this.gravity>0&&(this.strongGravityMode?this.applyNodeStrongGravity(u):this.applyNodeGravity(u))}for(var c=0;c<this.edges.length;c++)this.applyEdgeAttraction(this.edges[c]);for(var p=0,g=0,v=e.create(),c=0;c<l;c++){var h=this.nodes[c],m=e.dist(h.force,h.forcePrev);p+=m*h.mass,e.add(v,h.force,h.forcePrev);var y=e.len(v)*.5;g+=y*h.mass,this._swingingArr[c]=m}var _=this.jitterTolerence*this.jitterTolerence*g/p;this._globalSpeed>0&&(_=Math.min(_/this._globalSpeed,1.5)*this._globalSpeed),this._globalSpeed=_;for(var c=0;c<l;c++){var h=this.nodes[c],m=this._swingingArr[c],x=.1*_/(1+_*Math.sqrt(m)),A=e.len(h.force);A>0&&(x=Math.min(A*x,10)/A,e.scaleAndAdd(h.position,h.position,h.force,x))}},s.applyRegionToNodeRepulsion=function(){var l=e.create();return function(h,u){if(h.node)this.applyNodeToNodeRepulsion(h.node,u,!0);else{e.sub(l,u.position,h.centerOfMass);var f=l[0]*l[0]+l[1]*l[1];if(f>this.barnesHutTheta*h.size*h.size){var d=this.scaling*u.mass*h.mass/f;e.scaleAndAdd(u.force,u.force,l,d)}else for(var p=0;p<h.nSubRegions;p++)this.applyRegionToNodeRepulsion(h.subRegions[p],u)}}}(),s.applyNodeToNodeRepulsion=function(){var l=e.create();return function(h,u,f){if(h!=u){e.sub(l,h.position,u.position);var d=l[0]*l[0]+l[1]*l[1];if(d!==0){var p;if(this.preventOverlap){var g=Math.sqrt(d);if(g=g-h.size-u.size,g>0)p=this.scaling*h.mass*u.mass/(g*g);else if(g<0)p=this.scaling*100*h.mass*u.mass;else return}else p=this.scaling*h.mass*u.mass/d;e.scaleAndAdd(h.force,h.force,l,p),e.scaleAndAdd(u.force,u.force,l,-p)}}}}(),s.applyEdgeAttraction=function(){var l=e.create();return function(h){var u=h.source,f=h.target;e.sub(l,u.position,f.position);var d=e.len(l),p;this.edgeWeightInfluence===0?p=1:this.edgeWeightInfluence===1?p=h.weight:p=Math.pow(h.weight,this.edgeWeightInfluence);var g;this.preventOverlap&&(d=d-u.size-f.size,d<=0)||(this.linLogMode?g=-p*Math.log(d+1)/(d+1):g=-p,e.scaleAndAdd(u.force,u.force,l,g),e.scaleAndAdd(f.force,f.force,l,-g))}}(),s.applyNodeGravity=function(){var l=e.create();return function(c){e.sub(l,this.gravityCenter,c.position);var h=e.len(l);e.scaleAndAdd(c.force,c.force,l,this.gravity*c.mass/(h+1))}}(),s.applyNodeStrongGravity=function(){var l=e.create();return function(c){e.sub(l,this.gravityCenter,c.position),e.scaleAndAdd(c.force,c.force,l,this.gravity*c.mass)}}(),s.updateBBox=function(){for(var l=1/0,c=1/0,h=-1/0,u=-1/0,f=0;f<this.nodes.length;f++){var d=this.nodes[f].position;l=Math.min(l,d[0]),c=Math.min(c,d[1]),h=Math.max(h,d[0]),u=Math.max(u,d[1])}this.bbox[0]=l,this.bbox[1]=c,this.bbox[2]=h,this.bbox[3]=u},s.getGlobalSpeed=function(){return this._globalSpeed};var o=null;self.onmessage=function(l){switch(l.data.cmd){case"init":o=new a,o.initNodes(l.data.nodesPosition,l.data.nodesMass,l.data.nodesSize),o.initEdges(l.data.edges,l.data.edgesWeight);break;case"updateConfig":if(o)for(var c in l.data.config)o[c]=l.data.config[c];break;case"update":var h=l.data.steps;if(o){for(var u=0;u<h;u++)o.update();for(var f=o.nodes.length,d=new Float32Array(f*2),u=0;u<f;u++){var p=o.nodes[u];d[u*2]=p.position[0],d[u*2+1]=p.position[1]}self.postMessage({buffer:d.buffer,globalSpeed:o.getGlobalSpeed()},[d.buffer])}else{var g=new Float32Array;self.postMessage({buffer:g.buffer,globalSpeed:o.getGlobalSpeed()},[g.buffer])}break}}}var ys=Jy.toString();ys=ys.slice(ys.indexOf("{")+1,ys.lastIndexOf("}"));var Es={barnesHutOptimize:!0,barnesHutTheta:1.5,repulsionByDegree:!0,linLogMode:!1,strongGravityMode:!1,gravity:1,scaling:1,edgeWeightInfluence:1,jitterTolerence:.1,preventOverlap:!1,dissuadeHubs:!1,gravityCenter:null},Un=function(e){for(var t in Es)this[t]=Es[t];if(e)for(var t in e)this[t]=e[t];this._nodes=[],this._edges=[],this._disposed=!1,this._positionTex=new We({type:oe.FLOAT,flipY:!1,minFilter:oe.NEAREST,magFilter:oe.NEAREST})};Un.prototype.initData=function(e,t){var n=new Blob([ys]),i=window.URL.createObjectURL(n);this._worker=new Worker(i),this._worker.onmessage=this._$onupdate.bind(this),this._nodes=e,this._edges=t,this._frame=0;for(var r=e.length,a=t.length,s=new Float32Array(r*2),o=new Float32Array(r),l=new Float32Array(r),c=new Float32Array(a*2),h=new Float32Array(a),u=0;u<e.length;u++){var f=e[u];s[u*2]=f.x,s[u*2+1]=f.y,o[u]=f.mass==null?1:f.mass,l[u]=f.size==null?1:f.size}for(var u=0;u<t.length;u++){var d=t[u],p=d.node1,g=d.node2;c[u*2]=p,c[u*2+1]=g,h[u]=d.weight==null?1:d.weight}var v=Math.ceil(Math.sqrt(e.length)),m=v,y=new Float32Array(v*m*4),_=this._positionTex;_.width=v,_.height=m,_.pixels=y,this._worker.postMessage({cmd:"init",nodesPosition:s,nodesMass:o,nodesSize:l,edges:c,edgesWeight:h}),this._globalSpeed=1/0};Un.prototype.updateOption=function(e){var t={};for(var n in Es)t[n]=Es[n];var i=this._nodes,r=this._edges,a=i.length;if(a>5e4?t.jitterTolerence=10:a>5e3?t.jitterTolerence=1:t.jitterTolerence=.1,a>100?t.scaling=2:t.scaling=10,a>1e3?t.barnesHutOptimize=!0:t.barnesHutOptimize=!1,e)for(var n in Es)e[n]!=null&&(t[n]=e[n]);if(!t.gravityCenter){for(var s=[1/0,1/0],o=[-1/0,-1/0],l=0;l<i.length;l++)s[0]=Math.min(i[l].x,s[0]),s[1]=Math.min(i[l].y,s[1]),o[0]=Math.max(i[l].x,o[0]),o[1]=Math.max(i[l].y,o[1]);t.gravityCenter=[(s[0]+o[0])*.5,(s[1]+o[1])*.5]}for(var l=0;l<r.length;l++){var c=r[l].node1,h=r[l].node2;i[c].degree=(i[c].degree||0)+1,i[h].degree=(i[h].degree||0)+1}this._worker&&this._worker.postMessage({cmd:"updateConfig",config:t})};Un.prototype.update=function(e,t,n){t==null&&(t=1),t=Math.max(t,1),this._frame+=t,this._onupdate=n,this._worker&&this._worker.postMessage({cmd:"update",steps:Math.round(t)})};Un.prototype._$onupdate=function(e){if(!this._disposed){var t=new Float32Array(e.data.buffer);this._globalSpeed=e.data.globalSpeed,this._positionArr=t,this._updateTexture(t),this._onupdate&&this._onupdate()}};Un.prototype.getNodePositionTexture=function(){return this._positionTex};Un.prototype.getNodeUV=function(e,t){t=t||[];var n=this._positionTex.width,i=this._positionTex.height;return t[0]=e%n/(n-1),t[1]=Math.floor(e/n)/(i-1),t};Un.prototype.getNodes=function(){return this._nodes};Un.prototype.getEdges=function(){return this._edges};Un.prototype.isFinished=function(e){return this._frame>e};Un.prototype.getNodePosition=function(e,t){if(t||(t=new Float32Array(this._nodes.length*2)),this._positionArr)for(var n=0;n<this._positionArr.length;n++)t[n]=this._positionArr[n];return t};Un.prototype._updateTexture=function(e){for(var t=this._positionTex.pixels,n=0,i=0;i<e.length;)t[n++]=e[i++],t[n++]=e[i++],t[n++]=1,t[n++]=1;this._positionTex.dirty()};Un.prototype.dispose=function(e){this._disposed=!0,this._worker=null};const uf=Un;var Qy=an.extend(function(){return{zr:null,viewGL:null,minZoom:.2,maxZoom:5,_needsUpdate:!1,_dx:0,_dy:0,_zoom:1}},function(){this._mouseDownHandler=this._mouseDownHandler.bind(this),this._mouseWheelHandler=this._mouseWheelHandler.bind(this),this._mouseMoveHandler=this._mouseMoveHandler.bind(this),this._mouseUpHandler=this._mouseUpHandler.bind(this),this._update=this._update.bind(this)},{init:function(){var e=this.zr;e.on("mousedown",this._mouseDownHandler),e.on("mousewheel",this._mouseWheelHandler),e.on("globalout",this._mouseUpHandler),e.animation.on("frame",this._update)},setTarget:function(e){this._target=e},setZoom:function(e){this._zoom=Math.max(Math.min(e,this.maxZoom),this.minZoom),this._needsUpdate=!0},setOffset:function(e){this._dx=e[0],this._dy=e[1],this._needsUpdate=!0},getZoom:function(){return this._zoom},getOffset:function(){return[this._dx,this._dy]},_update:function(){if(this._target&&this._needsUpdate){var e=this._target,t=this._zoom;e.position.x=this._dx,e.position.y=this._dy,e.scale.set(t,t,t),this.zr.refresh(),this._needsUpdate=!1,this.trigger("update")}},_mouseDownHandler:function(e){if(!e.target){var t=e.offsetX,n=e.offsetY;if(!(this.viewGL&&!this.viewGL.containPoint(t,n))){this.zr.on("mousemove",this._mouseMoveHandler),this.zr.on("mouseup",this._mouseUpHandler);var i=this._convertPos(t,n);this._x=i.x,this._y=i.y}}},_convertPos:function(e,t){var n=this.viewGL.camera,i=this.viewGL.viewport;return{x:(e-i.x)/i.width*(n.right-n.left)+n.left,y:(t-i.y)/i.height*(n.bottom-n.top)+n.top}},_mouseMoveHandler:function(e){var t=this._convertPos(e.offsetX,e.offsetY);this._dx+=t.x-this._x,this._dy+=t.y-this._y,this._x=t.x,this._y=t.y,this._needsUpdate=!0},_mouseUpHandler:function(e){this.zr.off("mousemove",this._mouseMoveHandler),this.zr.off("mouseup",this._mouseUpHandler)},_mouseWheelHandler:function(e){e=e.event;var t=e.wheelDelta||-e.detail;if(t!==0){var n=e.offsetX,i=e.offsetY;if(!(this.viewGL&&!this.viewGL.containPoint(n,i))){var r=t>0?1.1:.9,a=Math.max(Math.min(this._zoom*r,this.maxZoom),this.minZoom);r=a/this._zoom;var s=this._convertPos(n,i),o=(s.x-this._dx)*(r-1),l=(s.y-this._dy)*(r-1);this._dx-=o,this._dy-=l,this._zoom=a,this._needsUpdate=!0}}},dispose:function(){var e=this.zr;e.off("mousedown",this._mouseDownHandler),e.off("mousemove",this._mouseMoveHandler),e.off("mouseup",this._mouseUpHandler),e.off("mousewheel",this._mouseWheelHandler),e.off("globalout",this._mouseUpHandler),e.animation.off("frame",this._update)}});const e1=Qy,t1=`@export ecgl.lines2D.vertex

uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;

attribute vec2 position: POSITION;
attribute vec4 a_Color : COLOR;
varying vec4 v_Color;

#ifdef POSITIONTEXTURE_ENABLED
uniform sampler2D positionTexture;
#endif

void main()
{
 gl_Position = worldViewProjection * vec4(position, -10.0, 1.0);

 v_Color = a_Color;
}

@end

@export ecgl.lines2D.fragment

uniform vec4 color : [1.0, 1.0, 1.0, 1.0];

varying vec4 v_Color;

void main()
{
 gl_FragColor = color * v_Color;
}
@end


@export ecgl.meshLines2D.vertex

attribute vec2 position: POSITION;
attribute vec2 normal;
attribute float offset;
attribute vec4 a_Color : COLOR;

uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;
uniform vec4 viewport : VIEWPORT;

varying vec4 v_Color;
varying float v_Miter;

void main()
{
 vec4 p2 = worldViewProjection * vec4(position + normal, -10.0, 1.0);
 gl_Position = worldViewProjection * vec4(position, -10.0, 1.0);

 p2.xy /= p2.w;
 gl_Position.xy /= gl_Position.w;

 vec2 N = normalize(p2.xy - gl_Position.xy);
 gl_Position.xy += N * offset / viewport.zw * 2.0;

 gl_Position.xy *= gl_Position.w;

 v_Color = a_Color;
}
@end


@export ecgl.meshLines2D.fragment

uniform vec4 color : [1.0, 1.0, 1.0, 1.0];

varying vec4 v_Color;
varying float v_Miter;

void main()
{
 gl_FragColor = color * v_Color;
}

@end`;var fo=Ot.vec2;R.Shader.import(t1);var n1=1;const i1=ti.extend({type:"graphGL",__ecgl__:!0,init:function(e,t){this.groupGL=new R.Node,this.viewGL=new mt("orthographic"),this.viewGL.camera.left=this.viewGL.camera.right=0,this.viewGL.add(this.groupGL),this._pointsBuilder=new qr(!0,t),this._forceEdgesMesh=new R.Mesh({material:new R.Material({shader:R.createShader("ecgl.forceAtlas2.edges"),transparent:!0,depthMask:!1,depthTest:!1}),$ignorePicking:!0,geometry:new R.Geometry({attributes:{node:new R.Geometry.Attribute("node","float",2),color:new R.Geometry.Attribute("color","float",4,"COLOR")},dynamic:!0,mainAttribute:"node"}),renderOrder:-1,mode:R.Mesh.LINES}),this._edgesMesh=new R.Mesh({material:new R.Material({shader:R.createShader("ecgl.meshLines2D"),transparent:!0,depthMask:!1,depthTest:!1}),$ignorePicking:!0,geometry:new hm({useNativeLine:!1,dynamic:!0}),renderOrder:-1,culling:!1}),this._layoutId=0,this._control=new e1({zr:t.getZr(),viewGL:this.viewGL}),this._control.setTarget(this.groupGL),this._control.init(),this._clickHandler=this._clickHandler.bind(this)},render:function(e,t,n){this.groupGL.add(this._pointsBuilder.rootNode),this._model=e,this._api=n,this._initLayout(e,t,n),this._pointsBuilder.update(e,t,n),this._forceLayoutInstance instanceof Yt||this.groupGL.remove(this._forceEdgesMesh),this._updateCamera(e,n),this._control.off("update"),this._control.on("update",function(){n.dispatchAction({type:"graphGLRoam",seriesId:e.id,zoom:this._control.getZoom(),offset:this._control.getOffset()}),this._pointsBuilder.updateView(this.viewGL.camera)},this),this._control.setZoom(Ye.firstNotNull(e.get("zoom"),1)),this._control.setOffset(e.get("offset")||[0,0]);var i=this._pointsBuilder.getPointsMesh();if(i.off("mousemove",this._mousemoveHandler),i.off("mouseout",this._mouseOutHandler,this),n.getZr().off("click",this._clickHandler),this._pointsBuilder.highlightOnMouseover=!0,e.get("focusNodeAdjacency")){var r=e.get("focusNodeAdjacencyOn");r==="click"?n.getZr().on("click",this._clickHandler):r==="mouseover"&&(i.on("mousemove",this._mousemoveHandler,this),i.on("mouseout",this._mouseOutHandler,this),this._pointsBuilder.highlightOnMouseover=!1)}this._lastMouseOverDataIndex=-1},_clickHandler:function(e){if(!this._layouting){var t=this._pointsBuilder.getPointsMesh().dataIndex;t>=0?this._api.dispatchAction({type:"graphGLFocusNodeAdjacency",seriesId:this._model.id,dataIndex:t}):this._api.dispatchAction({type:"graphGLUnfocusNodeAdjacency",seriesId:this._model.id})}},_mousemoveHandler:function(e){if(!this._layouting){var t=this._pointsBuilder.getPointsMesh().dataIndex;t>=0?t!==this._lastMouseOverDataIndex&&this._api.dispatchAction({type:"graphGLFocusNodeAdjacency",seriesId:this._model.id,dataIndex:t}):this._mouseOutHandler(e),this._lastMouseOverDataIndex=t}},_mouseOutHandler:function(e){this._layouting||(this._api.dispatchAction({type:"graphGLUnfocusNodeAdjacency",seriesId:this._model.id}),this._lastMouseOverDataIndex=-1)},_updateForceEdgesGeometry:function(e,t){var n=this._forceEdgesMesh.geometry,i=t.getEdgeData(),r=0,a=this._forceLayoutInstance,s=i.count()*2;n.attributes.node.init(s),n.attributes.color.init(s),i.each(function(o){var l=e[o];n.attributes.node.set(r,a.getNodeUV(l.node1)),n.attributes.node.set(r+1,a.getNodeUV(l.node2));var c=Zt(i,l.dataIndex),h=R.parseColor(c);h[3]*=Ye.firstNotNull(jt(i,l.dataIndex),1),n.attributes.color.set(r,h),n.attributes.color.set(r+1,h),r+=2}),n.dirty()},_updateMeshLinesGeometry:function(){var t=this._model.getEdgeData(),e=this._edgesMesh.geometry,t=this._model.getEdgeData(),n=this._model.getData().getLayout("points");e.resetOffset(),e.setVertexCount(t.count()*e.getLineVertexCount()),e.setTriangleCount(t.count()*e.getLineTriangleCount());var i=[],r=[],a=["lineStyle","width"];this._originalEdgeColors=new Float32Array(t.count()*4),this._edgeIndicesMap=new Float32Array(t.count()),t.each(function(s){var o=t.graph.getEdgeByIndex(s),l=o.node1.dataIndex*2,c=o.node2.dataIndex*2;i[0]=n[l],i[1]=n[l+1],r[0]=n[c],r[1]=n[c+1];var h=Zt(t,o.dataIndex),u=R.parseColor(h);u[3]*=Ye.firstNotNull(jt(t,o.dataIndex),1);var f=t.getItemModel(o.dataIndex),d=Ye.firstNotNull(f.get(a),1)*this._api.getDevicePixelRatio();e.addLine(i,r,u,d);for(var p=0;p<4;p++)this._originalEdgeColors[o.dataIndex*4+p]=u[p];this._edgeIndicesMap[o.dataIndex]=s},this),e.dirty()},_updateForceNodesGeometry:function(e){for(var t=this._pointsBuilder.getPointsMesh(),n=[],i=0;i<e.count();i++)this._forceLayoutInstance.getNodeUV(i,n),t.geometry.attributes.position.set(i,n);t.geometry.dirty("position")},_initLayout:function(e,t,n){var i=e.get("layout"),r=e.getGraph(),a=e.getBoxLayoutParams(),s=ml(a,{width:n.getWidth(),height:n.getHeight()});i==="force"&&(i="forceAtlas2"),this.stopLayout(e,t,n,{beforeLayout:!0});var o=e.getData(),l=e.getData();if(i==="forceAtlas2"){var c=e.getModel("forceAtlas2"),h=this._forceLayoutInstance,u=[],f=[],d=o.getDataExtent("value"),p=l.getDataExtent("value"),g=Ye.firstNotNull(c.get("edgeWeight"),1),v=Ye.firstNotNull(c.get("nodeWeight"),1);typeof g=="number"&&(g=[g,g]),typeof v=="number"&&(v=[v,v]);var m=0,y={},_=new Float32Array(o.count()*2);if(r.eachNode(function(A){var E=A.dataIndex,w=o.get("value",E),b,M;if(o.hasItemOption){var T=o.getItemModel(E);b=T.get("x"),M=T.get("y")}b==null&&(b=s.x+Math.random()*s.width,M=s.y+Math.random()*s.height),_[m*2]=b,_[m*2+1]=M,y[A.id]=m++;var P=Zh(w,d,v);isNaN(P)&&(isNaN(v[0])?P=1:P=v[0]),u.push({x:b,y:M,mass:P,size:o.getItemVisual(E,"symbolSize")})}),o.setLayout("points",_),r.eachEdge(function(A){var E=A.dataIndex,w=o.get("value",E),b=Zh(w,p,g);isNaN(b)&&(isNaN(g[0])?b=1:b=g[0]),f.push({node1:y[A.node1.id],node2:y[A.node2.id],weight:b,dataIndex:E})}),!h){var x=c.get("GPU");this._forceLayoutInstance&&(x&&!(this._forceLayoutInstance instanceof Yt)||!x&&!(this._forceLayoutInstance instanceof uf))&&(this._forceLayoutInstanceToDispose=this._forceLayoutInstance),h=this._forceLayoutInstance=x?new Yt:new uf}h.initData(u,f),h.updateOption(c.option),this._updateForceEdgesGeometry(h.getEdges(),e),this._updatePositionTexture(),n.dispatchAction({type:"graphGLStartLayout",from:this.uid})}else{var _=new Float32Array(o.count()*2),m=0;r.eachNode(function(w){var b=w.dataIndex,M,T;if(o.hasItemOption){var P=o.getItemModel(b);M=P.get("x"),T=P.get("y")}_[m++]=M,_[m++]=T}),o.setLayout("points",_),this._updateAfterLayout(e,t,n)}},_updatePositionTexture:function(){var e=this._forceLayoutInstance.getNodePositionTexture();this._pointsBuilder.setPositionTexture(e),this._forceEdgesMesh.material.set("positionTex",e)},startLayout:function(e,t,a,i){if(!(i&&i.from!=null&&i.from!==this.uid)){var r=this.viewGL,a=this._api,s=this._forceLayoutInstance,o=this._model.getData(),l=this._model.getModel("forceAtlas2");if(s&&(this.groupGL.remove(this._edgesMesh),this.groupGL.add(this._forceEdgesMesh),!!this._forceLayoutInstance)){this._updateForceNodesGeometry(e.getData()),this._pointsBuilder.hideLabels();var c=this,h=this._layoutId=n1++,u=l.getShallow("maxSteps"),f=l.getShallow("steps"),d=0,p=Math.max(f*2,20),g=function(v){if(v===c._layoutId){if(s.isFinished(u)){a.dispatchAction({type:"graphGLStopLayout",from:c.uid}),a.dispatchAction({type:"graphGLFinishLayout",points:o.getLayout("points"),from:c.uid});return}s.update(r.layer.renderer,f,function(){c._updatePositionTexture(),d+=f,d>=p&&(c._syncNodePosition(e),d=0),a.getZr().refresh(),Hc(function(){g(v)})})}};Hc(function(){c._forceLayoutInstanceToDispose&&(c._forceLayoutInstanceToDispose.dispose(r.layer.renderer),c._forceLayoutInstanceToDispose=null),g(h)}),this._layouting=!0}}},stopLayout:function(e,t,n,i){i&&i.from!=null&&i.from!==this.uid||(this._layoutId=0,this.groupGL.remove(this._forceEdgesMesh),this.groupGL.add(this._edgesMesh),this._forceLayoutInstance&&this.viewGL.layer&&(i&&i.beforeLayout||(this._syncNodePosition(e),this._updateAfterLayout(e,t,n)),this._api.getZr().refresh(),this._layouting=!1))},_syncNodePosition:function(e){var t=this._forceLayoutInstance.getNodePosition(this.viewGL.layer.renderer);e.getData().setLayout("points",t),e.setNodePosition(t)},_updateAfterLayout:function(e,t,n){this._updateMeshLinesGeometry(),this._pointsBuilder.removePositionTexture(),this._pointsBuilder.updateLayout(e,t,n),this._pointsBuilder.updateView(this.viewGL.camera),this._pointsBuilder.updateLabels(),this._pointsBuilder.showLabels()},focusNodeAdjacency:function(e,t,n,i){var r=this._model.getData();this._downplayAll();var a=i.dataIndex,s=r.graph,o=[],l=s.getNodeByIndex(a);o.push(l),l.edges.forEach(function(h){h.dataIndex<0||(h.node1!==l&&o.push(h.node1),h.node2!==l&&o.push(h.node2))},this),this._pointsBuilder.fadeOutAll(.05),this._fadeOutEdgesAll(.05),o.forEach(function(h){this._pointsBuilder.highlight(r,h.dataIndex)},this),this._pointsBuilder.updateLabels(o.map(function(h){return h.dataIndex}));var c=[];l.edges.forEach(function(h){h.dataIndex>=0&&(this._highlightEdge(h.dataIndex),c.push(h))},this),this._focusNodes=o,this._focusEdges=c},unfocusNodeAdjacency:function(e,t,n,i){this._downplayAll(),this._pointsBuilder.fadeInAll(),this._fadeInEdgesAll(),this._pointsBuilder.updateLabels()},_highlightEdge:function(e){var t=this._model.getEdgeData().getItemModel(e),n=R.parseColor(t.get("emphasis.lineStyle.color")||t.get("lineStyle.color")),i=Ye.firstNotNull(t.get("emphasis.lineStyle.opacity"),t.get("lineStyle.opacity"),1);n[3]*=i,this._edgesMesh.geometry.setItemColor(this._edgeIndicesMap[e],n)},_downplayAll:function(){this._focusNodes&&this._focusNodes.forEach(function(e){this._pointsBuilder.downplay(this._model.getData(),e.dataIndex)},this),this._focusEdges&&this._focusEdges.forEach(function(e){this._downplayEdge(e.dataIndex)},this)},_downplayEdge:function(e){var t=this._getColor(e,[]);this._edgesMesh.geometry.setItemColor(this._edgeIndicesMap[e],t)},_setEdgeFade:function(){var e=[];return function(t,n){this._getColor(t,e),e[3]*=n,this._edgesMesh.geometry.setItemColor(this._edgeIndicesMap[t],e)}}(),_getColor:function(e,t){for(var n=0;n<4;n++)t[n]=this._originalEdgeColors[e*4+n];return t},_fadeOutEdgesAll:function(e){var t=this._model.getData().graph;t.eachEdge(function(n){this._setEdgeFade(n.dataIndex,e)},this)},_fadeInEdgesAll:function(){this._fadeOutEdgesAll(1)},_updateCamera:function(e,t){this.viewGL.setViewport(0,0,t.getWidth(),t.getHeight(),t.getDevicePixelRatio());for(var n=this.viewGL.camera,i=e.getData(),r=i.getLayout("points"),a=fo.create(1/0,1/0),s=fo.create(-1/0,-1/0),o=[],l=0;l<r.length;)o[0]=r[l++],o[1]=r[l++],fo.min(a,a,o),fo.max(s,s,o);var c=(s[1]+a[1])/2,h=(s[0]+a[0])/2;if(!(h>n.left&&h<n.right&&c<n.bottom&&c>n.top)){var u=Math.max(s[0]-a[0],10),f=u/t.getWidth()*t.getHeight();u*=1.4,f*=1.4,a[0]-=u*.2,n.left=a[0],n.top=c-f/2,n.bottom=c+f/2,n.right=u+a[0],n.near=0,n.far=100}},dispose:function(){var e=this.viewGL.layer.renderer;this._forceLayoutInstance&&this._forceLayoutInstance.dispose(e),this.groupGL.removeAll(),this._layoutId=-1,this._pointsBuilder.dispose()},remove:function(){this.groupGL.removeAll(),this._control.dispose()}});function po(e){return e instanceof Array||(e=[e,e]),e}function r1(e){e.registerChartView(i1),e.registerSeriesModel(Ky),e.registerVisual(function(n){const i={};n.eachSeriesByType("graphGL",function(r){var a=r.getCategoriesData(),s=r.getData(),o={};a.each(function(l){var c=a.getName(l);o["ec-"+c]=l;var h=a.getItemModel(l),u=h.getModel("itemStyle").getItemStyle();u.fill||(u.fill=r.getColorFromPalette(c,i)),a.setItemVisual(l,"style",u);var f=["symbol","symbolSize","symbolKeepAspect"];for(let p=0;p<f.length;p++){var d=h.getShallow(f[p],!0);d!=null&&a.setItemVisual(l,f[p],d)}}),a.count()&&s.each(function(l){var c=s.getItemModel(l);let h=c.getShallow("category");if(h!=null){typeof h=="string"&&(h=o["ec-"+h]);var u=a.getItemVisual(h,"style"),f=s.ensureUniqueItemVisual(l,"style");Kh(f,u);var d=["symbol","symbolSize","symbolKeepAspect"];for(let p=0;p<d.length;p++)s.setItemVisual(l,d[p],a.getItemVisual(h,d[p]))}})})}),e.registerVisual(function(n){n.eachSeriesByType("graphGL",function(i){var r=i.getGraph(),a=i.getEdgeData(),s=po(i.get("edgeSymbol")),o=po(i.get("edgeSymbolSize"));a.setVisual("drawType","stroke"),a.setVisual("fromSymbol",s&&s[0]),a.setVisual("toSymbol",s&&s[1]),a.setVisual("fromSymbolSize",o&&o[0]),a.setVisual("toSymbolSize",o&&o[1]),a.setVisual("style",i.getModel("lineStyle").getLineStyle()),a.each(function(l){var c=a.getItemModel(l),h=r.getEdgeByIndex(l),u=po(c.getShallow("symbol",!0)),f=po(c.getShallow("symbolSize",!0)),d=c.getModel("lineStyle").getLineStyle(),p=a.ensureUniqueItemVisual(l,"style");switch(Kh(p,d),p.stroke){case"source":{var g=h.node1.getVisual("style");p.stroke=g&&g.fill;break}case"target":{var g=h.node2.getVisual("style");p.stroke=g&&g.fill;break}}u[0]&&h.setVisual("fromSymbol",u[0]),u[1]&&h.setVisual("toSymbol",u[1]),f[0]&&h.setVisual("fromSymbolSize",f[0]),f[1]&&h.setVisual("toSymbolSize",f[1])})})}),e.registerAction({type:"graphGLRoam",event:"graphglroam",update:"series.graphGL:roam"},function(n,i){i.eachComponent({mainType:"series",query:n},function(r){r.setView(n)})});function t(){}e.registerAction({type:"graphGLStartLayout",event:"graphgllayoutstarted",update:"series.graphGL:startLayout"},t),e.registerAction({type:"graphGLStopLayout",event:"graphgllayoutstopped",update:"series.graphGL:stopLayout"},t),e.registerAction({type:"graphGLFocusNodeAdjacency",event:"graphGLFocusNodeAdjacency",update:"series.graphGL:focusNodeAdjacency"},t),e.registerAction({type:"graphGLUnfocusNodeAdjacency",event:"graphGLUnfocusNodeAdjacency",update:"series.graphGL:unfocusNodeAdjacency"},t)}mn(r1);const a1=ei.extend({type:"series.flowGL",dependencies:["geo","grid","bmap"],visualStyleAccessPath:"itemStyle",getInitialData:function(e,t){var n=this.get("coordinateSystem"),i=n==="geo"?["lng","lat"]:Zd(n)||["x","y"];i.push("vx","vy");var r=Gs(this.getSource(),{coordDimensions:i,encodeDefine:this.get("encode"),dimensionsDefine:this.get("dimensions")}),a=new vi(r,this);return a.initData(this.getSource()),a},defaultOption:{coordinateSystem:"cartesian2d",zlevel:10,supersampling:1,particleType:"point",particleDensity:128,particleSize:1,particleSpeed:1,particleTrail:2,colorTexture:null,gridWidth:"auto",gridHeight:"auto",itemStyle:{color:"#fff",opacity:.8}}});var s1=je.extend(function(){return{dynamic:!0,attributes:{position:new je.Attribute("position","float",3,"POSITION")}}},{resetOffset:function(){this._vertexOffset=0,this._faceOffset=0},setLineCount:function(e){var t=this.attributes,n=4*e,i=2*e;this.vertexCount!==n&&t.position.init(n),this.triangleCount!==i&&(i===0?this.indices=null:this.indices=this.vertexCount>65535?new Uint32Array(i*3):new Uint16Array(i*3))},addLine:function(e){var t=this._vertexOffset;this.attributes.position.set(t,[e[0],e[1],1]),this.attributes.position.set(t+1,[e[0],e[1],-1]),this.attributes.position.set(t+2,[e[0],e[1],2]),this.attributes.position.set(t+3,[e[0],e[1],-2]),this.setTriangleIndices(this._faceOffset++,[t,t+1,t+2]),this.setTriangleIndices(this._faceOffset++,[t+1,t+2,t+3]),this._vertexOffset+=4}});const o1=s1,l1=`@export ecgl.vfParticle.particle.fragment

uniform sampler2D particleTexture;
uniform sampler2D spawnTexture;
uniform sampler2D velocityTexture;

uniform float deltaTime;
uniform float elapsedTime;

uniform float speedScaling : 1.0;

uniform vec2 textureSize;
uniform vec4 region : [0, 0, 1, 1];
uniform float firstFrameTime;

varying vec2 v_Texcoord;


void main()
{
 vec4 p = texture2D(particleTexture, v_Texcoord);
 bool spawn = false;
 if (p.w <= 0.0) {
 p = texture2D(spawnTexture, fract(v_Texcoord + elapsedTime / 10.0));
 p.w -= firstFrameTime;
 spawn = true;
 }
 vec2 v = texture2D(velocityTexture, fract(p.xy * region.zw + region.xy)).xy;
 v = (v - 0.5) * 2.0;
 p.z = length(v);
 p.xy += v * deltaTime / 10.0 * speedScaling;
 p.w -= deltaTime;

 if (spawn || p.xy != fract(p.xy)) {
 p.z = 0.0;
 }
 p.xy = fract(p.xy);

 gl_FragColor = p;
}
@end

@export ecgl.vfParticle.renderPoints.vertex

#define PI 3.1415926

attribute vec2 texcoord : TEXCOORD_0;

uniform sampler2D particleTexture;
uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;

uniform float size : 1.0;

varying float v_Mag;
varying vec2 v_Uv;

void main()
{
 vec4 p = texture2D(particleTexture, texcoord);

 if (p.w > 0.0 && p.z > 1e-5) {
 gl_Position = worldViewProjection * vec4(p.xy * 2.0 - 1.0, 0.0, 1.0);
 }
 else {
 gl_Position = vec4(100000.0, 100000.0, 100000.0, 1.0);
 }

 v_Mag = p.z;
 v_Uv = p.xy;

 gl_PointSize = size;
}

@end

@export ecgl.vfParticle.renderPoints.fragment

uniform vec4 color : [1.0, 1.0, 1.0, 1.0];
uniform sampler2D gradientTexture;
uniform sampler2D colorTexture;
uniform sampler2D spriteTexture;

varying float v_Mag;
varying vec2 v_Uv;

void main()
{
 gl_FragColor = color;
#ifdef SPRITETEXTURE_ENABLED
 gl_FragColor *= texture2D(spriteTexture, gl_PointCoord);
 if (color.a == 0.0) {
 discard;
 }
#endif
#ifdef GRADIENTTEXTURE_ENABLED
 gl_FragColor *= texture2D(gradientTexture, vec2(v_Mag, 0.5));
#endif
#ifdef COLORTEXTURE_ENABLED
 gl_FragColor *= texture2D(colorTexture, v_Uv);
#endif
}

@end

@export ecgl.vfParticle.renderLines.vertex

#define PI 3.1415926

attribute vec3 position : POSITION;

uniform sampler2D particleTexture;
uniform sampler2D prevParticleTexture;

uniform float size : 1.0;
uniform vec4 vp: VIEWPORT;
uniform mat4 worldViewProjection : WORLDVIEWPROJECTION;

varying float v_Mag;
varying vec2 v_Uv;

@import clay.util.rand

void main()
{
 vec4 p = texture2D(particleTexture, position.xy);
 vec4 p2 = texture2D(prevParticleTexture, position.xy);

 p.xy = p.xy * 2.0 - 1.0;
 p2.xy = p2.xy * 2.0 - 1.0;

 if (p.w > 0.0 && p.z > 1e-5) {
 vec2 dir = normalize(p.xy - p2.xy);
 vec2 norm = vec2(dir.y / vp.z, -dir.x / vp.w) * sign(position.z) * size;
 if (abs(position.z) == 2.0) {
 gl_Position = vec4(p.xy + norm, 0.0, 1.0);
 v_Uv = p.xy;
 v_Mag = p.z;
 }
 else {
 gl_Position = vec4(p2.xy + norm, 0.0, 1.0);
 v_Mag = p2.z;
 v_Uv = p2.xy;
 }
 gl_Position = worldViewProjection * gl_Position;
 }
 else {
 gl_Position = vec4(100000.0, 100000.0, 100000.0, 1.0);
 }
}

@end

@export ecgl.vfParticle.renderLines.fragment

uniform vec4 color : [1.0, 1.0, 1.0, 1.0];
uniform sampler2D gradientTexture;
uniform sampler2D colorTexture;

varying float v_Mag;
varying vec2 v_Uv;

void main()
{
 gl_FragColor = color;
 #ifdef GRADIENTTEXTURE_ENABLED
 gl_FragColor *= texture2D(gradientTexture, vec2(v_Mag, 0.5));
#endif
#ifdef COLORTEXTURE_ENABLED
 gl_FragColor *= texture2D(colorTexture, v_Uv);
#endif
}

@end
`;le.import(l1);function c1(e){var t=document.createElement("canvas");t.width=t.height=e;var n=t.getContext("2d");return n.fillStyle="#fff",n.arc(e/2,e/2,e/2,0,Math.PI*2),n.fill(),t}var th=function(){this.motionBlurFactor=.99,this.vectorFieldTexture=new We({type:oe.FLOAT,flipY:!1}),this.particleLife=[5,20],this._particleType="point",this._particleSize=1,this.particleColor=[1,1,1,1],this.particleSpeedScaling=1,this._thisFrameTexture=null,this._particlePass=null,this._spawnTexture=null,this._particleTexture0=null,this._particleTexture1=null,this._particlePointsMesh=null,this._surfaceFrameBuffer=null,this._elapsedTime=0,this._scene=null,this._camera=null,this._lastFrameTexture=null,this._supersampling=1,this._downsampleTextures=[],this._width=512,this._height=512,this.init()};th.prototype={constructor:th,init:function(){var e={type:oe.FLOAT,minFilter:oe.NEAREST,magFilter:oe.NEAREST,useMipmap:!1};this._spawnTexture=new We(e),this._particleTexture0=new We(e),this._particleTexture1=new We(e),this._frameBuffer=new It({depthBuffer:!1}),this._particlePass=new Bt({fragment:le.source("ecgl.vfParticle.particle.fragment")}),this._particlePass.setUniform("velocityTexture",this.vectorFieldTexture),this._particlePass.setUniform("spawnTexture",this._spawnTexture),this._downsamplePass=new Bt({fragment:le.source("clay.compositor.downsample")});var t=new zr({renderOrder:10,material:new Wn({shader:new le(le.source("ecgl.vfParticle.renderPoints.vertex"),le.source("ecgl.vfParticle.renderPoints.fragment"))}),mode:zr.POINTS,geometry:new je({dynamic:!0,mainAttribute:"texcoord0"})}),n=new zr({renderOrder:10,material:new Wn({shader:new le(le.source("ecgl.vfParticle.renderLines.vertex"),le.source("ecgl.vfParticle.renderLines.fragment"))}),geometry:new o1,culling:!1}),i=new zr({material:new Wn({shader:new le(le.source("ecgl.color.vertex"),le.source("ecgl.color.fragment"))}),geometry:new gl});i.material.enableTexture("diffuseMap"),this._particlePointsMesh=t,this._particleLinesMesh=n,this._lastFrameFullQuadMesh=i,this._camera=new za,this._thisFrameTexture=new We,this._lastFrameTexture=new We},setParticleDensity:function(e,t){for(var n=e*t,i=new Float32Array(n*4),r=0,a=this.particleLife,s=0;s<e;s++)for(var o=0;o<t;o++,r++){i[r*4]=Math.random(),i[r*4+1]=Math.random(),i[r*4+2]=Math.random();var l=(a[1]-a[0])*Math.random()+a[0];i[r*4+3]=l}this._particleType==="line"?this._setLineGeometry(e,t):this._setPointsGeometry(e,t),this._spawnTexture.width=e,this._spawnTexture.height=t,this._spawnTexture.pixels=i,this._particleTexture0.width=this._particleTexture1.width=e,this._particleTexture0.height=this._particleTexture1.height=t,this._particlePass.setUniform("textureSize",[e,t])},_setPointsGeometry:function(e,t){var n=e*t,i=this._particlePointsMesh.geometry,r=i.attributes;r.texcoord0.init(n);for(var a=0,s=0;s<e;s++)for(var o=0;o<t;o++,a++)r.texcoord0.value[a*2]=s/e,r.texcoord0.value[a*2+1]=o/t;i.dirty()},_setLineGeometry:function(e,t){var n=e*t,i=this._getParticleMesh().geometry;i.setLineCount(n),i.resetOffset();for(var r=0;r<e;r++)for(var a=0;a<t;a++)i.addLine([r/e,a/t]);i.dirty()},_getParticleMesh:function(){return this._particleType==="line"?this._particleLinesMesh:this._particlePointsMesh},update:function(e,t,n,i){var r=this._getParticleMesh(),a=this._frameBuffer,s=this._particlePass;i&&this._updateDownsampleTextures(e,t),r.material.set("size",this._particleSize*this._supersampling),r.material.set("color",this.particleColor),s.setUniform("speedScaling",this.particleSpeedScaling),a.attach(this._particleTexture1),s.setUniform("firstFrameTime",i?(this.particleLife[1]+this.particleLife[0])/2:0),s.setUniform("particleTexture",this._particleTexture0),s.setUniform("deltaTime",n),s.setUniform("elapsedTime",this._elapsedTime),s.render(e,a),r.material.set("particleTexture",this._particleTexture1),r.material.set("prevParticleTexture",this._particleTexture0),a.attach(this._thisFrameTexture),a.bind(e),e.gl.clear(e.gl.DEPTH_BUFFER_BIT|e.gl.COLOR_BUFFER_BIT);var o=this._lastFrameFullQuadMesh;o.material.set("diffuseMap",this._lastFrameTexture),o.material.set("color",[1,1,1,this.motionBlurFactor]),this._camera.update(!0),e.renderPass([o,r],this._camera),a.unbind(e),this._downsample(e),this._swapTexture(),this._elapsedTime+=n},_downsample:function(e){var t=this._downsampleTextures;if(t.length!==0)for(var n=0,i=this._thisFrameTexture,r=t[n];r;)this._frameBuffer.attach(r),this._downsamplePass.setUniform("texture",i),this._downsamplePass.setUniform("textureSize",[i.width,i.height]),this._downsamplePass.render(e,this._frameBuffer),i=r,r=t[++n]},getSurfaceTexture:function(){var e=this._downsampleTextures;return e.length>0?e[e.length-1]:this._lastFrameTexture},setRegion:function(e){this._particlePass.setUniform("region",e)},resize:function(e,t){this._lastFrameTexture.width=e*this._supersampling,this._lastFrameTexture.height=t*this._supersampling,this._thisFrameTexture.width=e*this._supersampling,this._thisFrameTexture.height=t*this._supersampling,this._width=e,this._height=t},setParticleSize:function(e){var t=this._getParticleMesh();if(e<=2){t.material.disableTexture("spriteTexture"),t.material.transparent=!1;return}this._spriteTexture||(this._spriteTexture=new We),(!this._spriteTexture.image||this._spriteTexture.image.width!==e)&&(this._spriteTexture.image=c1(e),this._spriteTexture.dirty()),t.material.transparent=!0,t.material.enableTexture("spriteTexture"),t.material.set("spriteTexture",this._spriteTexture),this._particleSize=e},setGradientTexture:function(e){var t=this._getParticleMesh().material;t[e?"enableTexture":"disableTexture"]("gradientTexture"),t.setUniform("gradientTexture",e)},setColorTextureImage:function(e,t){var n=this._getParticleMesh().material;n.setTextureImage("colorTexture",e,t,{flipY:!0})},setParticleType:function(e){this._particleType=e},clearFrame:function(e){var t=this._frameBuffer;t.attach(this._lastFrameTexture),t.bind(e),e.gl.clear(e.gl.DEPTH_BUFFER_BIT|e.gl.COLOR_BUFFER_BIT),t.unbind(e)},setSupersampling:function(e){this._supersampling=e,this.resize(this._width,this._height)},_updateDownsampleTextures:function(e,t){for(var n=this._downsampleTextures,i=Math.max(Math.floor(Math.log(this._supersampling/t.getDevicePixelRatio())/Math.log(2)),0),r=2,a=this._width*this._supersampling,s=this._height*this._supersampling,o=0;o<i;o++)n[o]=n[o]||new We,n[o].width=a/r,n[o].height=s/r,r*=2;for(;o<n.length;o++)n[o].dispose(e);n.length=i},_swapTexture:function(){var e=this._particleTexture0;this._particleTexture0=this._particleTexture1,this._particleTexture1=e;var e=this._thisFrameTexture;this._thisFrameTexture=this._lastFrameTexture,this._lastFrameTexture=e},dispose:function(e){e.disposeFrameBuffer(this._frameBuffer),e.disposeTexture(this.vectorFieldTexture),e.disposeTexture(this._spawnTexture),e.disposeTexture(this._particleTexture0),e.disposeTexture(this._particleTexture1),e.disposeTexture(this._thisFrameTexture),e.disposeTexture(this._lastFrameTexture),e.disposeGeometry(this._particleLinesMesh.geometry),e.disposeGeometry(this._particlePointsMesh.geometry),e.disposeGeometry(this._lastFrameFullQuadMesh.geometry),this._spriteTexture&&e.disposeTexture(this._spriteTexture),this._particlePass.dispose(e),this._downsamplePass.dispose(e),this._downsampleTextures.forEach(function(t){t.dispose(e)})}};const h1=ti.extend({type:"flowGL",__ecgl__:!0,init:function(e,t){this.viewGL=new mt("orthographic"),this.groupGL=new R.Node,this.viewGL.add(this.groupGL),this._particleSurface=new th;var n=new R.Mesh({geometry:new R.PlaneGeometry,material:new R.Material({shader:new R.Shader({vertex:R.Shader.source("ecgl.color.vertex"),fragment:R.Shader.source("ecgl.color.fragment")}),transparent:!0})});n.material.enableTexture("diffuseMap"),this.groupGL.add(n),this._planeMesh=n},render:function(e,t,n){var i=this._particleSurface;i.setParticleType(e.get("particleType")),i.setSupersampling(e.get("supersampling")),this._updateData(e,n),this._updateCamera(n.getWidth(),n.getHeight(),n.getDevicePixelRatio());var r=Ye.firstNotNull(e.get("particleDensity"),128);i.setParticleDensity(r,r);var a=this._planeMesh,s=+new Date,o=this,l=!0;a.__percent=0,a.stopAnimation(),a.animate("",{loop:!0}).when(1e5,{__percent:1}).during(function(){var u=+new Date,f=Math.min(u-s,20);s=s+f,o._renderer&&(i.update(o._renderer,n,f/1e3,l),a.material.set("diffuseMap",i.getSurfaceTexture())),l=!1}).start();var c=e.getModel("itemStyle"),h=R.parseColor(c.get("color"));h[3]*=Ye.firstNotNull(c.get("opacity"),1),a.material.set("color",h),i.setColorTextureImage(e.get("colorTexture"),n),i.setParticleSize(e.get("particleSize")),i.particleSpeedScaling=e.get("particleSpeed"),i.motionBlurFactor=1-Math.pow(.1,e.get("particleTrail"))},updateTransform:function(e,t,n){this._updateData(e,n)},afterRender:function(e,t,n,i){var r=i.renderer;this._renderer=r},_updateData:function(e,t){var n=e.coordinateSystem,i=n.dimensions.map(function(y){return e.coordDimToDataDim(y)[0]}),r=e.getData(),a=r.getDataExtent(i[0]),s=r.getDataExtent(i[1]),o=e.get("gridWidth"),l=e.get("gridHeight");if(o==null||o==="auto"){var c=(a[1]-a[0])/(s[1]-s[0]);o=Math.round(Math.sqrt(c*r.count()))}(l==null||l==="auto")&&(l=Math.ceil(r.count()/o));var h=this._particleSurface.vectorFieldTexture,u=h.pixels;if(!u||u.length!==l*o*4)u=h.pixels=new Float32Array(o*l*4);else for(var f=0;f<u.length;f++)u[f]=0;var d=0,p=1/0,g=new Float32Array(r.count()*2),v=0,m=[[1/0,1/0],[-1/0,-1/0]];r.each([i[0],i[1],"vx","vy"],function(y,_,x,A){var E=n.dataToPoint([y,_]);g[v++]=E[0],g[v++]=E[1],m[0][0]=Math.min(E[0],m[0][0]),m[0][1]=Math.min(E[1],m[0][1]),m[1][0]=Math.max(E[0],m[1][0]),m[1][1]=Math.max(E[1],m[1][1]);var w=Math.sqrt(x*x+A*A);d=Math.max(d,w),p=Math.min(p,w)}),r.each(["vx","vy"],function(y,_,x){var A=Math.round((g[x*2]-m[0][0])/(m[1][0]-m[0][0])*(o-1)),E=l-1-Math.round((g[x*2+1]-m[0][1])/(m[1][1]-m[0][1])*(l-1)),w=(E*o+A)*4;u[w]=y/d*.5+.5,u[w+1]=_/d*.5+.5,u[w+3]=1}),h.width=o,h.height=l,e.get("coordinateSystem")==="bmap"&&this._fillEmptyPixels(h),h.dirty(),this._updatePlanePosition(m[0],m[1],e,t),this._updateGradientTexture(r.getVisual("visualMeta"),[p,d])},_fillEmptyPixels:function(e){var t=e.pixels,n=e.width,i=e.height;function r(g,v,m){g=Math.max(Math.min(g,n-1),0),v=Math.max(Math.min(v,i-1),0);var y=(v*(n-1)+g)*4;return t[y+3]===0?!1:(m[0]=t[y],m[1]=t[y+1],!0)}function a(g,v,m){m[0]=g[0]+v[0],m[1]=g[1]+v[1]}for(var s=[],o=[],l=[],c=[],h=[],u=0,f=0;f<i;f++)for(var d=0;d<n;d++){var p=(f*(n-1)+d)*4;t[p+3]===0&&(u=s[0]=s[1]=0,r(d-1,f,o)&&(u++,a(o,s,s)),r(d+1,f,l)&&(u++,a(l,s,s)),r(d,f-1,c)&&(u++,a(c,s,s)),r(d,f+1,h)&&(u++,a(h,s,s)),s[0]/=u,s[1]/=u,t[p]=s[0],t[p+1]=s[1]),t[p+3]=1}},_updateGradientTexture:function(e,t){if(!e||!e.length){this._particleSurface.setGradientTexture(null);return}this._gradientTexture=this._gradientTexture||new R.Texture2D({image:document.createElement("canvas")});var n=this._gradientTexture,i=n.image;i.width=200,i.height=1;var r=i.getContext("2d"),a=r.createLinearGradient(0,.5,i.width,.5);e[0].stops.forEach(function(s){var o;t[1]===t[0]?o=0:(o=s.value/t[1],o=Math.min(Math.max(o,0),1)),a.addColorStop(o,s.color)}),r.fillStyle=a,r.fillRect(0,0,i.width,i.height),n.dirty(),this._particleSurface.setGradientTexture(this._gradientTexture)},_updatePlanePosition:function(e,t,n,i){var r=this._limitInViewportAndFullFill(e,t,n,i);e=r.leftTop,t=r.rightBottom,this._particleSurface.setRegion(r.region),this._planeMesh.position.set((e[0]+t[0])/2,i.getHeight()-(e[1]+t[1])/2,0);var a=t[0]-e[0],s=t[1]-e[1];this._planeMesh.scale.set(a/2,s/2,1),this._particleSurface.resize(Math.max(Math.min(a,2048),1),Math.max(Math.min(s,2048),1)),this._renderer&&this._particleSurface.clearFrame(this._renderer)},_limitInViewportAndFullFill:function(e,t,n,i){var r=[Math.max(e[0],0),Math.max(e[1],0)],a=[Math.min(t[0],i.getWidth()),Math.min(t[1],i.getHeight())];if(n.get("coordinateSystem")==="bmap"){var s=n.getData().getDataExtent(n.coordDimToDataDim("lng")[0]),o=Math.floor(s[1]-s[0])>=359;o&&(r[0]>0&&(r[0]=0),a[0]<i.getWidth()&&(a[0]=i.getWidth()))}var l=t[0]-e[0],c=t[1]-e[1],h=a[0]-r[0],u=a[1]-r[1],f=[(r[0]-e[0])/l,1-u/c-(r[1]-e[1])/c,h/l,u/c];return{leftTop:r,rightBottom:a,region:f}},_updateCamera:function(e,t,n){this.viewGL.setViewport(0,0,e,t,n);var i=this.viewGL.camera;i.left=i.bottom=0,i.top=t,i.right=e,i.near=0,i.far=100,i.position.z=10},remove:function(){this._planeMesh.stopAnimation(),this.groupGL.removeAll()},dispose:function(){this._renderer&&this._particleSurface.dispose(this._renderer),this.groupGL.removeAll()}});function u1(e){e.registerChartView(h1),e.registerSeriesModel(a1)}mn(u1);var nh=ei.extend({type:"series.linesGL",dependencies:["grid","geo"],visualStyleAccessPath:"lineStyle",visualDrawType:"stroke",streamEnabled:!0,init:function(e){var t=this._processFlatCoordsArray(e.data);this._flatCoords=t.flatCoords,this._flatCoordsOffset=t.flatCoordsOffset,t.flatCoords&&(e.data=new Float32Array(t.count)),nh.superApply(this,"init",arguments)},mergeOption:function(e){var t=this._processFlatCoordsArray(e.data);this._flatCoords=t.flatCoords,this._flatCoordsOffset=t.flatCoordsOffset,t.flatCoords&&(e.data=new Float32Array(t.count)),nh.superApply(this,"mergeOption",arguments)},appendData:function(e){var t=this._processFlatCoordsArray(e.data);t.flatCoords&&(this._flatCoords?(this._flatCoords=$h(this._flatCoords,t.flatCoords),this._flatCoordsOffset=$h(this._flatCoordsOffset,t.flatCoordsOffset)):(this._flatCoords=t.flatCoords,this._flatCoordsOffset=t.flatCoordsOffset),e.data=new Float32Array(t.count)),this.getRawData().appendData(e.data)},_getCoordsFromItemModel:function(e){var t=this.getData().getItemModel(e),n=t.option instanceof Array?t.option:t.getShallow("coords");return n},getLineCoordsCount:function(e){return this._flatCoordsOffset?this._flatCoordsOffset[e*2+1]:this._getCoordsFromItemModel(e).length},getLineCoords:function(e,t){if(this._flatCoordsOffset){for(var n=this._flatCoordsOffset[e*2],i=this._flatCoordsOffset[e*2+1],r=0;r<i;r++)t[r]=t[r]||[],t[r][0]=this._flatCoords[n+r*2],t[r][1]=this._flatCoords[n+r*2+1];return i}else{for(var a=this._getCoordsFromItemModel(e),r=0;r<a.length;r++)t[r]=t[r]||[],t[r][0]=a[r][0],t[r][1]=a[r][1];return a.length}},_processFlatCoordsArray:function(e){var t=0;if(this._flatCoords&&(t=this._flatCoords.length),typeof e[0]=="number"){for(var n=e.length,i=new Uint32Array(n),r=new Float64Array(n),a=0,s=0,o=0,l=0;l<n;){o++;var c=e[l++];i[s++]=a+t,i[s++]=c;for(var h=0;h<c;h++){var u=e[l++],f=e[l++];r[a++]=u,r[a++]=f}}return{flatCoordsOffset:new Uint32Array(i.buffer,0,s),flatCoords:r,count:o}}return{flatCoordsOffset:null,flatCoords:null,count:e.length}},getInitialData:function(e,t){var n=new vi(["value"],this);return n.hasItemOption=!1,n.initData(e.data,[],function(i,r,a,s){if(i instanceof Array)return NaN;n.hasItemOption=!0;var o=i.value;if(o!=null)return o instanceof Array?o[s]:o}),n},defaultOption:{coordinateSystem:"geo",zlevel:10,progressive:1e4,progressiveThreshold:5e4,blendMode:"source-over",lineStyle:{opacity:.8},postEffect:{enable:!1,colorCorrection:{exposure:0,brightness:0,contrast:1,saturation:1,enable:!0}}}});const f1=nh,d1=ti.extend({type:"linesGL",__ecgl__:!0,init:function(e,t){this.groupGL=new R.Node,this.viewGL=new mt("orthographic"),this.viewGL.add(this.groupGL),this._glViewHelper=new Fi(this.viewGL),this._nativeLinesShader=R.createShader("ecgl.lines3D"),this._meshLinesShader=R.createShader("ecgl.meshLines3D"),this._linesMeshes=[],this._currentStep=0},render:function(e,t,n){this.groupGL.removeAll(),this._glViewHelper.reset(e,n);var i=this._linesMeshes[0];i||(i=this._linesMeshes[0]=this._createLinesMesh(e)),this._linesMeshes.length=1,this.groupGL.add(i),this._updateLinesMesh(e,i,0,e.getData().count()),this.viewGL.setPostEffect(e.getModel("postEffect"),n)},incrementalPrepareRender:function(e,t,n){this.groupGL.removeAll(),this._glViewHelper.reset(e,n),this._currentStep=0,this.viewGL.setPostEffect(e.getModel("postEffect"),n)},incrementalRender:function(e,t,n,i){var r=this._linesMeshes[this._currentStep];r||(r=this._createLinesMesh(t),this._linesMeshes[this._currentStep]=r),this._updateLinesMesh(t,r,e.start,e.end),this.groupGL.add(r),i.getZr().refresh(),this._currentStep++},updateTransform:function(e,t,n){e.coordinateSystem.getRoamTransform&&this._glViewHelper.updateTransform(e,n)},_createLinesMesh:function(e){var t=new R.Mesh({$ignorePicking:!0,material:new R.Material({shader:R.createShader("ecgl.lines3D"),transparent:!0,depthMask:!1,depthTest:!1}),geometry:new hm({segmentScale:10,useNativeLine:!0,dynamic:!1}),mode:R.Mesh.LINES,culling:!1});return t},_updateLinesMesh:function(e,t,n,i){var r=e.getData();t.material.blend=e.get("blendMode")==="lighter"?R.additiveBlend:null;var a=e.get("lineStyle.curveness")||0,s=e.get("polyline"),o=t.geometry,l=e.coordinateSystem,c=Ye.firstNotNull(e.get("lineStyle.width"),1);c>1?(t.material.shader!==this._meshLinesShader&&t.material.attachShader(this._meshLinesShader),t.mode=R.Mesh.TRIANGLES):(t.material.shader!==this._nativeLinesShader&&t.material.attachShader(this._nativeLinesShader),t.mode=R.Mesh.LINES),n=n||0,i=i||r.count(),o.resetOffset();var h=0,u=0,f=[],d=[],p=[],g=[],v=[],m=.3,y=.7;function _(){d[0]=f[0]*y+g[0]*m-(f[1]-g[1])*a,d[1]=f[1]*y+g[1]*m-(g[0]-f[0])*a,p[0]=f[0]*m+g[0]*y-(f[1]-g[1])*a,p[1]=f[1]*m+g[1]*y-(g[0]-f[0])*a}if(s||a!==0)for(var x=n;x<i;x++)if(s){var A=e.getLineCoordsCount(x);h+=o.getPolylineVertexCount(A),u+=o.getPolylineTriangleCount(A)}else e.getLineCoords(x,v),this._glViewHelper.dataToPoint(l,v[0],f),this._glViewHelper.dataToPoint(l,v[1],g),_(),h+=o.getCubicCurveVertexCount(f,d,p,g),u+=o.getCubicCurveTriangleCount(f,d,p,g);else{var E=i-n;h+=E*o.getLineVertexCount(),u+=E*o.getLineVertexCount()}o.setVertexCount(h),o.setTriangleCount(u);for(var w=n,b=[],x=n;x<i;x++){R.parseColor(Zt(r,w),b);var M=Ye.firstNotNull(jt(r,w),1);b[3]*=M;for(var A=e.getLineCoords(x,v),T=0;T<A;T++)this._glViewHelper.dataToPoint(l,v[T],v[T]);s?o.addPolyline(v,b,c,0,A):a!==0?(f=v[0],g=v[1],_(),o.addCubicCurve(f,d,p,g,b,c)):o.addPolyline(v,b,c,0,2),w++}},dispose:function(){this.groupGL.removeAll()},remove:function(){this.groupGL.removeAll()}});function p1(e){e.registerChartView(d1),e.registerSeriesModel(f1)}mn(p1);function sc(e){return Math.abs(Math.floor(e))}function kr(e,t){return Math.random()*(t-e)+e}function ai(e,t){return Math.floor(kr(e,t+1))}function ff(e,t,n,i){const r=Math.pow;return Math.sqrt(r(e-n,2)+r(t-i,2))}function ih(e,t,n=1){if(e>360||e<0)throw new Error(`Expected hue 0-360 range, got \`${e}\``);if(t>100||t<0)throw new Error(`Expected lightness 0-100 range, got \`${t}\``);if(n>1||n<0)throw new Error(`Expected alpha 0-1 range, got \`${n}\``);return`hsla(${e}, 100%, ${t}%, ${n})`}const df=e=>{if(typeof e=="object"&&e!==null){if(typeof Object.getPrototypeOf=="function"){const t=Object.getPrototypeOf(e);return t===Object.prototype||t===null}return Object.prototype.toString.call(e)==="[object Object]"}return!1},m1=["__proto__","constructor","prototype"],um=(...e)=>e.reduce((t,n)=>(Object.keys(n).forEach(i=>{m1.includes(i)||(Array.isArray(t[i])&&Array.isArray(n[i])?t[i]=n[i]:df(t[i])&&df(n[i])?t[i]=um(t[i],n[i]):t[i]=n[i])}),t),{});function v1(e,t){let n;return(...i)=>{n&&clearTimeout(n),n=setTimeout(()=>e(...i),t)}}class g1{constructor({x:t,y:n,ctx:i,hue:r,decay:a,gravity:s,friction:o,brightness:l,flickering:c,lineWidth:h,explosionLength:u}){me(this,"x");me(this,"y");me(this,"ctx");me(this,"hue");me(this,"friction");me(this,"gravity");me(this,"flickering");me(this,"lineWidth");me(this,"explosionLength");me(this,"angle");me(this,"speed");me(this,"brightness");me(this,"coordinates",[]);me(this,"decay");me(this,"alpha",1);for(this.x=t,this.y=n,this.ctx=i,this.hue=r,this.gravity=s,this.friction=o,this.flickering=c,this.lineWidth=h,this.explosionLength=u,this.angle=kr(0,Math.PI*2),this.speed=ai(1,10),this.brightness=ai(l.min,l.max),this.decay=kr(a.min,a.max);this.explosionLength--;)this.coordinates.push([t,n])}update(t){this.coordinates.pop(),this.coordinates.unshift([this.x,this.y]),this.speed*=this.friction,this.x+=Math.cos(this.angle)*this.speed,this.y+=Math.sin(this.angle)*this.speed+this.gravity,this.alpha-=this.decay,this.alpha<=this.decay&&t()}draw(){const t=this.coordinates.length-1;this.ctx.beginPath(),this.ctx.lineWidth=this.lineWidth,this.ctx.fillStyle=ih(this.hue,this.brightness,this.alpha),this.ctx.moveTo(this.coordinates[t][0],this.coordinates[t][1]),this.ctx.lineTo(this.x,this.y),this.ctx.strokeStyle=ih(this.hue,this.flickering?kr(0,this.brightness):this.brightness,this.alpha),this.ctx.stroke()}}class _1{constructor(t,n){me(this,"active",!1);me(this,"x");me(this,"y");this.options=t,this.canvas=n,this.pointerDown=this.pointerDown.bind(this),this.pointerUp=this.pointerUp.bind(this),this.pointerMove=this.pointerMove.bind(this)}get mouseOptions(){return this.options.mouse}mount(){this.canvas.addEventListener("pointerdown",this.pointerDown),this.canvas.addEventListener("pointerup",this.pointerUp),this.canvas.addEventListener("pointermove",this.pointerMove)}unmount(){this.canvas.removeEventListener("pointerdown",this.pointerDown),this.canvas.removeEventListener("pointerup",this.pointerUp),this.canvas.removeEventListener("pointermove",this.pointerMove)}usePointer(t,n){const{click:i,move:r}=this.mouseOptions;(i||r)&&(this.x=t.pageX-this.canvas.offsetLeft,this.y=t.pageY-this.canvas.offsetTop,this.active=n)}pointerDown(t){this.usePointer(t,this.mouseOptions.click)}pointerUp(t){this.usePointer(t,!1)}pointerMove(t){this.usePointer(t,this.active)}}class x1{constructor(){me(this,"hue");me(this,"rocketsPoint");me(this,"opacity");me(this,"acceleration");me(this,"friction");me(this,"gravity");me(this,"particles");me(this,"explosion");me(this,"mouse");me(this,"boundaries");me(this,"sound");me(this,"delay");me(this,"brightness");me(this,"decay");me(this,"flickering");me(this,"intensity");me(this,"traceLength");me(this,"traceSpeed");me(this,"lineWidth");me(this,"lineStyle");me(this,"autoresize");this.autoresize=!0,this.lineStyle="round",this.flickering=50,this.traceLength=3,this.traceSpeed=10,this.intensity=30,this.explosion=5,this.gravity=1.5,this.opacity=.5,this.particles=50,this.friction=.95,this.acceleration=1.05,this.hue={min:0,max:360},this.rocketsPoint={min:50,max:50},this.lineWidth={explosion:{min:1,max:3},trace:{min:1,max:2}},this.mouse={click:!1,move:!1,max:1},this.delay={min:30,max:60},this.brightness={min:50,max:80},this.decay={min:.015,max:.03},this.sound={enabled:!1,files:["explosion0.mp3","explosion1.mp3","explosion2.mp3"],volume:{min:4,max:8}},this.boundaries={debug:!1,height:0,width:0,x:50,y:50}}update(t){Object.assign(this,um(this,t))}}class y1{constructor(t,n){me(this,"tick",0);me(this,"rafId",0);me(this,"fps",60);me(this,"tolerance",.1);me(this,"now");this.options=t,this.render=n}mount(){this.now=performance.now();const t=1e3/this.fps,n=i=>{this.rafId=requestAnimationFrame(n);const r=i-this.now;r>=t-this.tolerance&&(this.render(),this.now=i-r%t,this.tick+=r*(this.options.intensity*Math.PI)/1e3)};this.rafId=requestAnimationFrame(n)}unmount(){cancelAnimationFrame(this.rafId)}}class T1{constructor(t,n,i){me(this,"resizer");this.options=t,this.updateSize=n,this.container=i}mount(){if(!this.resizer){const t=v1(()=>this.updateSize(),100);this.resizer=new ResizeObserver(t)}this.options.autoresize&&this.resizer.observe(this.container)}unmount(){this.resizer&&this.resizer.unobserve(this.container)}}class S1{constructor(t){me(this,"buffers",[]);me(this,"audioContext");me(this,"onInit",!1);this.options=t,this.init()}get isEnabled(){return this.options.sound.enabled}get soundOptions(){return this.options.sound}init(){!this.onInit&&this.isEnabled&&(this.onInit=!0,this.audioContext=new(window.AudioContext||window.webkitAudioContext),this.loadSounds())}async loadSounds(){for(const t of this.soundOptions.files){const n=await(await fetch(t)).arrayBuffer();this.audioContext.decodeAudioData(n).then(i=>{this.buffers.push(i)}).catch(i=>{throw i})}}play(){if(this.isEnabled&&this.buffers.length){const t=this.audioContext.createBufferSource(),n=this.buffers[ai(0,this.buffers.length-1)],i=this.audioContext.createGain();t.buffer=n,i.gain.value=kr(this.soundOptions.volume.min/100,this.soundOptions.volume.max/100),i.connect(this.audioContext.destination),t.connect(i),t.start(0)}else this.init()}}class E1{constructor({x:t,y:n,dx:i,dy:r,ctx:a,hue:s,speed:o,traceLength:l,acceleration:c}){me(this,"x");me(this,"y");me(this,"sx");me(this,"sy");me(this,"dx");me(this,"dy");me(this,"ctx");me(this,"hue");me(this,"speed");me(this,"acceleration");me(this,"traceLength");me(this,"totalDistance");me(this,"angle");me(this,"brightness");me(this,"coordinates",[]);me(this,"currentDistance",0);for(this.x=t,this.y=n,this.sx=t,this.sy=n,this.dx=i,this.dy=r,this.ctx=a,this.hue=s,this.speed=o,this.traceLength=l,this.acceleration=c,this.totalDistance=ff(t,n,i,r),this.angle=Math.atan2(r-n,i-t),this.brightness=ai(50,70);this.traceLength--;)this.coordinates.push([t,n])}update(t){this.coordinates.pop(),this.coordinates.unshift([this.x,this.y]),this.speed*=this.acceleration;const n=Math.cos(this.angle)*this.speed,i=Math.sin(this.angle)*this.speed;this.currentDistance=ff(this.sx,this.sy,this.x+n,this.y+i),this.currentDistance>=this.totalDistance?t(this.dx,this.dy,this.hue):(this.x+=n,this.y+=i)}draw(){const t=this.coordinates.length-1;this.ctx.beginPath(),this.ctx.moveTo(this.coordinates[t][0],this.coordinates[t][1]),this.ctx.lineTo(this.x,this.y),this.ctx.strokeStyle=ih(this.hue,this.brightness),this.ctx.stroke()}}class M1{constructor(t,n={}){me(this,"target");me(this,"container");me(this,"canvas");me(this,"ctx");me(this,"width");me(this,"height");me(this,"traces",[]);me(this,"explosions",[]);me(this,"waitStopRaf");me(this,"running",!1);me(this,"opts");me(this,"sound");me(this,"resize");me(this,"mouse");me(this,"raf");this.target=t,this.container=t,this.opts=new x1,this.createCanvas(this.target),this.updateOptions(n),this.sound=new S1(this.opts),this.resize=new T1(this.opts,this.updateSize.bind(this),this.container),this.mouse=new _1(this.opts,this.canvas),this.raf=new y1(this.opts,this.render.bind(this))}get isRunning(){return this.running}get version(){return"2.10.7"}get currentOptions(){return this.opts}start(){this.running||(this.canvas.isConnected||this.createCanvas(this.target),this.running=!0,this.resize.mount(),this.mouse.mount(),this.raf.mount())}stop(t=!1){!this.running||(this.running=!1,this.resize.unmount(),this.mouse.unmount(),this.raf.unmount(),this.clear(),t&&this.canvas.remove())}async waitStop(t){if(this.running)return new Promise(n=>{this.waitStopRaf=()=>{!this.waitStopRaf||(requestAnimationFrame(this.waitStopRaf),!this.traces.length&&!this.explosions.length&&(this.waitStopRaf=null,this.stop(t),n()))},this.waitStopRaf()})}pause(){this.running=!this.running,this.running?this.raf.mount():this.raf.unmount()}clear(){!this.ctx||(this.traces=[],this.explosions=[],this.ctx.clearRect(0,0,this.width,this.height))}launch(t=1){for(let n=0;n<t;n++)this.createTrace();this.waitStopRaf||(this.start(),this.waitStop())}updateOptions(t){this.opts.update(t)}updateSize({width:t=this.container.clientWidth,height:n=this.container.clientHeight}={}){this.width=t,this.height=n,this.canvas.width=t,this.canvas.height=n,this.updateBoundaries({...this.opts.boundaries,width:t,height:n})}updateBoundaries(t){this.updateOptions({boundaries:t})}createCanvas(t){t instanceof HTMLCanvasElement?(t.isConnected||document.body.append(t),this.canvas=t):(this.canvas=document.createElement("canvas"),this.container.append(this.canvas)),this.ctx=this.canvas.getContext("2d"),this.updateSize()}render(){if(!this.ctx||!this.running)return;const{opacity:t,lineStyle:n,lineWidth:i}=this.opts;this.ctx.globalCompositeOperation="destination-out",this.ctx.fillStyle=`rgba(0, 0, 0, ${t})`,this.ctx.fillRect(0,0,this.width,this.height),this.ctx.globalCompositeOperation="lighter",this.ctx.lineCap=n,this.ctx.lineJoin="round",this.ctx.lineWidth=kr(i.trace.min,i.trace.max),this.initTrace(),this.drawTrace(),this.drawExplosion()}createTrace(){const{hue:t,rocketsPoint:n,boundaries:i,traceLength:r,traceSpeed:a,acceleration:s,mouse:o}=this.opts;this.traces.push(new E1({x:this.width*ai(n.min,n.max)/100,y:this.height,dx:this.mouse.x&&o.move||this.mouse.active?this.mouse.x:ai(i.x,i.width-i.x*2),dy:this.mouse.y&&o.move||this.mouse.active?this.mouse.y:ai(i.y,i.height*.5),ctx:this.ctx,hue:ai(t.min,t.max),speed:a,acceleration:s,traceLength:sc(r)}))}initTrace(){if(this.waitStopRaf)return;const{delay:t,mouse:n}=this.opts;(this.raf.tick>ai(t.min,t.max)||this.mouse.active&&n.max>this.traces.length)&&(this.createTrace(),this.raf.tick=0)}drawTrace(){let t=this.traces.length;for(;t--;)this.traces[t].draw(),this.traces[t].update((n,i,r)=>{this.initExplosion(n,i,r),this.sound.play(),this.traces.splice(t,1)})}initExplosion(t,n,i){const{particles:r,flickering:a,lineWidth:s,explosion:o,brightness:l,friction:c,gravity:h,decay:u}=this.opts;let f=sc(r);for(;f--;)this.explosions.push(new g1({x:t,y:n,ctx:this.ctx,hue:i,friction:c,gravity:h,flickering:ai(0,100)<=a,lineWidth:kr(s.explosion.min,s.explosion.max),explosionLength:sc(o),brightness:l,decay:u}))}drawExplosion(){let t=this.explosions.length;for(;t--;)this.explosions[t].draw(),this.explosions[t].update(()=>{this.explosions.splice(t,1)})}}/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Ph="163",oa={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},la={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},w1=0,pf=1,A1=2,fm=1,b1=2,bi=3,hr=0,Cn=1,Ri=2,ar=0,Da=1,mf=2,vf=3,gf=4,C1=5,Ur=100,R1=101,L1=102,P1=103,D1=104,N1=200,I1=201,O1=202,U1=203,rh=204,ah=205,F1=206,B1=207,z1=208,G1=209,H1=210,V1=211,k1=212,W1=213,X1=214,Y1=0,q1=1,j1=2,sl=3,Z1=4,K1=5,$1=6,J1=7,dm=0,Q1=1,eT=2,sr=0,tT=1,nT=2,iT=3,rT=4,aT=5,sT=6,oT=7,pm=300,Wa=301,Xa=302,ol=303,sh=304,Ml=306,oh=1e3,Pi=1001,lh=1002,An=1003,lT=1004,mo=1005,fn=1006,oc=1007,ir=1008,or=1009,cT=1010,hT=1011,mm=1012,vm=1013,Ya=1014,$n=1015,rr=1016,gm=1017,_m=1018,Xs=1020,uT=35902,fT=1021,dT=1022,li=1023,pT=1024,mT=1025,Na=1026,Us=1027,vT=1028,xm=1029,gT=1030,ym=1031,Tm=1033,lc=33776,cc=33777,hc=33778,uc=33779,_f=35840,xf=35841,yf=35842,Tf=35843,Sm=36196,Sf=37492,Ef=37496,Mf=37808,wf=37809,Af=37810,bf=37811,Cf=37812,Rf=37813,Lf=37814,Pf=37815,Df=37816,Nf=37817,If=37818,Of=37819,Uf=37820,Ff=37821,fc=36492,Bf=36494,zf=36495,_T=36283,Gf=36284,Hf=36285,Vf=36286,xT=3200,yT=3201,Em=0,TT=1,Qi="",ri="srgb",Bi="srgb-linear",Dh="display-p3",wl="display-p3-linear",ll="linear",Mt="srgb",cl="rec709",hl="p3",ca=7680,kf=519,ST=512,ET=513,MT=514,Mm=515,wT=516,AT=517,bT=518,CT=519,Wf=35044,Xf="300 es",Di=2e3,ul=2001;class Kr{addEventListener(t,n){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(n)===-1&&i[t].push(n)}hasEventListener(t,n){if(this._listeners===void 0)return!1;const i=this._listeners;return i[t]!==void 0&&i[t].indexOf(n)!==-1}removeEventListener(t,n){if(this._listeners===void 0)return;const r=this._listeners[t];if(r!==void 0){const a=r.indexOf(n);a!==-1&&r.splice(a,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const i=this._listeners[t.type];if(i!==void 0){t.target=this;const r=i.slice(0);for(let a=0,s=r.length;a<s;a++)r[a].call(this,t);t.target=null}}}const hn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Yf=1234567;const Ms=Math.PI/180,Fs=180/Math.PI;function ns(){const e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(hn[e&255]+hn[e>>8&255]+hn[e>>16&255]+hn[e>>24&255]+"-"+hn[t&255]+hn[t>>8&255]+"-"+hn[t>>16&15|64]+hn[t>>24&255]+"-"+hn[n&63|128]+hn[n>>8&255]+"-"+hn[n>>16&255]+hn[n>>24&255]+hn[i&255]+hn[i>>8&255]+hn[i>>16&255]+hn[i>>24&255]).toLowerCase()}function on(e,t,n){return Math.max(t,Math.min(n,e))}function Nh(e,t){return(e%t+t)%t}function RT(e,t,n,i,r){return i+(e-t)*(r-i)/(n-t)}function LT(e,t,n){return e!==t?(n-e)/(t-e):0}function ws(e,t,n){return(1-n)*e+n*t}function PT(e,t,n,i){return ws(e,t,1-Math.exp(-n*i))}function DT(e,t=1){return t-Math.abs(Nh(e,t*2)-t)}function NT(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*(3-2*e))}function IT(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*e*(e*(e*6-15)+10))}function OT(e,t){return e+Math.floor(Math.random()*(t-e+1))}function UT(e,t){return e+Math.random()*(t-e)}function FT(e){return e*(.5-Math.random())}function BT(e){e!==void 0&&(Yf=e);let t=Yf+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function zT(e){return e*Ms}function GT(e){return e*Fs}function HT(e){return(e&e-1)===0&&e!==0}function VT(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function kT(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function WT(e,t,n,i,r){const a=Math.cos,s=Math.sin,o=a(n/2),l=s(n/2),c=a((t+i)/2),h=s((t+i)/2),u=a((t-i)/2),f=s((t-i)/2),d=a((i-t)/2),p=s((i-t)/2);switch(r){case"XYX":e.set(o*h,l*u,l*f,o*c);break;case"YZY":e.set(l*f,o*h,l*u,o*c);break;case"ZXZ":e.set(l*u,l*f,o*h,o*c);break;case"XZX":e.set(o*h,l*p,l*d,o*c);break;case"YXY":e.set(l*d,o*h,l*p,o*c);break;case"ZYZ":e.set(l*p,l*d,o*h,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}function Aa(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return e/4294967295;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int32Array:return Math.max(e/2147483647,-1);case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}function gn(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return Math.round(e*4294967295);case Uint16Array:return Math.round(e*65535);case Uint8Array:return Math.round(e*255);case Int32Array:return Math.round(e*2147483647);case Int16Array:return Math.round(e*32767);case Int8Array:return Math.round(e*127);default:throw new Error("Invalid component type.")}}const XT={DEG2RAD:Ms,RAD2DEG:Fs,generateUUID:ns,clamp:on,euclideanModulo:Nh,mapLinear:RT,inverseLerp:LT,lerp:ws,damp:PT,pingpong:DT,smoothstep:NT,smootherstep:IT,randInt:OT,randFloat:UT,randFloatSpread:FT,seededRandom:BT,degToRad:zT,radToDeg:GT,isPowerOfTwo:HT,ceilPowerOfTwo:VT,floorPowerOfTwo:kT,setQuaternionFromProperEuler:WT,normalize:gn,denormalize:Aa};class He{constructor(t=0,n=0){He.prototype.isVector2=!0,this.x=t,this.y=n}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,n){return this.x=t,this.y=n,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,n){switch(t){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,n){return this.x=t.x+n.x,this.y=t.y+n.y,this}addScaledVector(t,n){return this.x+=t.x*n,this.y+=t.y*n,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,n){return this.x=t.x-n.x,this.y=t.y-n.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const n=this.x,i=this.y,r=t.elements;return this.x=r[0]*n+r[3]*i+r[6],this.y=r[1]*n+r[4]*i+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,n){return this.x=Math.max(t.x,Math.min(n.x,this.x)),this.y=Math.max(t.y,Math.min(n.y,this.y)),this}clampScalar(t,n){return this.x=Math.max(t,Math.min(n,this.x)),this.y=Math.max(t,Math.min(n,this.y)),this}clampLength(t,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const n=Math.sqrt(this.lengthSq()*t.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(t)/n;return Math.acos(on(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const n=this.x-t.x,i=this.y-t.y;return n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,n){return this.x+=(t.x-this.x)*n,this.y+=(t.y-this.y)*n,this}lerpVectors(t,n,i){return this.x=t.x+(n.x-t.x)*i,this.y=t.y+(n.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,n=0){return this.x=t[n],this.y=t[n+1],this}toArray(t=[],n=0){return t[n]=this.x,t[n+1]=this.y,t}fromBufferAttribute(t,n){return this.x=t.getX(n),this.y=t.getY(n),this}rotateAround(t,n){const i=Math.cos(n),r=Math.sin(n),a=this.x-t.x,s=this.y-t.y;return this.x=a*i-s*r+t.x,this.y=a*r+s*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class et{constructor(t,n,i,r,a,s,o,l,c){et.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,n,i,r,a,s,o,l,c)}set(t,n,i,r,a,s,o,l,c){const h=this.elements;return h[0]=t,h[1]=r,h[2]=o,h[3]=n,h[4]=a,h[5]=l,h[6]=i,h[7]=s,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const n=this.elements,i=t.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],this}extractBasis(t,n,i){return t.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const n=t.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,n){const i=t.elements,r=n.elements,a=this.elements,s=i[0],o=i[3],l=i[6],c=i[1],h=i[4],u=i[7],f=i[2],d=i[5],p=i[8],g=r[0],v=r[3],m=r[6],y=r[1],_=r[4],x=r[7],A=r[2],E=r[5],w=r[8];return a[0]=s*g+o*y+l*A,a[3]=s*v+o*_+l*E,a[6]=s*m+o*x+l*w,a[1]=c*g+h*y+u*A,a[4]=c*v+h*_+u*E,a[7]=c*m+h*x+u*w,a[2]=f*g+d*y+p*A,a[5]=f*v+d*_+p*E,a[8]=f*m+d*x+p*w,this}multiplyScalar(t){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=t,n[4]*=t,n[7]*=t,n[2]*=t,n[5]*=t,n[8]*=t,this}determinant(){const t=this.elements,n=t[0],i=t[1],r=t[2],a=t[3],s=t[4],o=t[5],l=t[6],c=t[7],h=t[8];return n*s*h-n*o*c-i*a*h+i*o*l+r*a*c-r*s*l}invert(){const t=this.elements,n=t[0],i=t[1],r=t[2],a=t[3],s=t[4],o=t[5],l=t[6],c=t[7],h=t[8],u=h*s-o*c,f=o*l-h*a,d=c*a-s*l,p=n*u+i*f+r*d;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const g=1/p;return t[0]=u*g,t[1]=(r*c-h*i)*g,t[2]=(o*i-r*s)*g,t[3]=f*g,t[4]=(h*n-r*l)*g,t[5]=(r*a-o*n)*g,t[6]=d*g,t[7]=(i*l-c*n)*g,t[8]=(s*n-i*a)*g,this}transpose(){let t;const n=this.elements;return t=n[1],n[1]=n[3],n[3]=t,t=n[2],n[2]=n[6],n[6]=t,t=n[5],n[5]=n[7],n[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const n=this.elements;return t[0]=n[0],t[1]=n[3],t[2]=n[6],t[3]=n[1],t[4]=n[4],t[5]=n[7],t[6]=n[2],t[7]=n[5],t[8]=n[8],this}setUvTransform(t,n,i,r,a,s,o){const l=Math.cos(a),c=Math.sin(a);return this.set(i*l,i*c,-i*(l*s+c*o)+s+t,-r*c,r*l,-r*(-c*s+l*o)+o+n,0,0,1),this}scale(t,n){return this.premultiply(dc.makeScale(t,n)),this}rotate(t){return this.premultiply(dc.makeRotation(-t)),this}translate(t,n){return this.premultiply(dc.makeTranslation(t,n)),this}makeTranslation(t,n){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,n,0,0,1),this}makeRotation(t){const n=Math.cos(t),i=Math.sin(t);return this.set(n,-i,0,i,n,0,0,0,1),this}makeScale(t,n){return this.set(t,0,0,0,n,0,0,0,1),this}equals(t){const n=this.elements,i=t.elements;for(let r=0;r<9;r++)if(n[r]!==i[r])return!1;return!0}fromArray(t,n=0){for(let i=0;i<9;i++)this.elements[i]=t[i+n];return this}toArray(t=[],n=0){const i=this.elements;return t[n]=i[0],t[n+1]=i[1],t[n+2]=i[2],t[n+3]=i[3],t[n+4]=i[4],t[n+5]=i[5],t[n+6]=i[6],t[n+7]=i[7],t[n+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const dc=new et;function wm(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}function Bs(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function YT(){const e=Bs("canvas");return e.style.display="block",e}const qf={};function qT(e){e in qf||(qf[e]=!0,console.warn(e))}const jf=new et().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),Zf=new et().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),vo={[Bi]:{transfer:ll,primaries:cl,toReference:e=>e,fromReference:e=>e},[ri]:{transfer:Mt,primaries:cl,toReference:e=>e.convertSRGBToLinear(),fromReference:e=>e.convertLinearToSRGB()},[wl]:{transfer:ll,primaries:hl,toReference:e=>e.applyMatrix3(Zf),fromReference:e=>e.applyMatrix3(jf)},[Dh]:{transfer:Mt,primaries:hl,toReference:e=>e.convertSRGBToLinear().applyMatrix3(Zf),fromReference:e=>e.applyMatrix3(jf).convertLinearToSRGB()}},jT=new Set([Bi,wl]),Tt={enabled:!0,_workingColorSpace:Bi,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(e){if(!jT.has(e))throw new Error(`Unsupported working color space, "${e}".`);this._workingColorSpace=e},convert:function(e,t,n){if(this.enabled===!1||t===n||!t||!n)return e;const i=vo[t].toReference,r=vo[n].fromReference;return r(i(e))},fromWorkingColorSpace:function(e,t){return this.convert(e,this._workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this._workingColorSpace)},getPrimaries:function(e){return vo[e].primaries},getTransfer:function(e){return e===Qi?ll:vo[e].transfer}};function Ia(e){return e<.04045?e*.0773993808:Math.pow(e*.9478672986+.0521327014,2.4)}function pc(e){return e<.0031308?e*12.92:1.055*Math.pow(e,.41666)-.055}let ha;class ZT{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let n;if(t instanceof HTMLCanvasElement)n=t;else{ha===void 0&&(ha=Bs("canvas")),ha.width=t.width,ha.height=t.height;const i=ha.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),n=ha}return n.width>2048||n.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),n.toDataURL("image/jpeg",.6)):n.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const n=Bs("canvas");n.width=t.width,n.height=t.height;const i=n.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const r=i.getImageData(0,0,t.width,t.height),a=r.data;for(let s=0;s<a.length;s++)a[s]=Ia(a[s]/255)*255;return i.putImageData(r,0,0),n}else if(t.data){const n=t.data.slice(0);for(let i=0;i<n.length;i++)n instanceof Uint8Array||n instanceof Uint8ClampedArray?n[i]=Math.floor(Ia(n[i]/255)*255):n[i]=Ia(n[i]);return{data:n,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let KT=0;class Am{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:KT++}),this.uuid=ns(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const n=t===void 0||typeof t=="string";if(!n&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let a;if(Array.isArray(r)){a=[];for(let s=0,o=r.length;s<o;s++)r[s].isDataTexture?a.push(mc(r[s].image)):a.push(mc(r[s]))}else a=mc(r);i.url=a}return n||(t.images[this.uuid]=i),i}}function mc(e){return typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap?ZT.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let $T=0;class dn extends Kr{constructor(t=dn.DEFAULT_IMAGE,n=dn.DEFAULT_MAPPING,i=Pi,r=Pi,a=fn,s=ir,o=li,l=or,c=dn.DEFAULT_ANISOTROPY,h=Qi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:$T++}),this.uuid=ns(),this.name="",this.source=new Am(t),this.mipmaps=[],this.mapping=n,this.channel=0,this.wrapS=i,this.wrapT=r,this.magFilter=a,this.minFilter=s,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=l,this.offset=new He(0,0),this.repeat=new He(1,1),this.center=new He(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new et,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const n=t===void 0||typeof t=="string";if(!n&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),n||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==pm)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case oh:t.x=t.x-Math.floor(t.x);break;case Pi:t.x=t.x<0?0:1;break;case lh:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case oh:t.y=t.y-Math.floor(t.y);break;case Pi:t.y=t.y<0?0:1;break;case lh:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}dn.DEFAULT_IMAGE=null;dn.DEFAULT_MAPPING=pm;dn.DEFAULT_ANISOTROPY=1;class rn{constructor(t=0,n=0,i=0,r=1){rn.prototype.isVector4=!0,this.x=t,this.y=n,this.z=i,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,n,i,r){return this.x=t,this.y=n,this.z=i,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,n){switch(t){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,n){return this.x=t.x+n.x,this.y=t.y+n.y,this.z=t.z+n.z,this.w=t.w+n.w,this}addScaledVector(t,n){return this.x+=t.x*n,this.y+=t.y*n,this.z+=t.z*n,this.w+=t.w*n,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,n){return this.x=t.x-n.x,this.y=t.y-n.y,this.z=t.z-n.z,this.w=t.w-n.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const n=this.x,i=this.y,r=this.z,a=this.w,s=t.elements;return this.x=s[0]*n+s[4]*i+s[8]*r+s[12]*a,this.y=s[1]*n+s[5]*i+s[9]*r+s[13]*a,this.z=s[2]*n+s[6]*i+s[10]*r+s[14]*a,this.w=s[3]*n+s[7]*i+s[11]*r+s[15]*a,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const n=Math.sqrt(1-t.w*t.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/n,this.y=t.y/n,this.z=t.z/n),this}setAxisAngleFromRotationMatrix(t){let n,i,r,a;const l=t.elements,c=l[0],h=l[4],u=l[8],f=l[1],d=l[5],p=l[9],g=l[2],v=l[6],m=l[10];if(Math.abs(h-f)<.01&&Math.abs(u-g)<.01&&Math.abs(p-v)<.01){if(Math.abs(h+f)<.1&&Math.abs(u+g)<.1&&Math.abs(p+v)<.1&&Math.abs(c+d+m-3)<.1)return this.set(1,0,0,0),this;n=Math.PI;const _=(c+1)/2,x=(d+1)/2,A=(m+1)/2,E=(h+f)/4,w=(u+g)/4,b=(p+v)/4;return _>x&&_>A?_<.01?(i=0,r=.707106781,a=.707106781):(i=Math.sqrt(_),r=E/i,a=w/i):x>A?x<.01?(i=.707106781,r=0,a=.707106781):(r=Math.sqrt(x),i=E/r,a=b/r):A<.01?(i=.707106781,r=.707106781,a=0):(a=Math.sqrt(A),i=w/a,r=b/a),this.set(i,r,a,n),this}let y=Math.sqrt((v-p)*(v-p)+(u-g)*(u-g)+(f-h)*(f-h));return Math.abs(y)<.001&&(y=1),this.x=(v-p)/y,this.y=(u-g)/y,this.z=(f-h)/y,this.w=Math.acos((c+d+m-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,n){return this.x=Math.max(t.x,Math.min(n.x,this.x)),this.y=Math.max(t.y,Math.min(n.y,this.y)),this.z=Math.max(t.z,Math.min(n.z,this.z)),this.w=Math.max(t.w,Math.min(n.w,this.w)),this}clampScalar(t,n){return this.x=Math.max(t,Math.min(n,this.x)),this.y=Math.max(t,Math.min(n,this.y)),this.z=Math.max(t,Math.min(n,this.z)),this.w=Math.max(t,Math.min(n,this.w)),this}clampLength(t,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,n){return this.x+=(t.x-this.x)*n,this.y+=(t.y-this.y)*n,this.z+=(t.z-this.z)*n,this.w+=(t.w-this.w)*n,this}lerpVectors(t,n,i){return this.x=t.x+(n.x-t.x)*i,this.y=t.y+(n.y-t.y)*i,this.z=t.z+(n.z-t.z)*i,this.w=t.w+(n.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,n=0){return this.x=t[n],this.y=t[n+1],this.z=t[n+2],this.w=t[n+3],this}toArray(t=[],n=0){return t[n]=this.x,t[n+1]=this.y,t[n+2]=this.z,t[n+3]=this.w,t}fromBufferAttribute(t,n){return this.x=t.getX(n),this.y=t.getY(n),this.z=t.getZ(n),this.w=t.getW(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class JT extends Kr{constructor(t=1,n=1,i={}){super(),this.isRenderTarget=!0,this.width=t,this.height=n,this.depth=1,this.scissor=new rn(0,0,t,n),this.scissorTest=!1,this.viewport=new rn(0,0,t,n);const r={width:t,height:n,depth:1};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:fn,depthBuffer:!0,stencilBuffer:!1,depthTexture:null,samples:0,count:1},i);const a=new dn(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);a.flipY=!1,a.generateMipmaps=i.generateMipmaps,a.internalFormat=i.internalFormat,this.textures=[];const s=i.count;for(let o=0;o<s;o++)this.textures[o]=a.clone(),this.textures[o].isRenderTargetTexture=!0;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}setSize(t,n,i=1){if(this.width!==t||this.height!==n||this.depth!==i){this.width=t,this.height=n,this.depth=i;for(let r=0,a=this.textures.length;r<a;r++)this.textures[r].image.width=t,this.textures[r].image.height=n,this.textures[r].image.depth=i;this.dispose()}this.viewport.set(0,0,t,n),this.scissor.set(0,0,t,n)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let i=0,r=t.textures.length;i<r;i++)this.textures[i]=t.textures[i].clone(),this.textures[i].isRenderTargetTexture=!0;const n=Object.assign({},t.texture.image);return this.texture.source=new Am(n),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class jr extends JT{constructor(t=1,n=1,i={}){super(t,n,i),this.isWebGLRenderTarget=!0}}class bm extends dn{constructor(t=null,n=1,i=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:n,height:i,depth:r},this.magFilter=An,this.minFilter=An,this.wrapR=Pi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class QT extends dn{constructor(t=null,n=1,i=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:n,height:i,depth:r},this.magFilter=An,this.minFilter=An,this.wrapR=Pi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Zr{constructor(t=0,n=0,i=0,r=1){this.isQuaternion=!0,this._x=t,this._y=n,this._z=i,this._w=r}static slerpFlat(t,n,i,r,a,s,o){let l=i[r+0],c=i[r+1],h=i[r+2],u=i[r+3];const f=a[s+0],d=a[s+1],p=a[s+2],g=a[s+3];if(o===0){t[n+0]=l,t[n+1]=c,t[n+2]=h,t[n+3]=u;return}if(o===1){t[n+0]=f,t[n+1]=d,t[n+2]=p,t[n+3]=g;return}if(u!==g||l!==f||c!==d||h!==p){let v=1-o;const m=l*f+c*d+h*p+u*g,y=m>=0?1:-1,_=1-m*m;if(_>Number.EPSILON){const A=Math.sqrt(_),E=Math.atan2(A,m*y);v=Math.sin(v*E)/A,o=Math.sin(o*E)/A}const x=o*y;if(l=l*v+f*x,c=c*v+d*x,h=h*v+p*x,u=u*v+g*x,v===1-o){const A=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=A,c*=A,h*=A,u*=A}}t[n]=l,t[n+1]=c,t[n+2]=h,t[n+3]=u}static multiplyQuaternionsFlat(t,n,i,r,a,s){const o=i[r],l=i[r+1],c=i[r+2],h=i[r+3],u=a[s],f=a[s+1],d=a[s+2],p=a[s+3];return t[n]=o*p+h*u+l*d-c*f,t[n+1]=l*p+h*f+c*u-o*d,t[n+2]=c*p+h*d+o*f-l*u,t[n+3]=h*p-o*u-l*f-c*d,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,n,i,r){return this._x=t,this._y=n,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,n=!0){const i=t._x,r=t._y,a=t._z,s=t._order,o=Math.cos,l=Math.sin,c=o(i/2),h=o(r/2),u=o(a/2),f=l(i/2),d=l(r/2),p=l(a/2);switch(s){case"XYZ":this._x=f*h*u+c*d*p,this._y=c*d*u-f*h*p,this._z=c*h*p+f*d*u,this._w=c*h*u-f*d*p;break;case"YXZ":this._x=f*h*u+c*d*p,this._y=c*d*u-f*h*p,this._z=c*h*p-f*d*u,this._w=c*h*u+f*d*p;break;case"ZXY":this._x=f*h*u-c*d*p,this._y=c*d*u+f*h*p,this._z=c*h*p+f*d*u,this._w=c*h*u-f*d*p;break;case"ZYX":this._x=f*h*u-c*d*p,this._y=c*d*u+f*h*p,this._z=c*h*p-f*d*u,this._w=c*h*u+f*d*p;break;case"YZX":this._x=f*h*u+c*d*p,this._y=c*d*u+f*h*p,this._z=c*h*p-f*d*u,this._w=c*h*u-f*d*p;break;case"XZY":this._x=f*h*u-c*d*p,this._y=c*d*u-f*h*p,this._z=c*h*p+f*d*u,this._w=c*h*u+f*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+s)}return n===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,n){const i=n/2,r=Math.sin(i);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const n=t.elements,i=n[0],r=n[4],a=n[8],s=n[1],o=n[5],l=n[9],c=n[2],h=n[6],u=n[10],f=i+o+u;if(f>0){const d=.5/Math.sqrt(f+1);this._w=.25/d,this._x=(h-l)*d,this._y=(a-c)*d,this._z=(s-r)*d}else if(i>o&&i>u){const d=2*Math.sqrt(1+i-o-u);this._w=(h-l)/d,this._x=.25*d,this._y=(r+s)/d,this._z=(a+c)/d}else if(o>u){const d=2*Math.sqrt(1+o-i-u);this._w=(a-c)/d,this._x=(r+s)/d,this._y=.25*d,this._z=(l+h)/d}else{const d=2*Math.sqrt(1+u-i-o);this._w=(s-r)/d,this._x=(a+c)/d,this._y=(l+h)/d,this._z=.25*d}return this._onChangeCallback(),this}setFromUnitVectors(t,n){let i=t.dot(n)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*n.z-t.z*n.y,this._y=t.z*n.x-t.x*n.z,this._z=t.x*n.y-t.y*n.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(on(this.dot(t),-1,1)))}rotateTowards(t,n){const i=this.angleTo(t);if(i===0)return this;const r=Math.min(1,n/i);return this.slerp(t,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,n){const i=t._x,r=t._y,a=t._z,s=t._w,o=n._x,l=n._y,c=n._z,h=n._w;return this._x=i*h+s*o+r*c-a*l,this._y=r*h+s*l+a*o-i*c,this._z=a*h+s*c+i*l-r*o,this._w=s*h-i*o-r*l-a*c,this._onChangeCallback(),this}slerp(t,n){if(n===0)return this;if(n===1)return this.copy(t);const i=this._x,r=this._y,a=this._z,s=this._w;let o=s*t._w+i*t._x+r*t._y+a*t._z;if(o<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,o=-o):this.copy(t),o>=1)return this._w=s,this._x=i,this._y=r,this._z=a,this;const l=1-o*o;if(l<=Number.EPSILON){const d=1-n;return this._w=d*s+n*this._w,this._x=d*i+n*this._x,this._y=d*r+n*this._y,this._z=d*a+n*this._z,this.normalize(),this}const c=Math.sqrt(l),h=Math.atan2(c,o),u=Math.sin((1-n)*h)/c,f=Math.sin(n*h)/c;return this._w=s*u+this._w*f,this._x=i*u+this._x*f,this._y=r*u+this._y*f,this._z=a*u+this._z*f,this._onChangeCallback(),this}slerpQuaternions(t,n,i){return this.copy(t).slerp(n,i)}random(){const t=2*Math.PI*Math.random(),n=2*Math.PI*Math.random(),i=Math.random(),r=Math.sqrt(1-i),a=Math.sqrt(i);return this.set(r*Math.sin(t),r*Math.cos(t),a*Math.sin(n),a*Math.cos(n))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,n=0){return this._x=t[n],this._y=t[n+1],this._z=t[n+2],this._w=t[n+3],this._onChangeCallback(),this}toArray(t=[],n=0){return t[n]=this._x,t[n+1]=this._y,t[n+2]=this._z,t[n+3]=this._w,t}fromBufferAttribute(t,n){return this._x=t.getX(n),this._y=t.getY(n),this._z=t.getZ(n),this._w=t.getW(n),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class k{constructor(t=0,n=0,i=0){k.prototype.isVector3=!0,this.x=t,this.y=n,this.z=i}set(t,n,i){return i===void 0&&(i=this.z),this.x=t,this.y=n,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,n){switch(t){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,n){return this.x=t.x+n.x,this.y=t.y+n.y,this.z=t.z+n.z,this}addScaledVector(t,n){return this.x+=t.x*n,this.y+=t.y*n,this.z+=t.z*n,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,n){return this.x=t.x-n.x,this.y=t.y-n.y,this.z=t.z-n.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,n){return this.x=t.x*n.x,this.y=t.y*n.y,this.z=t.z*n.z,this}applyEuler(t){return this.applyQuaternion(Kf.setFromEuler(t))}applyAxisAngle(t,n){return this.applyQuaternion(Kf.setFromAxisAngle(t,n))}applyMatrix3(t){const n=this.x,i=this.y,r=this.z,a=t.elements;return this.x=a[0]*n+a[3]*i+a[6]*r,this.y=a[1]*n+a[4]*i+a[7]*r,this.z=a[2]*n+a[5]*i+a[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const n=this.x,i=this.y,r=this.z,a=t.elements,s=1/(a[3]*n+a[7]*i+a[11]*r+a[15]);return this.x=(a[0]*n+a[4]*i+a[8]*r+a[12])*s,this.y=(a[1]*n+a[5]*i+a[9]*r+a[13])*s,this.z=(a[2]*n+a[6]*i+a[10]*r+a[14])*s,this}applyQuaternion(t){const n=this.x,i=this.y,r=this.z,a=t.x,s=t.y,o=t.z,l=t.w,c=2*(s*r-o*i),h=2*(o*n-a*r),u=2*(a*i-s*n);return this.x=n+l*c+s*u-o*h,this.y=i+l*h+o*c-a*u,this.z=r+l*u+a*h-s*c,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const n=this.x,i=this.y,r=this.z,a=t.elements;return this.x=a[0]*n+a[4]*i+a[8]*r,this.y=a[1]*n+a[5]*i+a[9]*r,this.z=a[2]*n+a[6]*i+a[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,n){return this.x=Math.max(t.x,Math.min(n.x,this.x)),this.y=Math.max(t.y,Math.min(n.y,this.y)),this.z=Math.max(t.z,Math.min(n.z,this.z)),this}clampScalar(t,n){return this.x=Math.max(t,Math.min(n,this.x)),this.y=Math.max(t,Math.min(n,this.y)),this.z=Math.max(t,Math.min(n,this.z)),this}clampLength(t,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,n){return this.x+=(t.x-this.x)*n,this.y+=(t.y-this.y)*n,this.z+=(t.z-this.z)*n,this}lerpVectors(t,n,i){return this.x=t.x+(n.x-t.x)*i,this.y=t.y+(n.y-t.y)*i,this.z=t.z+(n.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,n){const i=t.x,r=t.y,a=t.z,s=n.x,o=n.y,l=n.z;return this.x=r*l-a*o,this.y=a*s-i*l,this.z=i*o-r*s,this}projectOnVector(t){const n=t.lengthSq();if(n===0)return this.set(0,0,0);const i=t.dot(this)/n;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return vc.copy(this).projectOnVector(t),this.sub(vc)}reflect(t){return this.sub(vc.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const n=Math.sqrt(this.lengthSq()*t.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(t)/n;return Math.acos(on(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const n=this.x-t.x,i=this.y-t.y,r=this.z-t.z;return n*n+i*i+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,n,i){const r=Math.sin(n)*t;return this.x=r*Math.sin(i),this.y=Math.cos(n)*t,this.z=r*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,n,i){return this.x=t*Math.sin(n),this.y=i,this.z=t*Math.cos(n),this}setFromMatrixPosition(t){const n=t.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}setFromMatrixScale(t){const n=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=n,this.y=i,this.z=r,this}setFromMatrixColumn(t,n){return this.fromArray(t.elements,n*4)}setFromMatrix3Column(t,n){return this.fromArray(t.elements,n*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,n=0){return this.x=t[n],this.y=t[n+1],this.z=t[n+2],this}toArray(t=[],n=0){return t[n]=this.x,t[n+1]=this.y,t[n+2]=this.z,t}fromBufferAttribute(t,n){return this.x=t.getX(n),this.y=t.getY(n),this.z=t.getZ(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,n=Math.random()*2-1,i=Math.sqrt(1-n*n);return this.x=i*Math.cos(t),this.y=n,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const vc=new k,Kf=new Zr;class Ys{constructor(t=new k(1/0,1/0,1/0),n=new k(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=n}set(t,n){return this.min.copy(t),this.max.copy(n),this}setFromArray(t){this.makeEmpty();for(let n=0,i=t.length;n<i;n+=3)this.expandByPoint(qn.fromArray(t,n));return this}setFromBufferAttribute(t){this.makeEmpty();for(let n=0,i=t.count;n<i;n++)this.expandByPoint(qn.fromBufferAttribute(t,n));return this}setFromPoints(t){this.makeEmpty();for(let n=0,i=t.length;n<i;n++)this.expandByPoint(t[n]);return this}setFromCenterAndSize(t,n){const i=qn.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,n=!1){return this.makeEmpty(),this.expandByObject(t,n)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,n=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(i!==void 0){const a=i.getAttribute("position");if(n===!0&&a!==void 0&&t.isInstancedMesh!==!0)for(let s=0,o=a.count;s<o;s++)t.isMesh===!0?t.getVertexPosition(s,qn):qn.fromBufferAttribute(a,s),qn.applyMatrix4(t.matrixWorld),this.expandByPoint(qn);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),go.copy(t.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),go.copy(i.boundingBox)),go.applyMatrix4(t.matrixWorld),this.union(go)}const r=t.children;for(let a=0,s=r.length;a<s;a++)this.expandByObject(r[a],n);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,n){return n.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,qn),qn.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let n,i;return t.normal.x>0?(n=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(n=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(n+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(n+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(n+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(n+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),n<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(ds),_o.subVectors(this.max,ds),ua.subVectors(t.a,ds),fa.subVectors(t.b,ds),da.subVectors(t.c,ds),Yi.subVectors(fa,ua),qi.subVectors(da,fa),Rr.subVectors(ua,da);let n=[0,-Yi.z,Yi.y,0,-qi.z,qi.y,0,-Rr.z,Rr.y,Yi.z,0,-Yi.x,qi.z,0,-qi.x,Rr.z,0,-Rr.x,-Yi.y,Yi.x,0,-qi.y,qi.x,0,-Rr.y,Rr.x,0];return!gc(n,ua,fa,da,_o)||(n=[1,0,0,0,1,0,0,0,1],!gc(n,ua,fa,da,_o))?!1:(xo.crossVectors(Yi,qi),n=[xo.x,xo.y,xo.z],gc(n,ua,fa,da,_o))}clampPoint(t,n){return n.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,qn).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(qn).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Ti[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Ti[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Ti[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Ti[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Ti[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Ti[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Ti[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Ti[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Ti),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const Ti=[new k,new k,new k,new k,new k,new k,new k,new k],qn=new k,go=new Ys,ua=new k,fa=new k,da=new k,Yi=new k,qi=new k,Rr=new k,ds=new k,_o=new k,xo=new k,Lr=new k;function gc(e,t,n,i,r){for(let a=0,s=e.length-3;a<=s;a+=3){Lr.fromArray(e,a);const o=r.x*Math.abs(Lr.x)+r.y*Math.abs(Lr.y)+r.z*Math.abs(Lr.z),l=t.dot(Lr),c=n.dot(Lr),h=i.dot(Lr);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>o)return!1}return!0}const eS=new Ys,ps=new k,_c=new k;class Ih{constructor(t=new k,n=-1){this.isSphere=!0,this.center=t,this.radius=n}set(t,n){return this.center.copy(t),this.radius=n,this}setFromPoints(t,n){const i=this.center;n!==void 0?i.copy(n):eS.setFromPoints(t).getCenter(i);let r=0;for(let a=0,s=t.length;a<s;a++)r=Math.max(r,i.distanceToSquared(t[a]));return this.radius=Math.sqrt(r),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const n=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=n*n}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,n){const i=this.center.distanceToSquared(t);return n.copy(t),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;ps.subVectors(t,this.center);const n=ps.lengthSq();if(n>this.radius*this.radius){const i=Math.sqrt(n),r=(i-this.radius)*.5;this.center.addScaledVector(ps,r/i),this.radius+=r}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(_c.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(ps.copy(t.center).add(_c)),this.expandByPoint(ps.copy(t.center).sub(_c))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Si=new k,xc=new k,yo=new k,ji=new k,yc=new k,To=new k,Tc=new k;class Cm{constructor(t=new k,n=new k(0,0,-1)){this.origin=t,this.direction=n}set(t,n){return this.origin.copy(t),this.direction.copy(n),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,n){return n.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Si)),this}closestPointToPoint(t,n){n.subVectors(t,this.origin);const i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const n=Si.subVectors(t,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(t):(Si.copy(this.origin).addScaledVector(this.direction,n),Si.distanceToSquared(t))}distanceSqToSegment(t,n,i,r){xc.copy(t).add(n).multiplyScalar(.5),yo.copy(n).sub(t).normalize(),ji.copy(this.origin).sub(xc);const a=t.distanceTo(n)*.5,s=-this.direction.dot(yo),o=ji.dot(this.direction),l=-ji.dot(yo),c=ji.lengthSq(),h=Math.abs(1-s*s);let u,f,d,p;if(h>0)if(u=s*l-o,f=s*o-l,p=a*h,u>=0)if(f>=-p)if(f<=p){const g=1/h;u*=g,f*=g,d=u*(u+s*f+2*o)+f*(s*u+f+2*l)+c}else f=a,u=Math.max(0,-(s*f+o)),d=-u*u+f*(f+2*l)+c;else f=-a,u=Math.max(0,-(s*f+o)),d=-u*u+f*(f+2*l)+c;else f<=-p?(u=Math.max(0,-(-s*a+o)),f=u>0?-a:Math.min(Math.max(-a,-l),a),d=-u*u+f*(f+2*l)+c):f<=p?(u=0,f=Math.min(Math.max(-a,-l),a),d=f*(f+2*l)+c):(u=Math.max(0,-(s*a+o)),f=u>0?a:Math.min(Math.max(-a,-l),a),d=-u*u+f*(f+2*l)+c);else f=s>0?-a:a,u=Math.max(0,-(s*f+o)),d=-u*u+f*(f+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,u),r&&r.copy(xc).addScaledVector(yo,f),d}intersectSphere(t,n){Si.subVectors(t.center,this.origin);const i=Si.dot(this.direction),r=Si.dot(Si)-i*i,a=t.radius*t.radius;if(r>a)return null;const s=Math.sqrt(a-r),o=i-s,l=i+s;return l<0?null:o<0?this.at(l,n):this.at(o,n)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const n=t.normal.dot(this.direction);if(n===0)return t.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/n;return i>=0?i:null}intersectPlane(t,n){const i=this.distanceToPlane(t);return i===null?null:this.at(i,n)}intersectsPlane(t){const n=t.distanceToPoint(this.origin);return n===0||t.normal.dot(this.direction)*n<0}intersectBox(t,n){let i,r,a,s,o,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,f=this.origin;return c>=0?(i=(t.min.x-f.x)*c,r=(t.max.x-f.x)*c):(i=(t.max.x-f.x)*c,r=(t.min.x-f.x)*c),h>=0?(a=(t.min.y-f.y)*h,s=(t.max.y-f.y)*h):(a=(t.max.y-f.y)*h,s=(t.min.y-f.y)*h),i>s||a>r||((a>i||isNaN(i))&&(i=a),(s<r||isNaN(r))&&(r=s),u>=0?(o=(t.min.z-f.z)*u,l=(t.max.z-f.z)*u):(o=(t.max.z-f.z)*u,l=(t.min.z-f.z)*u),i>l||o>r)||((o>i||i!==i)&&(i=o),(l<r||r!==r)&&(r=l),r<0)?null:this.at(i>=0?i:r,n)}intersectsBox(t){return this.intersectBox(t,Si)!==null}intersectTriangle(t,n,i,r,a){yc.subVectors(n,t),To.subVectors(i,t),Tc.crossVectors(yc,To);let s=this.direction.dot(Tc),o;if(s>0){if(r)return null;o=1}else if(s<0)o=-1,s=-s;else return null;ji.subVectors(this.origin,t);const l=o*this.direction.dot(To.crossVectors(ji,To));if(l<0)return null;const c=o*this.direction.dot(yc.cross(ji));if(c<0||l+c>s)return null;const h=-o*ji.dot(Tc);return h<0?null:this.at(h/s,a)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class zt{constructor(t,n,i,r,a,s,o,l,c,h,u,f,d,p,g,v){zt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,n,i,r,a,s,o,l,c,h,u,f,d,p,g,v)}set(t,n,i,r,a,s,o,l,c,h,u,f,d,p,g,v){const m=this.elements;return m[0]=t,m[4]=n,m[8]=i,m[12]=r,m[1]=a,m[5]=s,m[9]=o,m[13]=l,m[2]=c,m[6]=h,m[10]=u,m[14]=f,m[3]=d,m[7]=p,m[11]=g,m[15]=v,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new zt().fromArray(this.elements)}copy(t){const n=this.elements,i=t.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this}copyPosition(t){const n=this.elements,i=t.elements;return n[12]=i[12],n[13]=i[13],n[14]=i[14],this}setFromMatrix3(t){const n=t.elements;return this.set(n[0],n[3],n[6],0,n[1],n[4],n[7],0,n[2],n[5],n[8],0,0,0,0,1),this}extractBasis(t,n,i){return t.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,n,i){return this.set(t.x,n.x,i.x,0,t.y,n.y,i.y,0,t.z,n.z,i.z,0,0,0,0,1),this}extractRotation(t){const n=this.elements,i=t.elements,r=1/pa.setFromMatrixColumn(t,0).length(),a=1/pa.setFromMatrixColumn(t,1).length(),s=1/pa.setFromMatrixColumn(t,2).length();return n[0]=i[0]*r,n[1]=i[1]*r,n[2]=i[2]*r,n[3]=0,n[4]=i[4]*a,n[5]=i[5]*a,n[6]=i[6]*a,n[7]=0,n[8]=i[8]*s,n[9]=i[9]*s,n[10]=i[10]*s,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromEuler(t){const n=this.elements,i=t.x,r=t.y,a=t.z,s=Math.cos(i),o=Math.sin(i),l=Math.cos(r),c=Math.sin(r),h=Math.cos(a),u=Math.sin(a);if(t.order==="XYZ"){const f=s*h,d=s*u,p=o*h,g=o*u;n[0]=l*h,n[4]=-l*u,n[8]=c,n[1]=d+p*c,n[5]=f-g*c,n[9]=-o*l,n[2]=g-f*c,n[6]=p+d*c,n[10]=s*l}else if(t.order==="YXZ"){const f=l*h,d=l*u,p=c*h,g=c*u;n[0]=f+g*o,n[4]=p*o-d,n[8]=s*c,n[1]=s*u,n[5]=s*h,n[9]=-o,n[2]=d*o-p,n[6]=g+f*o,n[10]=s*l}else if(t.order==="ZXY"){const f=l*h,d=l*u,p=c*h,g=c*u;n[0]=f-g*o,n[4]=-s*u,n[8]=p+d*o,n[1]=d+p*o,n[5]=s*h,n[9]=g-f*o,n[2]=-s*c,n[6]=o,n[10]=s*l}else if(t.order==="ZYX"){const f=s*h,d=s*u,p=o*h,g=o*u;n[0]=l*h,n[4]=p*c-d,n[8]=f*c+g,n[1]=l*u,n[5]=g*c+f,n[9]=d*c-p,n[2]=-c,n[6]=o*l,n[10]=s*l}else if(t.order==="YZX"){const f=s*l,d=s*c,p=o*l,g=o*c;n[0]=l*h,n[4]=g-f*u,n[8]=p*u+d,n[1]=u,n[5]=s*h,n[9]=-o*h,n[2]=-c*h,n[6]=d*u+p,n[10]=f-g*u}else if(t.order==="XZY"){const f=s*l,d=s*c,p=o*l,g=o*c;n[0]=l*h,n[4]=-u,n[8]=c*h,n[1]=f*u+g,n[5]=s*h,n[9]=d*u-p,n[2]=p*u-d,n[6]=o*h,n[10]=g*u+f}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromQuaternion(t){return this.compose(tS,t,nS)}lookAt(t,n,i){const r=this.elements;return Dn.subVectors(t,n),Dn.lengthSq()===0&&(Dn.z=1),Dn.normalize(),Zi.crossVectors(i,Dn),Zi.lengthSq()===0&&(Math.abs(i.z)===1?Dn.x+=1e-4:Dn.z+=1e-4,Dn.normalize(),Zi.crossVectors(i,Dn)),Zi.normalize(),So.crossVectors(Dn,Zi),r[0]=Zi.x,r[4]=So.x,r[8]=Dn.x,r[1]=Zi.y,r[5]=So.y,r[9]=Dn.y,r[2]=Zi.z,r[6]=So.z,r[10]=Dn.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,n){const i=t.elements,r=n.elements,a=this.elements,s=i[0],o=i[4],l=i[8],c=i[12],h=i[1],u=i[5],f=i[9],d=i[13],p=i[2],g=i[6],v=i[10],m=i[14],y=i[3],_=i[7],x=i[11],A=i[15],E=r[0],w=r[4],b=r[8],M=r[12],T=r[1],P=r[5],O=r[9],D=r[13],N=r[2],B=r[6],z=r[10],Y=r[14],F=r[3],J=r[7],V=r[11],ce=r[15];return a[0]=s*E+o*T+l*N+c*F,a[4]=s*w+o*P+l*B+c*J,a[8]=s*b+o*O+l*z+c*V,a[12]=s*M+o*D+l*Y+c*ce,a[1]=h*E+u*T+f*N+d*F,a[5]=h*w+u*P+f*B+d*J,a[9]=h*b+u*O+f*z+d*V,a[13]=h*M+u*D+f*Y+d*ce,a[2]=p*E+g*T+v*N+m*F,a[6]=p*w+g*P+v*B+m*J,a[10]=p*b+g*O+v*z+m*V,a[14]=p*M+g*D+v*Y+m*ce,a[3]=y*E+_*T+x*N+A*F,a[7]=y*w+_*P+x*B+A*J,a[11]=y*b+_*O+x*z+A*V,a[15]=y*M+_*D+x*Y+A*ce,this}multiplyScalar(t){const n=this.elements;return n[0]*=t,n[4]*=t,n[8]*=t,n[12]*=t,n[1]*=t,n[5]*=t,n[9]*=t,n[13]*=t,n[2]*=t,n[6]*=t,n[10]*=t,n[14]*=t,n[3]*=t,n[7]*=t,n[11]*=t,n[15]*=t,this}determinant(){const t=this.elements,n=t[0],i=t[4],r=t[8],a=t[12],s=t[1],o=t[5],l=t[9],c=t[13],h=t[2],u=t[6],f=t[10],d=t[14],p=t[3],g=t[7],v=t[11],m=t[15];return p*(+a*l*u-r*c*u-a*o*f+i*c*f+r*o*d-i*l*d)+g*(+n*l*d-n*c*f+a*s*f-r*s*d+r*c*h-a*l*h)+v*(+n*c*u-n*o*d-a*s*u+i*s*d+a*o*h-i*c*h)+m*(-r*o*h-n*l*u+n*o*f+r*s*u-i*s*f+i*l*h)}transpose(){const t=this.elements;let n;return n=t[1],t[1]=t[4],t[4]=n,n=t[2],t[2]=t[8],t[8]=n,n=t[6],t[6]=t[9],t[9]=n,n=t[3],t[3]=t[12],t[12]=n,n=t[7],t[7]=t[13],t[13]=n,n=t[11],t[11]=t[14],t[14]=n,this}setPosition(t,n,i){const r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=n,r[14]=i),this}invert(){const t=this.elements,n=t[0],i=t[1],r=t[2],a=t[3],s=t[4],o=t[5],l=t[6],c=t[7],h=t[8],u=t[9],f=t[10],d=t[11],p=t[12],g=t[13],v=t[14],m=t[15],y=u*v*c-g*f*c+g*l*d-o*v*d-u*l*m+o*f*m,_=p*f*c-h*v*c-p*l*d+s*v*d+h*l*m-s*f*m,x=h*g*c-p*u*c+p*o*d-s*g*d-h*o*m+s*u*m,A=p*u*l-h*g*l-p*o*f+s*g*f+h*o*v-s*u*v,E=n*y+i*_+r*x+a*A;if(E===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/E;return t[0]=y*w,t[1]=(g*f*a-u*v*a-g*r*d+i*v*d+u*r*m-i*f*m)*w,t[2]=(o*v*a-g*l*a+g*r*c-i*v*c-o*r*m+i*l*m)*w,t[3]=(u*l*a-o*f*a-u*r*c+i*f*c+o*r*d-i*l*d)*w,t[4]=_*w,t[5]=(h*v*a-p*f*a+p*r*d-n*v*d-h*r*m+n*f*m)*w,t[6]=(p*l*a-s*v*a-p*r*c+n*v*c+s*r*m-n*l*m)*w,t[7]=(s*f*a-h*l*a+h*r*c-n*f*c-s*r*d+n*l*d)*w,t[8]=x*w,t[9]=(p*u*a-h*g*a-p*i*d+n*g*d+h*i*m-n*u*m)*w,t[10]=(s*g*a-p*o*a+p*i*c-n*g*c-s*i*m+n*o*m)*w,t[11]=(h*o*a-s*u*a-h*i*c+n*u*c+s*i*d-n*o*d)*w,t[12]=A*w,t[13]=(h*g*r-p*u*r+p*i*f-n*g*f-h*i*v+n*u*v)*w,t[14]=(p*o*r-s*g*r-p*i*l+n*g*l+s*i*v-n*o*v)*w,t[15]=(s*u*r-h*o*r+h*i*l-n*u*l-s*i*f+n*o*f)*w,this}scale(t){const n=this.elements,i=t.x,r=t.y,a=t.z;return n[0]*=i,n[4]*=r,n[8]*=a,n[1]*=i,n[5]*=r,n[9]*=a,n[2]*=i,n[6]*=r,n[10]*=a,n[3]*=i,n[7]*=r,n[11]*=a,this}getMaxScaleOnAxis(){const t=this.elements,n=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(n,i,r))}makeTranslation(t,n,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,n,0,0,1,i,0,0,0,1),this}makeRotationX(t){const n=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,n,-i,0,0,i,n,0,0,0,0,1),this}makeRotationY(t){const n=Math.cos(t),i=Math.sin(t);return this.set(n,0,i,0,0,1,0,0,-i,0,n,0,0,0,0,1),this}makeRotationZ(t){const n=Math.cos(t),i=Math.sin(t);return this.set(n,-i,0,0,i,n,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,n){const i=Math.cos(n),r=Math.sin(n),a=1-i,s=t.x,o=t.y,l=t.z,c=a*s,h=a*o;return this.set(c*s+i,c*o-r*l,c*l+r*o,0,c*o+r*l,h*o+i,h*l-r*s,0,c*l-r*o,h*l+r*s,a*l*l+i,0,0,0,0,1),this}makeScale(t,n,i){return this.set(t,0,0,0,0,n,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,n,i,r,a,s){return this.set(1,i,a,0,t,1,s,0,n,r,1,0,0,0,0,1),this}compose(t,n,i){const r=this.elements,a=n._x,s=n._y,o=n._z,l=n._w,c=a+a,h=s+s,u=o+o,f=a*c,d=a*h,p=a*u,g=s*h,v=s*u,m=o*u,y=l*c,_=l*h,x=l*u,A=i.x,E=i.y,w=i.z;return r[0]=(1-(g+m))*A,r[1]=(d+x)*A,r[2]=(p-_)*A,r[3]=0,r[4]=(d-x)*E,r[5]=(1-(f+m))*E,r[6]=(v+y)*E,r[7]=0,r[8]=(p+_)*w,r[9]=(v-y)*w,r[10]=(1-(f+g))*w,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,n,i){const r=this.elements;let a=pa.set(r[0],r[1],r[2]).length();const s=pa.set(r[4],r[5],r[6]).length(),o=pa.set(r[8],r[9],r[10]).length();this.determinant()<0&&(a=-a),t.x=r[12],t.y=r[13],t.z=r[14],jn.copy(this);const c=1/a,h=1/s,u=1/o;return jn.elements[0]*=c,jn.elements[1]*=c,jn.elements[2]*=c,jn.elements[4]*=h,jn.elements[5]*=h,jn.elements[6]*=h,jn.elements[8]*=u,jn.elements[9]*=u,jn.elements[10]*=u,n.setFromRotationMatrix(jn),i.x=a,i.y=s,i.z=o,this}makePerspective(t,n,i,r,a,s,o=Di){const l=this.elements,c=2*a/(n-t),h=2*a/(i-r),u=(n+t)/(n-t),f=(i+r)/(i-r);let d,p;if(o===Di)d=-(s+a)/(s-a),p=-2*s*a/(s-a);else if(o===ul)d=-s/(s-a),p=-s*a/(s-a);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+o);return l[0]=c,l[4]=0,l[8]=u,l[12]=0,l[1]=0,l[5]=h,l[9]=f,l[13]=0,l[2]=0,l[6]=0,l[10]=d,l[14]=p,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}makeOrthographic(t,n,i,r,a,s,o=Di){const l=this.elements,c=1/(n-t),h=1/(i-r),u=1/(s-a),f=(n+t)*c,d=(i+r)*h;let p,g;if(o===Di)p=(s+a)*u,g=-2*u;else if(o===ul)p=a*u,g=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+o);return l[0]=2*c,l[4]=0,l[8]=0,l[12]=-f,l[1]=0,l[5]=2*h,l[9]=0,l[13]=-d,l[2]=0,l[6]=0,l[10]=g,l[14]=-p,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}equals(t){const n=this.elements,i=t.elements;for(let r=0;r<16;r++)if(n[r]!==i[r])return!1;return!0}fromArray(t,n=0){for(let i=0;i<16;i++)this.elements[i]=t[i+n];return this}toArray(t=[],n=0){const i=this.elements;return t[n]=i[0],t[n+1]=i[1],t[n+2]=i[2],t[n+3]=i[3],t[n+4]=i[4],t[n+5]=i[5],t[n+6]=i[6],t[n+7]=i[7],t[n+8]=i[8],t[n+9]=i[9],t[n+10]=i[10],t[n+11]=i[11],t[n+12]=i[12],t[n+13]=i[13],t[n+14]=i[14],t[n+15]=i[15],t}}const pa=new k,jn=new zt,tS=new k(0,0,0),nS=new k(1,1,1),Zi=new k,So=new k,Dn=new k,$f=new zt,Jf=new Zr;class gi{constructor(t=0,n=0,i=0,r=gi.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=n,this._z=i,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,n,i,r=this._order){return this._x=t,this._y=n,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,n=this._order,i=!0){const r=t.elements,a=r[0],s=r[4],o=r[8],l=r[1],c=r[5],h=r[9],u=r[2],f=r[6],d=r[10];switch(n){case"XYZ":this._y=Math.asin(on(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,d),this._z=Math.atan2(-s,a)):(this._x=Math.atan2(f,c),this._z=0);break;case"YXZ":this._x=Math.asin(-on(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,d),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,a),this._z=0);break;case"ZXY":this._x=Math.asin(on(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(-u,d),this._z=Math.atan2(-s,c)):(this._y=0,this._z=Math.atan2(l,a));break;case"ZYX":this._y=Math.asin(-on(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(f,d),this._z=Math.atan2(l,a)):(this._x=0,this._z=Math.atan2(-s,c));break;case"YZX":this._z=Math.asin(on(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,a)):(this._x=0,this._y=Math.atan2(o,d));break;case"XZY":this._z=Math.asin(-on(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(f,c),this._y=Math.atan2(o,a)):(this._x=Math.atan2(-h,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,n,i){return $f.makeRotationFromQuaternion(t),this.setFromRotationMatrix($f,n,i)}setFromVector3(t,n=this._order){return this.set(t.x,t.y,t.z,n)}reorder(t){return Jf.setFromEuler(this),this.setFromQuaternion(Jf,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],n=0){return t[n]=this._x,t[n+1]=this._y,t[n+2]=this._z,t[n+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}gi.DEFAULT_ORDER="XYZ";class Rm{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let iS=0;const Qf=new k,ma=new Zr,Ei=new zt,Eo=new k,ms=new k,rS=new k,aS=new Zr,ed=new k(1,0,0),td=new k(0,1,0),nd=new k(0,0,1),id={type:"added"},sS={type:"removed"},va={type:"childadded",child:null},Sc={type:"childremoved",child:null};class ln extends Kr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:iS++}),this.uuid=ns(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ln.DEFAULT_UP.clone();const t=new k,n=new gi,i=new Zr,r=new k(1,1,1);function a(){i.setFromEuler(n,!1)}function s(){n.setFromQuaternion(i,void 0,!1)}n._onChange(a),i._onChange(s),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:n},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new zt},normalMatrix:{value:new et}}),this.matrix=new zt,this.matrixWorld=new zt,this.matrixAutoUpdate=ln.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=ln.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Rm,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,n){this.quaternion.setFromAxisAngle(t,n)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,n){return ma.setFromAxisAngle(t,n),this.quaternion.multiply(ma),this}rotateOnWorldAxis(t,n){return ma.setFromAxisAngle(t,n),this.quaternion.premultiply(ma),this}rotateX(t){return this.rotateOnAxis(ed,t)}rotateY(t){return this.rotateOnAxis(td,t)}rotateZ(t){return this.rotateOnAxis(nd,t)}translateOnAxis(t,n){return Qf.copy(t).applyQuaternion(this.quaternion),this.position.add(Qf.multiplyScalar(n)),this}translateX(t){return this.translateOnAxis(ed,t)}translateY(t){return this.translateOnAxis(td,t)}translateZ(t){return this.translateOnAxis(nd,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Ei.copy(this.matrixWorld).invert())}lookAt(t,n,i){t.isVector3?Eo.copy(t):Eo.set(t,n,i);const r=this.parent;this.updateWorldMatrix(!0,!1),ms.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Ei.lookAt(ms,Eo,this.up):Ei.lookAt(Eo,ms,this.up),this.quaternion.setFromRotationMatrix(Ei),r&&(Ei.extractRotation(r.matrixWorld),ma.setFromRotationMatrix(Ei),this.quaternion.premultiply(ma.invert()))}add(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.add(arguments[n]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(id),va.child=t,this.dispatchEvent(va),va.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const n=this.children.indexOf(t);return n!==-1&&(t.parent=null,this.children.splice(n,1),t.dispatchEvent(sS),Sc.child=t,this.dispatchEvent(Sc),Sc.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Ei.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Ei.multiply(t.parent.matrixWorld)),t.applyMatrix4(Ei),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(id),va.child=t,this.dispatchEvent(va),va.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,n){if(this[t]===n)return this;for(let i=0,r=this.children.length;i<r;i++){const s=this.children[i].getObjectByProperty(t,n);if(s!==void 0)return s}}getObjectsByProperty(t,n,i=[]){this[t]===n&&i.push(this);const r=this.children;for(let a=0,s=r.length;a<s;a++)r[a].getObjectsByProperty(t,n,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ms,t,rS),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ms,aS,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return t.set(n[8],n[9],n[10]).normalize()}raycast(){}traverse(t){t(this);const n=this.children;for(let i=0,r=n.length;i<r;i++)n[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const n=this.children;for(let i=0,r=n.length;i<r;i++)n[i].traverseVisible(t)}traverseAncestors(t){const n=this.parent;n!==null&&(t(n),n.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const n=this.children;for(let i=0,r=n.length;i<r;i++){const a=n[i];(a.matrixWorldAutoUpdate===!0||t===!0)&&a.updateMatrixWorld(t)}}updateWorldMatrix(t,n){const i=this.parent;if(t===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),n===!0){const r=this.children;for(let a=0,s=r.length;a<s;a++){const o=r[a];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(t){const n=t===void 0||typeof t=="string",i={};n&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(r.type="BatchedMesh",r.perObjectFrustumCulled=this.perObjectFrustumCulled,r.sortObjects=this.sortObjects,r.drawRanges=this._drawRanges,r.reservedRanges=this._reservedRanges,r.visibility=this._visibility,r.active=this._active,r.bounds=this._bounds.map(o=>({boxInitialized:o.boxInitialized,boxMin:o.box.min.toArray(),boxMax:o.box.max.toArray(),sphereInitialized:o.sphereInitialized,sphereRadius:o.sphere.radius,sphereCenter:o.sphere.center.toArray()})),r.maxGeometryCount=this._maxGeometryCount,r.maxVertexCount=this._maxVertexCount,r.maxIndexCount=this._maxIndexCount,r.geometryInitialized=this._geometryInitialized,r.geometryCount=this._geometryCount,r.matricesTexture=this._matricesTexture.toJSON(t),this.boundingSphere!==null&&(r.boundingSphere={center:r.boundingSphere.center.toArray(),radius:r.boundingSphere.radius}),this.boundingBox!==null&&(r.boundingBox={min:r.boundingBox.min.toArray(),max:r.boundingBox.max.toArray()}));function a(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=a(t.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];a(t.shapes,u)}else a(t.shapes,l)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(a(t.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,c=this.material.length;l<c;l++)o.push(a(t.materials,this.material[l]));r.material=o}else r.material=a(t.materials,this.material);if(this.children.length>0){r.children=[];for(let o=0;o<this.children.length;o++)r.children.push(this.children[o].toJSON(t).object)}if(this.animations.length>0){r.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];r.animations.push(a(t.animations,l))}}if(n){const o=s(t.geometries),l=s(t.materials),c=s(t.textures),h=s(t.images),u=s(t.shapes),f=s(t.skeletons),d=s(t.animations),p=s(t.nodes);o.length>0&&(i.geometries=o),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),h.length>0&&(i.images=h),u.length>0&&(i.shapes=u),f.length>0&&(i.skeletons=f),d.length>0&&(i.animations=d),p.length>0&&(i.nodes=p)}return i.object=r,i;function s(o){const l=[];for(const c in o){const h=o[c];delete h.metadata,l.push(h)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,n=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),n===!0)for(let i=0;i<t.children.length;i++){const r=t.children[i];this.add(r.clone())}return this}}ln.DEFAULT_UP=new k(0,1,0);ln.DEFAULT_MATRIX_AUTO_UPDATE=!0;ln.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Zn=new k,Mi=new k,Ec=new k,wi=new k,ga=new k,_a=new k,rd=new k,Mc=new k,wc=new k,Ac=new k;class oi{constructor(t=new k,n=new k,i=new k){this.a=t,this.b=n,this.c=i}static getNormal(t,n,i,r){r.subVectors(i,n),Zn.subVectors(t,n),r.cross(Zn);const a=r.lengthSq();return a>0?r.multiplyScalar(1/Math.sqrt(a)):r.set(0,0,0)}static getBarycoord(t,n,i,r,a){Zn.subVectors(r,n),Mi.subVectors(i,n),Ec.subVectors(t,n);const s=Zn.dot(Zn),o=Zn.dot(Mi),l=Zn.dot(Ec),c=Mi.dot(Mi),h=Mi.dot(Ec),u=s*c-o*o;if(u===0)return a.set(0,0,0),null;const f=1/u,d=(c*l-o*h)*f,p=(s*h-o*l)*f;return a.set(1-d-p,p,d)}static containsPoint(t,n,i,r){return this.getBarycoord(t,n,i,r,wi)===null?!1:wi.x>=0&&wi.y>=0&&wi.x+wi.y<=1}static getInterpolation(t,n,i,r,a,s,o,l){return this.getBarycoord(t,n,i,r,wi)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(a,wi.x),l.addScaledVector(s,wi.y),l.addScaledVector(o,wi.z),l)}static isFrontFacing(t,n,i,r){return Zn.subVectors(i,n),Mi.subVectors(t,n),Zn.cross(Mi).dot(r)<0}set(t,n,i){return this.a.copy(t),this.b.copy(n),this.c.copy(i),this}setFromPointsAndIndices(t,n,i,r){return this.a.copy(t[n]),this.b.copy(t[i]),this.c.copy(t[r]),this}setFromAttributeAndIndices(t,n,i,r){return this.a.fromBufferAttribute(t,n),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,r),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Zn.subVectors(this.c,this.b),Mi.subVectors(this.a,this.b),Zn.cross(Mi).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return oi.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,n){return oi.getBarycoord(t,this.a,this.b,this.c,n)}getInterpolation(t,n,i,r,a){return oi.getInterpolation(t,this.a,this.b,this.c,n,i,r,a)}containsPoint(t){return oi.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return oi.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,n){const i=this.a,r=this.b,a=this.c;let s,o;ga.subVectors(r,i),_a.subVectors(a,i),Mc.subVectors(t,i);const l=ga.dot(Mc),c=_a.dot(Mc);if(l<=0&&c<=0)return n.copy(i);wc.subVectors(t,r);const h=ga.dot(wc),u=_a.dot(wc);if(h>=0&&u<=h)return n.copy(r);const f=l*u-h*c;if(f<=0&&l>=0&&h<=0)return s=l/(l-h),n.copy(i).addScaledVector(ga,s);Ac.subVectors(t,a);const d=ga.dot(Ac),p=_a.dot(Ac);if(p>=0&&d<=p)return n.copy(a);const g=d*c-l*p;if(g<=0&&c>=0&&p<=0)return o=c/(c-p),n.copy(i).addScaledVector(_a,o);const v=h*p-d*u;if(v<=0&&u-h>=0&&d-p>=0)return rd.subVectors(a,r),o=(u-h)/(u-h+(d-p)),n.copy(r).addScaledVector(rd,o);const m=1/(v+g+f);return s=g*m,o=f*m,n.copy(i).addScaledVector(ga,s).addScaledVector(_a,o)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const Lm={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ki={h:0,s:0,l:0},Mo={h:0,s:0,l:0};function bc(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*6*(2/3-n):e}class ft{constructor(t,n,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,n,i)}set(t,n,i){if(n===void 0&&i===void 0){const r=t;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(t,n,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,n=ri){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Tt.toWorkingColorSpace(this,n),this}setRGB(t,n,i,r=Tt.workingColorSpace){return this.r=t,this.g=n,this.b=i,Tt.toWorkingColorSpace(this,r),this}setHSL(t,n,i,r=Tt.workingColorSpace){if(t=Nh(t,1),n=on(n,0,1),i=on(i,0,1),n===0)this.r=this.g=this.b=i;else{const a=i<=.5?i*(1+n):i+n-i*n,s=2*i-a;this.r=bc(s,a,t+1/3),this.g=bc(s,a,t),this.b=bc(s,a,t-1/3)}return Tt.toWorkingColorSpace(this,r),this}setStyle(t,n=ri){function i(a){a!==void 0&&parseFloat(a)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(t)){let a;const s=r[1],o=r[2];switch(s){case"rgb":case"rgba":if(a=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(a[4]),this.setRGB(Math.min(255,parseInt(a[1],10))/255,Math.min(255,parseInt(a[2],10))/255,Math.min(255,parseInt(a[3],10))/255,n);if(a=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(a[4]),this.setRGB(Math.min(100,parseInt(a[1],10))/100,Math.min(100,parseInt(a[2],10))/100,Math.min(100,parseInt(a[3],10))/100,n);break;case"hsl":case"hsla":if(a=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return i(a[4]),this.setHSL(parseFloat(a[1])/360,parseFloat(a[2])/100,parseFloat(a[3])/100,n);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(t)){const a=r[1],s=a.length;if(s===3)return this.setRGB(parseInt(a.charAt(0),16)/15,parseInt(a.charAt(1),16)/15,parseInt(a.charAt(2),16)/15,n);if(s===6)return this.setHex(parseInt(a,16),n);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,n);return this}setColorName(t,n=ri){const i=Lm[t.toLowerCase()];return i!==void 0?this.setHex(i,n):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=Ia(t.r),this.g=Ia(t.g),this.b=Ia(t.b),this}copyLinearToSRGB(t){return this.r=pc(t.r),this.g=pc(t.g),this.b=pc(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=ri){return Tt.fromWorkingColorSpace(un.copy(this),t),Math.round(on(un.r*255,0,255))*65536+Math.round(on(un.g*255,0,255))*256+Math.round(on(un.b*255,0,255))}getHexString(t=ri){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,n=Tt.workingColorSpace){Tt.fromWorkingColorSpace(un.copy(this),n);const i=un.r,r=un.g,a=un.b,s=Math.max(i,r,a),o=Math.min(i,r,a);let l,c;const h=(o+s)/2;if(o===s)l=0,c=0;else{const u=s-o;switch(c=h<=.5?u/(s+o):u/(2-s-o),s){case i:l=(r-a)/u+(r<a?6:0);break;case r:l=(a-i)/u+2;break;case a:l=(i-r)/u+4;break}l/=6}return t.h=l,t.s=c,t.l=h,t}getRGB(t,n=Tt.workingColorSpace){return Tt.fromWorkingColorSpace(un.copy(this),n),t.r=un.r,t.g=un.g,t.b=un.b,t}getStyle(t=ri){Tt.fromWorkingColorSpace(un.copy(this),t);const n=un.r,i=un.g,r=un.b;return t!==ri?`color(${t} ${n.toFixed(3)} ${i.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(n*255)},${Math.round(i*255)},${Math.round(r*255)})`}offsetHSL(t,n,i){return this.getHSL(Ki),this.setHSL(Ki.h+t,Ki.s+n,Ki.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,n){return this.r=t.r+n.r,this.g=t.g+n.g,this.b=t.b+n.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,n){return this.r+=(t.r-this.r)*n,this.g+=(t.g-this.g)*n,this.b+=(t.b-this.b)*n,this}lerpColors(t,n,i){return this.r=t.r+(n.r-t.r)*i,this.g=t.g+(n.g-t.g)*i,this.b=t.b+(n.b-t.b)*i,this}lerpHSL(t,n){this.getHSL(Ki),t.getHSL(Mo);const i=ws(Ki.h,Mo.h,n),r=ws(Ki.s,Mo.s,n),a=ws(Ki.l,Mo.l,n);return this.setHSL(i,r,a),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const n=this.r,i=this.g,r=this.b,a=t.elements;return this.r=a[0]*n+a[3]*i+a[6]*r,this.g=a[1]*n+a[4]*i+a[7]*r,this.b=a[2]*n+a[5]*i+a[8]*r,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,n=0){return this.r=t[n],this.g=t[n+1],this.b=t[n+2],this}toArray(t=[],n=0){return t[n]=this.r,t[n+1]=this.g,t[n+2]=this.b,t}fromBufferAttribute(t,n){return this.r=t.getX(n),this.g=t.getY(n),this.b=t.getZ(n),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const un=new ft;ft.NAMES=Lm;let oS=0;class qs extends Kr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:oS++}),this.uuid=ns(),this.name="",this.type="Material",this.blending=Da,this.side=hr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=rh,this.blendDst=ah,this.blendEquation=Ur,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new ft(0,0,0),this.blendAlpha=0,this.depthFunc=sl,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=kf,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ca,this.stencilZFail=ca,this.stencilZPass=ca,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const n in t){const i=t[n];if(i===void 0){console.warn(`THREE.Material: parameter '${n}' has value of undefined.`);continue}const r=this[n];if(r===void 0){console.warn(`THREE.Material: '${n}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[n]=i}}toJSON(t){const n=t===void 0||typeof t=="string";n&&(t={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Da&&(i.blending=this.blending),this.side!==hr&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==rh&&(i.blendSrc=this.blendSrc),this.blendDst!==ah&&(i.blendDst=this.blendDst),this.blendEquation!==Ur&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==sl&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==kf&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==ca&&(i.stencilFail=this.stencilFail),this.stencilZFail!==ca&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==ca&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function r(a){const s=[];for(const o in a){const l=a[o];delete l.metadata,s.push(l)}return s}if(n){const a=r(t.textures),s=r(t.images);a.length>0&&(i.textures=a),s.length>0&&(i.images=s)}return i}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const n=t.clippingPlanes;let i=null;if(n!==null){const r=n.length;i=new Array(r);for(let a=0;a!==r;++a)i[a]=n[a].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class Pm extends qs{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ft(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new gi,this.combine=dm,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Li=lS();function lS(){const e=new ArrayBuffer(4),t=new Float32Array(e),n=new Uint32Array(e),i=new Uint32Array(512),r=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(i[l]=0,i[l|256]=32768,r[l]=24,r[l|256]=24):c<-14?(i[l]=1024>>-c-14,i[l|256]=1024>>-c-14|32768,r[l]=-c-1,r[l|256]=-c-1):c<=15?(i[l]=c+15<<10,i[l|256]=c+15<<10|32768,r[l]=13,r[l|256]=13):c<128?(i[l]=31744,i[l|256]=64512,r[l]=24,r[l|256]=24):(i[l]=31744,i[l|256]=64512,r[l]=13,r[l|256]=13)}const a=new Uint32Array(2048),s=new Uint32Array(64),o=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,h=0;for(;!(c&8388608);)c<<=1,h-=8388608;c&=-8388609,h+=947912704,a[l]=c|h}for(let l=1024;l<2048;++l)a[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)s[l]=l<<23;s[31]=1199570944,s[32]=2147483648;for(let l=33;l<63;++l)s[l]=2147483648+(l-32<<23);s[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(o[l]=1024);return{floatView:t,uint32View:n,baseTable:i,shiftTable:r,mantissaTable:a,exponentTable:s,offsetTable:o}}function cS(e){Math.abs(e)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),e=on(e,-65504,65504),Li.floatView[0]=e;const t=Li.uint32View[0],n=t>>23&511;return Li.baseTable[n]+((t&8388607)>>Li.shiftTable[n])}function hS(e){const t=e>>10;return Li.uint32View[0]=Li.mantissaTable[Li.offsetTable[t]+(e&1023)]+Li.exponentTable[t],Li.floatView[0]}const wo={toHalfFloat:cS,fromHalfFloat:hS},kt=new k,Ao=new He;class fi{constructor(t,n,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=n,this.count=t!==void 0?t.length/n:0,this.normalized=i,this.usage=Wf,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=$n,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}get updateRange(){return qT("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(t){return this.usage=t,this}addUpdateRange(t,n){this.updateRanges.push({start:t,count:n})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,n,i){t*=this.itemSize,i*=n.itemSize;for(let r=0,a=this.itemSize;r<a;r++)this.array[t+r]=n.array[i+r];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let n=0,i=this.count;n<i;n++)Ao.fromBufferAttribute(this,n),Ao.applyMatrix3(t),this.setXY(n,Ao.x,Ao.y);else if(this.itemSize===3)for(let n=0,i=this.count;n<i;n++)kt.fromBufferAttribute(this,n),kt.applyMatrix3(t),this.setXYZ(n,kt.x,kt.y,kt.z);return this}applyMatrix4(t){for(let n=0,i=this.count;n<i;n++)kt.fromBufferAttribute(this,n),kt.applyMatrix4(t),this.setXYZ(n,kt.x,kt.y,kt.z);return this}applyNormalMatrix(t){for(let n=0,i=this.count;n<i;n++)kt.fromBufferAttribute(this,n),kt.applyNormalMatrix(t),this.setXYZ(n,kt.x,kt.y,kt.z);return this}transformDirection(t){for(let n=0,i=this.count;n<i;n++)kt.fromBufferAttribute(this,n),kt.transformDirection(t),this.setXYZ(n,kt.x,kt.y,kt.z);return this}set(t,n=0){return this.array.set(t,n),this}getComponent(t,n){let i=this.array[t*this.itemSize+n];return this.normalized&&(i=Aa(i,this.array)),i}setComponent(t,n,i){return this.normalized&&(i=gn(i,this.array)),this.array[t*this.itemSize+n]=i,this}getX(t){let n=this.array[t*this.itemSize];return this.normalized&&(n=Aa(n,this.array)),n}setX(t,n){return this.normalized&&(n=gn(n,this.array)),this.array[t*this.itemSize]=n,this}getY(t){let n=this.array[t*this.itemSize+1];return this.normalized&&(n=Aa(n,this.array)),n}setY(t,n){return this.normalized&&(n=gn(n,this.array)),this.array[t*this.itemSize+1]=n,this}getZ(t){let n=this.array[t*this.itemSize+2];return this.normalized&&(n=Aa(n,this.array)),n}setZ(t,n){return this.normalized&&(n=gn(n,this.array)),this.array[t*this.itemSize+2]=n,this}getW(t){let n=this.array[t*this.itemSize+3];return this.normalized&&(n=Aa(n,this.array)),n}setW(t,n){return this.normalized&&(n=gn(n,this.array)),this.array[t*this.itemSize+3]=n,this}setXY(t,n,i){return t*=this.itemSize,this.normalized&&(n=gn(n,this.array),i=gn(i,this.array)),this.array[t+0]=n,this.array[t+1]=i,this}setXYZ(t,n,i,r){return t*=this.itemSize,this.normalized&&(n=gn(n,this.array),i=gn(i,this.array),r=gn(r,this.array)),this.array[t+0]=n,this.array[t+1]=i,this.array[t+2]=r,this}setXYZW(t,n,i,r,a){return t*=this.itemSize,this.normalized&&(n=gn(n,this.array),i=gn(i,this.array),r=gn(r,this.array),a=gn(a,this.array)),this.array[t+0]=n,this.array[t+1]=i,this.array[t+2]=r,this.array[t+3]=a,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Wf&&(t.usage=this.usage),t}}class Dm extends fi{constructor(t,n,i){super(new Uint16Array(t),n,i)}}class Nm extends fi{constructor(t,n,i){super(new Uint32Array(t),n,i)}}class di extends fi{constructor(t,n,i){super(new Float32Array(t),n,i)}}let uS=0;const Gn=new zt,Cc=new ln,xa=new k,Nn=new Ys,vs=new Ys,nn=new k;class _r extends Kr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:uS++}),this.uuid=ns(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(wm(t)?Nm:Dm)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,n){return this.attributes[t]=n,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,n,i=0){this.groups.push({start:t,count:n,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,n){this.drawRange.start=t,this.drawRange.count=n}applyMatrix4(t){const n=this.attributes.position;n!==void 0&&(n.applyMatrix4(t),n.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const a=new et().getNormalMatrix(t);i.applyNormalMatrix(a),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(t),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Gn.makeRotationFromQuaternion(t),this.applyMatrix4(Gn),this}rotateX(t){return Gn.makeRotationX(t),this.applyMatrix4(Gn),this}rotateY(t){return Gn.makeRotationY(t),this.applyMatrix4(Gn),this}rotateZ(t){return Gn.makeRotationZ(t),this.applyMatrix4(Gn),this}translate(t,n,i){return Gn.makeTranslation(t,n,i),this.applyMatrix4(Gn),this}scale(t,n,i){return Gn.makeScale(t,n,i),this.applyMatrix4(Gn),this}lookAt(t){return Cc.lookAt(t),Cc.updateMatrix(),this.applyMatrix4(Cc.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(xa).negate(),this.translate(xa.x,xa.y,xa.z),this}setFromPoints(t){const n=[];for(let i=0,r=t.length;i<r;i++){const a=t[i];n.push(a.x,a.y,a.z||0)}return this.setAttribute("position",new di(n,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Ys);const t=this.attributes.position,n=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new k(-1/0,-1/0,-1/0),new k(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),n)for(let i=0,r=n.length;i<r;i++){const a=n[i];Nn.setFromBufferAttribute(a),this.morphTargetsRelative?(nn.addVectors(this.boundingBox.min,Nn.min),this.boundingBox.expandByPoint(nn),nn.addVectors(this.boundingBox.max,Nn.max),this.boundingBox.expandByPoint(nn)):(this.boundingBox.expandByPoint(Nn.min),this.boundingBox.expandByPoint(Nn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ih);const t=this.attributes.position,n=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new k,1/0);return}if(t){const i=this.boundingSphere.center;if(Nn.setFromBufferAttribute(t),n)for(let a=0,s=n.length;a<s;a++){const o=n[a];vs.setFromBufferAttribute(o),this.morphTargetsRelative?(nn.addVectors(Nn.min,vs.min),Nn.expandByPoint(nn),nn.addVectors(Nn.max,vs.max),Nn.expandByPoint(nn)):(Nn.expandByPoint(vs.min),Nn.expandByPoint(vs.max))}Nn.getCenter(i);let r=0;for(let a=0,s=t.count;a<s;a++)nn.fromBufferAttribute(t,a),r=Math.max(r,i.distanceToSquared(nn));if(n)for(let a=0,s=n.length;a<s;a++){const o=n[a],l=this.morphTargetsRelative;for(let c=0,h=o.count;c<h;c++)nn.fromBufferAttribute(o,c),l&&(xa.fromBufferAttribute(t,c),nn.add(xa)),r=Math.max(r,i.distanceToSquared(nn))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,n=this.attributes;if(t===null||n.position===void 0||n.normal===void 0||n.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=n.position,r=n.normal,a=n.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new fi(new Float32Array(4*i.count),4));const s=this.getAttribute("tangent"),o=[],l=[];for(let b=0;b<i.count;b++)o[b]=new k,l[b]=new k;const c=new k,h=new k,u=new k,f=new He,d=new He,p=new He,g=new k,v=new k;function m(b,M,T){c.fromBufferAttribute(i,b),h.fromBufferAttribute(i,M),u.fromBufferAttribute(i,T),f.fromBufferAttribute(a,b),d.fromBufferAttribute(a,M),p.fromBufferAttribute(a,T),h.sub(c),u.sub(c),d.sub(f),p.sub(f);const P=1/(d.x*p.y-p.x*d.y);isFinite(P)&&(g.copy(h).multiplyScalar(p.y).addScaledVector(u,-d.y).multiplyScalar(P),v.copy(u).multiplyScalar(d.x).addScaledVector(h,-p.x).multiplyScalar(P),o[b].add(g),o[M].add(g),o[T].add(g),l[b].add(v),l[M].add(v),l[T].add(v))}let y=this.groups;y.length===0&&(y=[{start:0,count:t.count}]);for(let b=0,M=y.length;b<M;++b){const T=y[b],P=T.start,O=T.count;for(let D=P,N=P+O;D<N;D+=3)m(t.getX(D+0),t.getX(D+1),t.getX(D+2))}const _=new k,x=new k,A=new k,E=new k;function w(b){A.fromBufferAttribute(r,b),E.copy(A);const M=o[b];_.copy(M),_.sub(A.multiplyScalar(A.dot(M))).normalize(),x.crossVectors(E,M);const P=x.dot(l[b])<0?-1:1;s.setXYZW(b,_.x,_.y,_.z,P)}for(let b=0,M=y.length;b<M;++b){const T=y[b],P=T.start,O=T.count;for(let D=P,N=P+O;D<N;D+=3)w(t.getX(D+0)),w(t.getX(D+1)),w(t.getX(D+2))}}computeVertexNormals(){const t=this.index,n=this.getAttribute("position");if(n!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new fi(new Float32Array(n.count*3),3),this.setAttribute("normal",i);else for(let f=0,d=i.count;f<d;f++)i.setXYZ(f,0,0,0);const r=new k,a=new k,s=new k,o=new k,l=new k,c=new k,h=new k,u=new k;if(t)for(let f=0,d=t.count;f<d;f+=3){const p=t.getX(f+0),g=t.getX(f+1),v=t.getX(f+2);r.fromBufferAttribute(n,p),a.fromBufferAttribute(n,g),s.fromBufferAttribute(n,v),h.subVectors(s,a),u.subVectors(r,a),h.cross(u),o.fromBufferAttribute(i,p),l.fromBufferAttribute(i,g),c.fromBufferAttribute(i,v),o.add(h),l.add(h),c.add(h),i.setXYZ(p,o.x,o.y,o.z),i.setXYZ(g,l.x,l.y,l.z),i.setXYZ(v,c.x,c.y,c.z)}else for(let f=0,d=n.count;f<d;f+=3)r.fromBufferAttribute(n,f+0),a.fromBufferAttribute(n,f+1),s.fromBufferAttribute(n,f+2),h.subVectors(s,a),u.subVectors(r,a),h.cross(u),i.setXYZ(f+0,h.x,h.y,h.z),i.setXYZ(f+1,h.x,h.y,h.z),i.setXYZ(f+2,h.x,h.y,h.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let n=0,i=t.count;n<i;n++)nn.fromBufferAttribute(t,n),nn.normalize(),t.setXYZ(n,nn.x,nn.y,nn.z)}toNonIndexed(){function t(o,l){const c=o.array,h=o.itemSize,u=o.normalized,f=new c.constructor(l.length*h);let d=0,p=0;for(let g=0,v=l.length;g<v;g++){o.isInterleavedBufferAttribute?d=l[g]*o.data.stride+o.offset:d=l[g]*h;for(let m=0;m<h;m++)f[p++]=c[d++]}return new fi(f,h,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const n=new _r,i=this.index.array,r=this.attributes;for(const o in r){const l=r[o],c=t(l,i);n.setAttribute(o,c)}const a=this.morphAttributes;for(const o in a){const l=[],c=a[o];for(let h=0,u=c.length;h<u;h++){const f=c[h],d=t(f,i);l.push(d)}n.morphAttributes[o]=l}n.morphTargetsRelative=this.morphTargetsRelative;const s=this.groups;for(let o=0,l=s.length;o<l;o++){const c=s[o];n.addGroup(c.start,c.count,c.materialIndex)}return n}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(t[c]=l[c]);return t}t.data={attributes:{}};const n=this.index;n!==null&&(t.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});const i=this.attributes;for(const l in i){const c=i[l];t.data.attributes[l]=c.toJSON(t.data)}const r={};let a=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,f=c.length;u<f;u++){const d=c[u];h.push(d.toJSON(t.data))}h.length>0&&(r[l]=h,a=!0)}a&&(t.data.morphAttributes=r,t.data.morphTargetsRelative=this.morphTargetsRelative);const s=this.groups;s.length>0&&(t.data.groups=JSON.parse(JSON.stringify(s)));const o=this.boundingSphere;return o!==null&&(t.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const n={};this.name=t.name;const i=t.index;i!==null&&this.setIndex(i.clone(n));const r=t.attributes;for(const c in r){const h=r[c];this.setAttribute(c,h.clone(n))}const a=t.morphAttributes;for(const c in a){const h=[],u=a[c];for(let f=0,d=u.length;f<d;f++)h.push(u[f].clone(n));this.morphAttributes[c]=h}this.morphTargetsRelative=t.morphTargetsRelative;const s=t.groups;for(let c=0,h=s.length;c<h;c++){const u=s[c];this.addGroup(u.start,u.count,u.materialIndex)}const o=t.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const ad=new zt,Pr=new Cm,bo=new Ih,sd=new k,ya=new k,Ta=new k,Sa=new k,Rc=new k,Co=new k,Ro=new He,Lo=new He,Po=new He,od=new k,ld=new k,cd=new k,Do=new k,No=new k;class ci extends ln{constructor(t=new _r,n=new Pm){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=n,this.updateMorphTargets()}copy(t,n){return super.copy(t,n),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const n=this.geometry.morphAttributes,i=Object.keys(n);if(i.length>0){const r=n[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,s=r.length;a<s;a++){const o=r[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=a}}}}getVertexPosition(t,n){const i=this.geometry,r=i.attributes.position,a=i.morphAttributes.position,s=i.morphTargetsRelative;n.fromBufferAttribute(r,t);const o=this.morphTargetInfluences;if(a&&o){Co.set(0,0,0);for(let l=0,c=a.length;l<c;l++){const h=o[l],u=a[l];h!==0&&(Rc.fromBufferAttribute(u,t),s?Co.addScaledVector(Rc,h):Co.addScaledVector(Rc.sub(n),h))}n.add(Co)}return n}raycast(t,n){const i=this.geometry,r=this.material,a=this.matrixWorld;r!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),bo.copy(i.boundingSphere),bo.applyMatrix4(a),Pr.copy(t.ray).recast(t.near),!(bo.containsPoint(Pr.origin)===!1&&(Pr.intersectSphere(bo,sd)===null||Pr.origin.distanceToSquared(sd)>(t.far-t.near)**2))&&(ad.copy(a).invert(),Pr.copy(t.ray).applyMatrix4(ad),!(i.boundingBox!==null&&Pr.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(t,n,Pr)))}_computeIntersections(t,n,i){let r;const a=this.geometry,s=this.material,o=a.index,l=a.attributes.position,c=a.attributes.uv,h=a.attributes.uv1,u=a.attributes.normal,f=a.groups,d=a.drawRange;if(o!==null)if(Array.isArray(s))for(let p=0,g=f.length;p<g;p++){const v=f[p],m=s[v.materialIndex],y=Math.max(v.start,d.start),_=Math.min(o.count,Math.min(v.start+v.count,d.start+d.count));for(let x=y,A=_;x<A;x+=3){const E=o.getX(x),w=o.getX(x+1),b=o.getX(x+2);r=Io(this,m,t,i,c,h,u,E,w,b),r&&(r.faceIndex=Math.floor(x/3),r.face.materialIndex=v.materialIndex,n.push(r))}}else{const p=Math.max(0,d.start),g=Math.min(o.count,d.start+d.count);for(let v=p,m=g;v<m;v+=3){const y=o.getX(v),_=o.getX(v+1),x=o.getX(v+2);r=Io(this,s,t,i,c,h,u,y,_,x),r&&(r.faceIndex=Math.floor(v/3),n.push(r))}}else if(l!==void 0)if(Array.isArray(s))for(let p=0,g=f.length;p<g;p++){const v=f[p],m=s[v.materialIndex],y=Math.max(v.start,d.start),_=Math.min(l.count,Math.min(v.start+v.count,d.start+d.count));for(let x=y,A=_;x<A;x+=3){const E=x,w=x+1,b=x+2;r=Io(this,m,t,i,c,h,u,E,w,b),r&&(r.faceIndex=Math.floor(x/3),r.face.materialIndex=v.materialIndex,n.push(r))}}else{const p=Math.max(0,d.start),g=Math.min(l.count,d.start+d.count);for(let v=p,m=g;v<m;v+=3){const y=v,_=v+1,x=v+2;r=Io(this,s,t,i,c,h,u,y,_,x),r&&(r.faceIndex=Math.floor(v/3),n.push(r))}}}}function fS(e,t,n,i,r,a,s,o){let l;if(t.side===Cn?l=i.intersectTriangle(s,a,r,!0,o):l=i.intersectTriangle(r,a,s,t.side===hr,o),l===null)return null;No.copy(o),No.applyMatrix4(e.matrixWorld);const c=n.ray.origin.distanceTo(No);return c<n.near||c>n.far?null:{distance:c,point:No.clone(),object:e}}function Io(e,t,n,i,r,a,s,o,l,c){e.getVertexPosition(o,ya),e.getVertexPosition(l,Ta),e.getVertexPosition(c,Sa);const h=fS(e,t,n,i,ya,Ta,Sa,Do);if(h){r&&(Ro.fromBufferAttribute(r,o),Lo.fromBufferAttribute(r,l),Po.fromBufferAttribute(r,c),h.uv=oi.getInterpolation(Do,ya,Ta,Sa,Ro,Lo,Po,new He)),a&&(Ro.fromBufferAttribute(a,o),Lo.fromBufferAttribute(a,l),Po.fromBufferAttribute(a,c),h.uv1=oi.getInterpolation(Do,ya,Ta,Sa,Ro,Lo,Po,new He)),s&&(od.fromBufferAttribute(s,o),ld.fromBufferAttribute(s,l),cd.fromBufferAttribute(s,c),h.normal=oi.getInterpolation(Do,ya,Ta,Sa,od,ld,cd,new k),h.normal.dot(i.direction)>0&&h.normal.multiplyScalar(-1));const u={a:o,b:l,c,normal:new k,materialIndex:0};oi.getNormal(ya,Ta,Sa,u.normal),h.face=u}return h}class js extends _r{constructor(t=1,n=1,i=1,r=1,a=1,s=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:n,depth:i,widthSegments:r,heightSegments:a,depthSegments:s};const o=this;r=Math.floor(r),a=Math.floor(a),s=Math.floor(s);const l=[],c=[],h=[],u=[];let f=0,d=0;p("z","y","x",-1,-1,i,n,t,s,a,0),p("z","y","x",1,-1,i,n,-t,s,a,1),p("x","z","y",1,1,t,i,n,r,s,2),p("x","z","y",1,-1,t,i,-n,r,s,3),p("x","y","z",1,-1,t,n,i,r,a,4),p("x","y","z",-1,-1,t,n,-i,r,a,5),this.setIndex(l),this.setAttribute("position",new di(c,3)),this.setAttribute("normal",new di(h,3)),this.setAttribute("uv",new di(u,2));function p(g,v,m,y,_,x,A,E,w,b,M){const T=x/w,P=A/b,O=x/2,D=A/2,N=E/2,B=w+1,z=b+1;let Y=0,F=0;const J=new k;for(let V=0;V<z;V++){const ce=V*P-D;for(let fe=0;fe<B;fe++){const ye=fe*T-O;J[g]=ye*y,J[v]=ce*_,J[m]=N,c.push(J.x,J.y,J.z),J[g]=0,J[v]=0,J[m]=E>0?1:-1,h.push(J.x,J.y,J.z),u.push(fe/w),u.push(1-V/b),Y+=1}}for(let V=0;V<b;V++)for(let ce=0;ce<w;ce++){const fe=f+ce+B*V,ye=f+ce+B*(V+1),W=f+(ce+1)+B*(V+1),Q=f+(ce+1)+B*V;l.push(fe,ye,Q),l.push(ye,W,Q),F+=6}o.addGroup(d,F,M),d+=F,f+=Y}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new js(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function qa(e){const t={};for(const n in e){t[n]={};for(const i in e[n]){const r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[n][i]=null):t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}}return t}function _n(e){const t={};for(let n=0;n<e.length;n++){const i=qa(e[n]);for(const r in i)t[r]=i[r]}return t}function dS(e){const t=[];for(let n=0;n<e.length;n++)t.push(e[n].clone());return t}function Im(e){const t=e.getRenderTarget();return t===null?e.outputColorSpace:t.isXRRenderTarget===!0?t.texture.colorSpace:Tt.workingColorSpace}const pS={clone:qa,merge:_n};var mS=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,vS=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class ur extends qs{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=mS,this.fragmentShader=vS,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=qa(t.uniforms),this.uniformsGroups=dS(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const n=super.toJSON(t);n.glslVersion=this.glslVersion,n.uniforms={};for(const r in this.uniforms){const s=this.uniforms[r].value;s&&s.isTexture?n.uniforms[r]={type:"t",value:s.toJSON(t).uuid}:s&&s.isColor?n.uniforms[r]={type:"c",value:s.getHex()}:s&&s.isVector2?n.uniforms[r]={type:"v2",value:s.toArray()}:s&&s.isVector3?n.uniforms[r]={type:"v3",value:s.toArray()}:s&&s.isVector4?n.uniforms[r]={type:"v4",value:s.toArray()}:s&&s.isMatrix3?n.uniforms[r]={type:"m3",value:s.toArray()}:s&&s.isMatrix4?n.uniforms[r]={type:"m4",value:s.toArray()}:n.uniforms[r]={value:s}}Object.keys(this.defines).length>0&&(n.defines=this.defines),n.vertexShader=this.vertexShader,n.fragmentShader=this.fragmentShader,n.lights=this.lights,n.clipping=this.clipping;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(n.extensions=i),n}}class Om extends ln{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new zt,this.projectionMatrix=new zt,this.projectionMatrixInverse=new zt,this.coordinateSystem=Di}copy(t,n){return super.copy(t,n),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,n){super.updateWorldMatrix(t,n),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const $i=new k,hd=new He,ud=new He;class kn extends Om{constructor(t=50,n=1,i=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=n,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,n){return super.copy(t,n),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const n=.5*this.getFilmHeight()/t;this.fov=Fs*2*Math.atan(n),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(Ms*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Fs*2*Math.atan(Math.tan(Ms*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,n,i){$i.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),n.set($i.x,$i.y).multiplyScalar(-t/$i.z),$i.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set($i.x,$i.y).multiplyScalar(-t/$i.z)}getViewSize(t,n){return this.getViewBounds(t,hd,ud),n.subVectors(ud,hd)}setViewOffset(t,n,i,r,a,s){this.aspect=t/n,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=r,this.view.width=a,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let n=t*Math.tan(Ms*.5*this.fov)/this.zoom,i=2*n,r=this.aspect*i,a=-.5*r;const s=this.view;if(this.view!==null&&this.view.enabled){const l=s.fullWidth,c=s.fullHeight;a+=s.offsetX*r/l,n-=s.offsetY*i/c,r*=s.width/l,i*=s.height/c}const o=this.filmOffset;o!==0&&(a+=t*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(a,a+r,n,n-i,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const n=super.toJSON(t);return n.object.fov=this.fov,n.object.zoom=this.zoom,n.object.near=this.near,n.object.far=this.far,n.object.focus=this.focus,n.object.aspect=this.aspect,this.view!==null&&(n.object.view=Object.assign({},this.view)),n.object.filmGauge=this.filmGauge,n.object.filmOffset=this.filmOffset,n}}const Ea=-90,Ma=1;class gS extends ln{constructor(t,n,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const r=new kn(Ea,Ma,t,n);r.layers=this.layers,this.add(r);const a=new kn(Ea,Ma,t,n);a.layers=this.layers,this.add(a);const s=new kn(Ea,Ma,t,n);s.layers=this.layers,this.add(s);const o=new kn(Ea,Ma,t,n);o.layers=this.layers,this.add(o);const l=new kn(Ea,Ma,t,n);l.layers=this.layers,this.add(l);const c=new kn(Ea,Ma,t,n);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const t=this.coordinateSystem,n=this.children.concat(),[i,r,a,s,o,l]=n;for(const c of n)this.remove(c);if(t===Di)i.up.set(0,1,0),i.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),a.up.set(0,0,-1),a.lookAt(0,1,0),s.up.set(0,0,1),s.lookAt(0,-1,0),o.up.set(0,1,0),o.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(t===ul)i.up.set(0,-1,0),i.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),a.up.set(0,0,1),a.lookAt(0,1,0),s.up.set(0,0,-1),s.lookAt(0,-1,0),o.up.set(0,-1,0),o.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const c of n)this.add(c),c.updateMatrixWorld()}update(t,n){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:r}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[a,s,o,l,c,h]=this.children,u=t.getRenderTarget(),f=t.getActiveCubeFace(),d=t.getActiveMipmapLevel(),p=t.xr.enabled;t.xr.enabled=!1;const g=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,t.setRenderTarget(i,0,r),t.render(n,a),t.setRenderTarget(i,1,r),t.render(n,s),t.setRenderTarget(i,2,r),t.render(n,o),t.setRenderTarget(i,3,r),t.render(n,l),t.setRenderTarget(i,4,r),t.render(n,c),i.texture.generateMipmaps=g,t.setRenderTarget(i,5,r),t.render(n,h),t.setRenderTarget(u,f,d),t.xr.enabled=p,i.texture.needsPMREMUpdate=!0}}class Um extends dn{constructor(t,n,i,r,a,s,o,l,c,h){t=t!==void 0?t:[],n=n!==void 0?n:Wa,super(t,n,i,r,a,s,o,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class _S extends jr{constructor(t=1,n={}){super(t,t,n),this.isWebGLCubeRenderTarget=!0;const i={width:t,height:t,depth:1},r=[i,i,i,i,i,i];this.texture=new Um(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:fn}fromEquirectangularTexture(t,n){this.texture.type=n.type,this.texture.colorSpace=n.colorSpace,this.texture.generateMipmaps=n.generateMipmaps,this.texture.minFilter=n.minFilter,this.texture.magFilter=n.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new js(5,5,5),a=new ur({name:"CubemapFromEquirect",uniforms:qa(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Cn,blending:ar});a.uniforms.tEquirect.value=n;const s=new ci(r,a),o=n.minFilter;return n.minFilter===ir&&(n.minFilter=fn),new gS(1,10,this).update(t,s),n.minFilter=o,s.geometry.dispose(),s.material.dispose(),this}clear(t,n,i,r){const a=t.getRenderTarget();for(let s=0;s<6;s++)t.setRenderTarget(this,s),t.clear(n,i,r);t.setRenderTarget(a)}}const Lc=new k,xS=new k,yS=new et;class Ji{constructor(t=new k(1,0,0),n=0){this.isPlane=!0,this.normal=t,this.constant=n}set(t,n){return this.normal.copy(t),this.constant=n,this}setComponents(t,n,i,r){return this.normal.set(t,n,i),this.constant=r,this}setFromNormalAndCoplanarPoint(t,n){return this.normal.copy(t),this.constant=-n.dot(this.normal),this}setFromCoplanarPoints(t,n,i){const r=Lc.subVectors(i,n).cross(xS.subVectors(t,n)).normalize();return this.setFromNormalAndCoplanarPoint(r,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,n){return n.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,n){const i=t.delta(Lc),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(t.start)===0?n.copy(t.start):null;const a=-(t.start.dot(this.normal)+this.constant)/r;return a<0||a>1?null:n.copy(t.start).addScaledVector(i,a)}intersectsLine(t){const n=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return n<0&&i>0||i<0&&n>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,n){const i=n||yS.getNormalMatrix(t),r=this.coplanarPoint(Lc).applyMatrix4(t),a=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(a),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Dr=new Ih,Oo=new k;class Oh{constructor(t=new Ji,n=new Ji,i=new Ji,r=new Ji,a=new Ji,s=new Ji){this.planes=[t,n,i,r,a,s]}set(t,n,i,r,a,s){const o=this.planes;return o[0].copy(t),o[1].copy(n),o[2].copy(i),o[3].copy(r),o[4].copy(a),o[5].copy(s),this}copy(t){const n=this.planes;for(let i=0;i<6;i++)n[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t,n=Di){const i=this.planes,r=t.elements,a=r[0],s=r[1],o=r[2],l=r[3],c=r[4],h=r[5],u=r[6],f=r[7],d=r[8],p=r[9],g=r[10],v=r[11],m=r[12],y=r[13],_=r[14],x=r[15];if(i[0].setComponents(l-a,f-c,v-d,x-m).normalize(),i[1].setComponents(l+a,f+c,v+d,x+m).normalize(),i[2].setComponents(l+s,f+h,v+p,x+y).normalize(),i[3].setComponents(l-s,f-h,v-p,x-y).normalize(),i[4].setComponents(l-o,f-u,v-g,x-_).normalize(),n===Di)i[5].setComponents(l+o,f+u,v+g,x+_).normalize();else if(n===ul)i[5].setComponents(o,u,g,_).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+n);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),Dr.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const n=t.geometry;n.boundingSphere===null&&n.computeBoundingSphere(),Dr.copy(n.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Dr)}intersectsSprite(t){return Dr.center.set(0,0,0),Dr.radius=.7071067811865476,Dr.applyMatrix4(t.matrixWorld),this.intersectsSphere(Dr)}intersectsSphere(t){const n=this.planes,i=t.center,r=-t.radius;for(let a=0;a<6;a++)if(n[a].distanceToPoint(i)<r)return!1;return!0}intersectsBox(t){const n=this.planes;for(let i=0;i<6;i++){const r=n[i];if(Oo.x=r.normal.x>0?t.max.x:t.min.x,Oo.y=r.normal.y>0?t.max.y:t.min.y,Oo.z=r.normal.z>0?t.max.z:t.min.z,r.distanceToPoint(Oo)<0)return!1}return!0}containsPoint(t){const n=this.planes;for(let i=0;i<6;i++)if(n[i].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Fm(){let e=null,t=!1,n=null,i=null;function r(a,s){n(a,s),i=e.requestAnimationFrame(r)}return{start:function(){t!==!0&&n!==null&&(i=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(a){n=a},setContext:function(a){e=a}}}function TS(e){const t=new WeakMap;function n(o,l){const c=o.array,h=o.usage,u=c.byteLength,f=e.createBuffer();e.bindBuffer(l,f),e.bufferData(l,c,h),o.onUploadCallback();let d;if(c instanceof Float32Array)d=e.FLOAT;else if(c instanceof Uint16Array)o.isFloat16BufferAttribute?d=e.HALF_FLOAT:d=e.UNSIGNED_SHORT;else if(c instanceof Int16Array)d=e.SHORT;else if(c instanceof Uint32Array)d=e.UNSIGNED_INT;else if(c instanceof Int32Array)d=e.INT;else if(c instanceof Int8Array)d=e.BYTE;else if(c instanceof Uint8Array)d=e.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)d=e.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:f,type:d,bytesPerElement:c.BYTES_PER_ELEMENT,version:o.version,size:u}}function i(o,l,c){const h=l.array,u=l._updateRange,f=l.updateRanges;if(e.bindBuffer(c,o),u.count===-1&&f.length===0&&e.bufferSubData(c,0,h),f.length!==0){for(let d=0,p=f.length;d<p;d++){const g=f[d];e.bufferSubData(c,g.start*h.BYTES_PER_ELEMENT,h,g.start,g.count)}l.clearUpdateRanges()}u.count!==-1&&(e.bufferSubData(c,u.offset*h.BYTES_PER_ELEMENT,h,u.offset,u.count),u.count=-1),l.onUploadCallback()}function r(o){return o.isInterleavedBufferAttribute&&(o=o.data),t.get(o)}function a(o){o.isInterleavedBufferAttribute&&(o=o.data);const l=t.get(o);l&&(e.deleteBuffer(l.buffer),t.delete(o))}function s(o,l){if(o.isGLBufferAttribute){const h=t.get(o);(!h||h.version<o.version)&&t.set(o,{buffer:o.buffer,type:o.type,bytesPerElement:o.elementSize,version:o.version});return}o.isInterleavedBufferAttribute&&(o=o.data);const c=t.get(o);if(c===void 0)t.set(o,n(o,l));else if(c.version<o.version){if(c.size!==o.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(c.buffer,o,l),c.version=o.version}}return{get:r,remove:a,update:s}}class Al extends _r{constructor(t=1,n=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:n,widthSegments:i,heightSegments:r};const a=t/2,s=n/2,o=Math.floor(i),l=Math.floor(r),c=o+1,h=l+1,u=t/o,f=n/l,d=[],p=[],g=[],v=[];for(let m=0;m<h;m++){const y=m*f-s;for(let _=0;_<c;_++){const x=_*u-a;p.push(x,-y,0),g.push(0,0,1),v.push(_/o),v.push(1-m/l)}}for(let m=0;m<l;m++)for(let y=0;y<o;y++){const _=y+c*m,x=y+c*(m+1),A=y+1+c*(m+1),E=y+1+c*m;d.push(_,x,E),d.push(x,A,E)}this.setIndex(d),this.setAttribute("position",new di(p,3)),this.setAttribute("normal",new di(g,3)),this.setAttribute("uv",new di(v,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Al(t.width,t.height,t.widthSegments,t.heightSegments)}}var SS=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,ES=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,MS=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,wS=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,AS=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,bS=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,CS=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,RS=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,LS=`#ifdef USE_BATCHING
	attribute float batchId;
	uniform highp sampler2D batchingTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,PS=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( batchId );
#endif`,DS=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,NS=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,IS=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,OS=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,US=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,FS=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,BS=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,zS=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,GS=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,HS=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,VS=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,kS=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,WS=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,XS=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,YS=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,qS=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,jS=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,ZS=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,KS=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,$S=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,JS="gl_FragColor = linearToOutputTexel( gl_FragColor );",QS=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}
vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return sRGBTransferOETF( value );
}`,eE=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,tE=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,nE=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,iE=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,rE=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,aE=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,sE=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,oE=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,lE=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,cE=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,hE=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,uE=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,fE=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,dE=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,pE=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,mE=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,vE=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,gE=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,_E=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,xE=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,yE=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,TE=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,SE=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,EE=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,ME=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,wE=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,AE=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,bE=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,CE=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,RE=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,LE=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,PE=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,DE=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,NE=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,IE=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,OE=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[MORPHTARGETS_COUNT];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,UE=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,FE=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,BE=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
	#endif
	#ifdef MORPHTARGETS_TEXTURE
		#ifndef USE_INSTANCING_MORPH
			uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		#endif
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,zE=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,GE=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,HE=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,VE=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,kE=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,WE=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,XE=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,YE=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,qE=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,jE=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,ZE=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,KE=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,$E=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,JE=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,QE=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,eM=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,tM=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,nM=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,iM=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,rM=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return shadow;
	}
#endif`,aM=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,sM=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,oM=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,lM=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,cM=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,hM=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,uM=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,fM=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,dM=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,pM=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,mM=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	float startCompression = 0.8 - 0.04;
	float desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min(color.r, min(color.g, color.b));
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max(color.r, max(color.g, color.b));
	if (peak < startCompression) return color;
	float d = 1. - startCompression;
	float newPeak = 1. - d * d / (peak + d - startCompression);
	color *= newPeak / peak;
	float g = 1. - 1. / (desaturation * (peak - newPeak) + 1.);
	return mix(color, newPeak * vec3(1, 1, 1), g);
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,vM=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,gM=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,_M=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,xM=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,yM=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,TM=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const SM=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,EM=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,MM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,wM=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,AM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,bM=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,CM=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,RM=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,LM=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,PM=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,DM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,NM=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,IM=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,OM=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,UM=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,FM=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,BM=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,zM=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,GM=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,HM=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,VM=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,kM=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,WM=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,XM=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,YM=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,qM=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,jM=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,ZM=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,KM=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,$M=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,JM=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,QM=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,ew=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,tw=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Qe={alphahash_fragment:SS,alphahash_pars_fragment:ES,alphamap_fragment:MS,alphamap_pars_fragment:wS,alphatest_fragment:AS,alphatest_pars_fragment:bS,aomap_fragment:CS,aomap_pars_fragment:RS,batching_pars_vertex:LS,batching_vertex:PS,begin_vertex:DS,beginnormal_vertex:NS,bsdfs:IS,iridescence_fragment:OS,bumpmap_pars_fragment:US,clipping_planes_fragment:FS,clipping_planes_pars_fragment:BS,clipping_planes_pars_vertex:zS,clipping_planes_vertex:GS,color_fragment:HS,color_pars_fragment:VS,color_pars_vertex:kS,color_vertex:WS,common:XS,cube_uv_reflection_fragment:YS,defaultnormal_vertex:qS,displacementmap_pars_vertex:jS,displacementmap_vertex:ZS,emissivemap_fragment:KS,emissivemap_pars_fragment:$S,colorspace_fragment:JS,colorspace_pars_fragment:QS,envmap_fragment:eE,envmap_common_pars_fragment:tE,envmap_pars_fragment:nE,envmap_pars_vertex:iE,envmap_physical_pars_fragment:mE,envmap_vertex:rE,fog_vertex:aE,fog_pars_vertex:sE,fog_fragment:oE,fog_pars_fragment:lE,gradientmap_pars_fragment:cE,lightmap_fragment:hE,lightmap_pars_fragment:uE,lights_lambert_fragment:fE,lights_lambert_pars_fragment:dE,lights_pars_begin:pE,lights_toon_fragment:vE,lights_toon_pars_fragment:gE,lights_phong_fragment:_E,lights_phong_pars_fragment:xE,lights_physical_fragment:yE,lights_physical_pars_fragment:TE,lights_fragment_begin:SE,lights_fragment_maps:EE,lights_fragment_end:ME,logdepthbuf_fragment:wE,logdepthbuf_pars_fragment:AE,logdepthbuf_pars_vertex:bE,logdepthbuf_vertex:CE,map_fragment:RE,map_pars_fragment:LE,map_particle_fragment:PE,map_particle_pars_fragment:DE,metalnessmap_fragment:NE,metalnessmap_pars_fragment:IE,morphinstance_vertex:OE,morphcolor_vertex:UE,morphnormal_vertex:FE,morphtarget_pars_vertex:BE,morphtarget_vertex:zE,normal_fragment_begin:GE,normal_fragment_maps:HE,normal_pars_fragment:VE,normal_pars_vertex:kE,normal_vertex:WE,normalmap_pars_fragment:XE,clearcoat_normal_fragment_begin:YE,clearcoat_normal_fragment_maps:qE,clearcoat_pars_fragment:jE,iridescence_pars_fragment:ZE,opaque_fragment:KE,packing:$E,premultiplied_alpha_fragment:JE,project_vertex:QE,dithering_fragment:eM,dithering_pars_fragment:tM,roughnessmap_fragment:nM,roughnessmap_pars_fragment:iM,shadowmap_pars_fragment:rM,shadowmap_pars_vertex:aM,shadowmap_vertex:sM,shadowmask_pars_fragment:oM,skinbase_vertex:lM,skinning_pars_vertex:cM,skinning_vertex:hM,skinnormal_vertex:uM,specularmap_fragment:fM,specularmap_pars_fragment:dM,tonemapping_fragment:pM,tonemapping_pars_fragment:mM,transmission_fragment:vM,transmission_pars_fragment:gM,uv_pars_fragment:_M,uv_pars_vertex:xM,uv_vertex:yM,worldpos_vertex:TM,background_vert:SM,background_frag:EM,backgroundCube_vert:MM,backgroundCube_frag:wM,cube_vert:AM,cube_frag:bM,depth_vert:CM,depth_frag:RM,distanceRGBA_vert:LM,distanceRGBA_frag:PM,equirect_vert:DM,equirect_frag:NM,linedashed_vert:IM,linedashed_frag:OM,meshbasic_vert:UM,meshbasic_frag:FM,meshlambert_vert:BM,meshlambert_frag:zM,meshmatcap_vert:GM,meshmatcap_frag:HM,meshnormal_vert:VM,meshnormal_frag:kM,meshphong_vert:WM,meshphong_frag:XM,meshphysical_vert:YM,meshphysical_frag:qM,meshtoon_vert:jM,meshtoon_frag:ZM,points_vert:KM,points_frag:$M,shadow_vert:JM,shadow_frag:QM,sprite_vert:ew,sprite_frag:tw},ge={common:{diffuse:{value:new ft(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new et},alphaMap:{value:null},alphaMapTransform:{value:new et},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new et}},envmap:{envMap:{value:null},envMapRotation:{value:new et},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new et}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new et}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new et},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new et},normalScale:{value:new He(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new et},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new et}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new et}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new et}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ft(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ft(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new et},alphaTest:{value:0},uvTransform:{value:new et}},sprite:{diffuse:{value:new ft(16777215)},opacity:{value:1},center:{value:new He(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new et},alphaMap:{value:null},alphaMapTransform:{value:new et},alphaTest:{value:0}}},si={basic:{uniforms:_n([ge.common,ge.specularmap,ge.envmap,ge.aomap,ge.lightmap,ge.fog]),vertexShader:Qe.meshbasic_vert,fragmentShader:Qe.meshbasic_frag},lambert:{uniforms:_n([ge.common,ge.specularmap,ge.envmap,ge.aomap,ge.lightmap,ge.emissivemap,ge.bumpmap,ge.normalmap,ge.displacementmap,ge.fog,ge.lights,{emissive:{value:new ft(0)}}]),vertexShader:Qe.meshlambert_vert,fragmentShader:Qe.meshlambert_frag},phong:{uniforms:_n([ge.common,ge.specularmap,ge.envmap,ge.aomap,ge.lightmap,ge.emissivemap,ge.bumpmap,ge.normalmap,ge.displacementmap,ge.fog,ge.lights,{emissive:{value:new ft(0)},specular:{value:new ft(1118481)},shininess:{value:30}}]),vertexShader:Qe.meshphong_vert,fragmentShader:Qe.meshphong_frag},standard:{uniforms:_n([ge.common,ge.envmap,ge.aomap,ge.lightmap,ge.emissivemap,ge.bumpmap,ge.normalmap,ge.displacementmap,ge.roughnessmap,ge.metalnessmap,ge.fog,ge.lights,{emissive:{value:new ft(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Qe.meshphysical_vert,fragmentShader:Qe.meshphysical_frag},toon:{uniforms:_n([ge.common,ge.aomap,ge.lightmap,ge.emissivemap,ge.bumpmap,ge.normalmap,ge.displacementmap,ge.gradientmap,ge.fog,ge.lights,{emissive:{value:new ft(0)}}]),vertexShader:Qe.meshtoon_vert,fragmentShader:Qe.meshtoon_frag},matcap:{uniforms:_n([ge.common,ge.bumpmap,ge.normalmap,ge.displacementmap,ge.fog,{matcap:{value:null}}]),vertexShader:Qe.meshmatcap_vert,fragmentShader:Qe.meshmatcap_frag},points:{uniforms:_n([ge.points,ge.fog]),vertexShader:Qe.points_vert,fragmentShader:Qe.points_frag},dashed:{uniforms:_n([ge.common,ge.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Qe.linedashed_vert,fragmentShader:Qe.linedashed_frag},depth:{uniforms:_n([ge.common,ge.displacementmap]),vertexShader:Qe.depth_vert,fragmentShader:Qe.depth_frag},normal:{uniforms:_n([ge.common,ge.bumpmap,ge.normalmap,ge.displacementmap,{opacity:{value:1}}]),vertexShader:Qe.meshnormal_vert,fragmentShader:Qe.meshnormal_frag},sprite:{uniforms:_n([ge.sprite,ge.fog]),vertexShader:Qe.sprite_vert,fragmentShader:Qe.sprite_frag},background:{uniforms:{uvTransform:{value:new et},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Qe.background_vert,fragmentShader:Qe.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new et}},vertexShader:Qe.backgroundCube_vert,fragmentShader:Qe.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Qe.cube_vert,fragmentShader:Qe.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Qe.equirect_vert,fragmentShader:Qe.equirect_frag},distanceRGBA:{uniforms:_n([ge.common,ge.displacementmap,{referencePosition:{value:new k},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Qe.distanceRGBA_vert,fragmentShader:Qe.distanceRGBA_frag},shadow:{uniforms:_n([ge.lights,ge.fog,{color:{value:new ft(0)},opacity:{value:1}}]),vertexShader:Qe.shadow_vert,fragmentShader:Qe.shadow_frag}};si.physical={uniforms:_n([si.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new et},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new et},clearcoatNormalScale:{value:new He(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new et},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new et},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new et},sheen:{value:0},sheenColor:{value:new ft(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new et},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new et},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new et},transmissionSamplerSize:{value:new He},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new et},attenuationDistance:{value:0},attenuationColor:{value:new ft(0)},specularColor:{value:new ft(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new et},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new et},anisotropyVector:{value:new He},anisotropyMap:{value:null},anisotropyMapTransform:{value:new et}}]),vertexShader:Qe.meshphysical_vert,fragmentShader:Qe.meshphysical_frag};const Uo={r:0,b:0,g:0},Nr=new gi,nw=new zt;function iw(e,t,n,i,r,a,s){const o=new ft(0);let l=a===!0?0:1,c,h,u=null,f=0,d=null;function p(v,m){let y=!1,_=m.isScene===!0?m.background:null;_&&_.isTexture&&(_=(m.backgroundBlurriness>0?n:t).get(_)),_===null?g(o,l):_&&_.isColor&&(g(_,1),y=!0);const x=e.xr.getEnvironmentBlendMode();x==="additive"?i.buffers.color.setClear(0,0,0,1,s):x==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,s),(e.autoClear||y)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),_&&(_.isCubeTexture||_.mapping===Ml)?(h===void 0&&(h=new ci(new js(1,1,1),new ur({name:"BackgroundCubeMaterial",uniforms:qa(si.backgroundCube.uniforms),vertexShader:si.backgroundCube.vertexShader,fragmentShader:si.backgroundCube.fragmentShader,side:Cn,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(A,E,w){this.matrixWorld.copyPosition(w.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(h)),Nr.copy(m.backgroundRotation),Nr.x*=-1,Nr.y*=-1,Nr.z*=-1,_.isCubeTexture&&_.isRenderTargetTexture===!1&&(Nr.y*=-1,Nr.z*=-1),h.material.uniforms.envMap.value=_,h.material.uniforms.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=m.backgroundBlurriness,h.material.uniforms.backgroundIntensity.value=m.backgroundIntensity,h.material.uniforms.backgroundRotation.value.setFromMatrix4(nw.makeRotationFromEuler(Nr)),h.material.toneMapped=Tt.getTransfer(_.colorSpace)!==Mt,(u!==_||f!==_.version||d!==e.toneMapping)&&(h.material.needsUpdate=!0,u=_,f=_.version,d=e.toneMapping),h.layers.enableAll(),v.unshift(h,h.geometry,h.material,0,0,null)):_&&_.isTexture&&(c===void 0&&(c=new ci(new Al(2,2),new ur({name:"BackgroundMaterial",uniforms:qa(si.background.uniforms),vertexShader:si.background.vertexShader,fragmentShader:si.background.fragmentShader,side:hr,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(c)),c.material.uniforms.t2D.value=_,c.material.uniforms.backgroundIntensity.value=m.backgroundIntensity,c.material.toneMapped=Tt.getTransfer(_.colorSpace)!==Mt,_.matrixAutoUpdate===!0&&_.updateMatrix(),c.material.uniforms.uvTransform.value.copy(_.matrix),(u!==_||f!==_.version||d!==e.toneMapping)&&(c.material.needsUpdate=!0,u=_,f=_.version,d=e.toneMapping),c.layers.enableAll(),v.unshift(c,c.geometry,c.material,0,0,null))}function g(v,m){v.getRGB(Uo,Im(e)),i.buffers.color.setClear(Uo.r,Uo.g,Uo.b,m,s)}return{getClearColor:function(){return o},setClearColor:function(v,m=1){o.set(v),l=m,g(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(v){l=v,g(o,l)},render:p}}function rw(e,t){const n=e.getParameter(e.MAX_VERTEX_ATTRIBS),i={},r=f(null);let a=r,s=!1;function o(T,P,O,D,N){let B=!1;const z=u(D,O,P);a!==z&&(a=z,c(a.object)),B=d(T,D,O,N),B&&p(T,D,O,N),N!==null&&t.update(N,e.ELEMENT_ARRAY_BUFFER),(B||s)&&(s=!1,x(T,P,O,D),N!==null&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t.get(N).buffer))}function l(){return e.createVertexArray()}function c(T){return e.bindVertexArray(T)}function h(T){return e.deleteVertexArray(T)}function u(T,P,O){const D=O.wireframe===!0;let N=i[T.id];N===void 0&&(N={},i[T.id]=N);let B=N[P.id];B===void 0&&(B={},N[P.id]=B);let z=B[D];return z===void 0&&(z=f(l()),B[D]=z),z}function f(T){const P=[],O=[],D=[];for(let N=0;N<n;N++)P[N]=0,O[N]=0,D[N]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:P,enabledAttributes:O,attributeDivisors:D,object:T,attributes:{},index:null}}function d(T,P,O,D){const N=a.attributes,B=P.attributes;let z=0;const Y=O.getAttributes();for(const F in Y)if(Y[F].location>=0){const V=N[F];let ce=B[F];if(ce===void 0&&(F==="instanceMatrix"&&T.instanceMatrix&&(ce=T.instanceMatrix),F==="instanceColor"&&T.instanceColor&&(ce=T.instanceColor)),V===void 0||V.attribute!==ce||ce&&V.data!==ce.data)return!0;z++}return a.attributesNum!==z||a.index!==D}function p(T,P,O,D){const N={},B=P.attributes;let z=0;const Y=O.getAttributes();for(const F in Y)if(Y[F].location>=0){let V=B[F];V===void 0&&(F==="instanceMatrix"&&T.instanceMatrix&&(V=T.instanceMatrix),F==="instanceColor"&&T.instanceColor&&(V=T.instanceColor));const ce={};ce.attribute=V,V&&V.data&&(ce.data=V.data),N[F]=ce,z++}a.attributes=N,a.attributesNum=z,a.index=D}function g(){const T=a.newAttributes;for(let P=0,O=T.length;P<O;P++)T[P]=0}function v(T){m(T,0)}function m(T,P){const O=a.newAttributes,D=a.enabledAttributes,N=a.attributeDivisors;O[T]=1,D[T]===0&&(e.enableVertexAttribArray(T),D[T]=1),N[T]!==P&&(e.vertexAttribDivisor(T,P),N[T]=P)}function y(){const T=a.newAttributes,P=a.enabledAttributes;for(let O=0,D=P.length;O<D;O++)P[O]!==T[O]&&(e.disableVertexAttribArray(O),P[O]=0)}function _(T,P,O,D,N,B,z){z===!0?e.vertexAttribIPointer(T,P,O,N,B):e.vertexAttribPointer(T,P,O,D,N,B)}function x(T,P,O,D){g();const N=D.attributes,B=O.getAttributes(),z=P.defaultAttributeValues;for(const Y in B){const F=B[Y];if(F.location>=0){let J=N[Y];if(J===void 0&&(Y==="instanceMatrix"&&T.instanceMatrix&&(J=T.instanceMatrix),Y==="instanceColor"&&T.instanceColor&&(J=T.instanceColor)),J!==void 0){const V=J.normalized,ce=J.itemSize,fe=t.get(J);if(fe===void 0)continue;const ye=fe.buffer,W=fe.type,Q=fe.bytesPerElement,de=W===e.INT||W===e.UNSIGNED_INT||J.gpuType===vm;if(J.isInterleavedBufferAttribute){const se=J.data,Me=se.stride,Ae=J.offset;if(se.isInstancedInterleavedBuffer){for(let Pe=0;Pe<F.locationSize;Pe++)m(F.location+Pe,se.meshPerAttribute);T.isInstancedMesh!==!0&&D._maxInstanceCount===void 0&&(D._maxInstanceCount=se.meshPerAttribute*se.count)}else for(let Pe=0;Pe<F.locationSize;Pe++)v(F.location+Pe);e.bindBuffer(e.ARRAY_BUFFER,ye);for(let Pe=0;Pe<F.locationSize;Pe++)_(F.location+Pe,ce/F.locationSize,W,V,Me*Q,(Ae+ce/F.locationSize*Pe)*Q,de)}else{if(J.isInstancedBufferAttribute){for(let se=0;se<F.locationSize;se++)m(F.location+se,J.meshPerAttribute);T.isInstancedMesh!==!0&&D._maxInstanceCount===void 0&&(D._maxInstanceCount=J.meshPerAttribute*J.count)}else for(let se=0;se<F.locationSize;se++)v(F.location+se);e.bindBuffer(e.ARRAY_BUFFER,ye);for(let se=0;se<F.locationSize;se++)_(F.location+se,ce/F.locationSize,W,V,ce*Q,ce/F.locationSize*se*Q,de)}}else if(z!==void 0){const V=z[Y];if(V!==void 0)switch(V.length){case 2:e.vertexAttrib2fv(F.location,V);break;case 3:e.vertexAttrib3fv(F.location,V);break;case 4:e.vertexAttrib4fv(F.location,V);break;default:e.vertexAttrib1fv(F.location,V)}}}}y()}function A(){b();for(const T in i){const P=i[T];for(const O in P){const D=P[O];for(const N in D)h(D[N].object),delete D[N];delete P[O]}delete i[T]}}function E(T){if(i[T.id]===void 0)return;const P=i[T.id];for(const O in P){const D=P[O];for(const N in D)h(D[N].object),delete D[N];delete P[O]}delete i[T.id]}function w(T){for(const P in i){const O=i[P];if(O[T.id]===void 0)continue;const D=O[T.id];for(const N in D)h(D[N].object),delete D[N];delete O[T.id]}}function b(){M(),s=!0,a!==r&&(a=r,c(a.object))}function M(){r.geometry=null,r.program=null,r.wireframe=!1}return{setup:o,reset:b,resetDefaultState:M,dispose:A,releaseStatesOfGeometry:E,releaseStatesOfProgram:w,initAttributes:g,enableAttribute:v,disableUnusedAttributes:y}}function aw(e,t,n){let i;function r(l){i=l}function a(l,c){e.drawArrays(i,l,c),n.update(c,i,1)}function s(l,c,h){h!==0&&(e.drawArraysInstanced(i,l,c,h),n.update(c,i,h))}function o(l,c,h){if(h===0)return;const u=t.get("WEBGL_multi_draw");if(u===null)for(let f=0;f<h;f++)this.render(l[f],c[f]);else{u.multiDrawArraysWEBGL(i,l,0,c,0,h);let f=0;for(let d=0;d<h;d++)f+=c[d];n.update(f,i,1)}}this.setMode=r,this.render=a,this.renderInstances=s,this.renderMultiDraw=o}function sw(e,t,n){let i;function r(){if(i!==void 0)return i;if(t.has("EXT_texture_filter_anisotropic")===!0){const _=t.get("EXT_texture_filter_anisotropic");i=e.getParameter(_.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function a(_){if(_==="highp"){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";_="mediump"}return _==="mediump"&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let s=n.precision!==void 0?n.precision:"highp";const o=a(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);const l=n.logarithmicDepthBuffer===!0,c=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),h=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),u=e.getParameter(e.MAX_TEXTURE_SIZE),f=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),d=e.getParameter(e.MAX_VERTEX_ATTRIBS),p=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),g=e.getParameter(e.MAX_VARYING_VECTORS),v=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),m=h>0,y=e.getParameter(e.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:r,getMaxPrecision:a,precision:s,logarithmicDepthBuffer:l,maxTextures:c,maxVertexTextures:h,maxTextureSize:u,maxCubemapSize:f,maxAttributes:d,maxVertexUniforms:p,maxVaryings:g,maxFragmentUniforms:v,vertexTextures:m,maxSamples:y}}function ow(e){const t=this;let n=null,i=0,r=!1,a=!1;const s=new Ji,o=new et,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,f){const d=u.length!==0||f||i!==0||r;return r=f,i=u.length,d},this.beginShadows=function(){a=!0,h(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(u,f){n=h(u,f,0)},this.setState=function(u,f,d){const p=u.clippingPlanes,g=u.clipIntersection,v=u.clipShadows,m=e.get(u);if(!r||p===null||p.length===0||a&&!v)a?h(null):c();else{const y=a?0:i,_=y*4;let x=m.clippingState||null;l.value=x,x=h(p,f,_,d);for(let A=0;A!==_;++A)x[A]=n[A];m.clippingState=x,this.numIntersection=g?this.numPlanes:0,this.numPlanes+=y}};function c(){l.value!==n&&(l.value=n,l.needsUpdate=i>0),t.numPlanes=i,t.numIntersection=0}function h(u,f,d,p){const g=u!==null?u.length:0;let v=null;if(g!==0){if(v=l.value,p!==!0||v===null){const m=d+g*4,y=f.matrixWorldInverse;o.getNormalMatrix(y),(v===null||v.length<m)&&(v=new Float32Array(m));for(let _=0,x=d;_!==g;++_,x+=4)s.copy(u[_]).applyMatrix4(y,o),s.normal.toArray(v,x),v[x+3]=s.constant}l.value=v,l.needsUpdate=!0}return t.numPlanes=g,t.numIntersection=0,v}}function lw(e){let t=new WeakMap;function n(s,o){return o===ol?s.mapping=Wa:o===sh&&(s.mapping=Xa),s}function i(s){if(s&&s.isTexture){const o=s.mapping;if(o===ol||o===sh)if(t.has(s)){const l=t.get(s).texture;return n(l,s.mapping)}else{const l=s.image;if(l&&l.height>0){const c=new _S(l.height);return c.fromEquirectangularTexture(e,s),t.set(s,c),s.addEventListener("dispose",r),n(c.texture,s.mapping)}else return null}}return s}function r(s){const o=s.target;o.removeEventListener("dispose",r);const l=t.get(o);l!==void 0&&(t.delete(o),l.dispose())}function a(){t=new WeakMap}return{get:i,dispose:a}}class Bm extends Om{constructor(t=-1,n=1,i=1,r=-1,a=.1,s=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=n,this.top=i,this.bottom=r,this.near=a,this.far=s,this.updateProjectionMatrix()}copy(t,n){return super.copy(t,n),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,n,i,r,a,s){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=r,this.view.width=a,this.view.height=s,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),n=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let a=i-t,s=i+t,o=r+n,l=r-n;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a+=c*this.view.offsetX,s=a+c*this.view.width,o-=h*this.view.offsetY,l=o-h*this.view.height}this.projectionMatrix.makeOrthographic(a,s,o,l,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const n=super.toJSON(t);return n.object.zoom=this.zoom,n.object.left=this.left,n.object.right=this.right,n.object.top=this.top,n.object.bottom=this.bottom,n.object.near=this.near,n.object.far=this.far,this.view!==null&&(n.object.view=Object.assign({},this.view)),n}}const La=4,fd=[.125,.215,.35,.446,.526,.582],Fr=20,Pc=new Bm,dd=new ft;let Dc=null,Nc=0,Ic=0,Oc=!1;const Or=(1+Math.sqrt(5))/2,wa=1/Or,pd=[new k(1,1,1),new k(-1,1,1),new k(1,1,-1),new k(-1,1,-1),new k(0,Or,wa),new k(0,Or,-wa),new k(wa,0,Or),new k(-wa,0,Or),new k(Or,wa,0),new k(-Or,wa,0)];class md{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,n=0,i=.1,r=100){Dc=this._renderer.getRenderTarget(),Nc=this._renderer.getActiveCubeFace(),Ic=this._renderer.getActiveMipmapLevel(),Oc=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const a=this._allocateTargets();return a.depthBuffer=!0,this._sceneToCubeUV(t,i,r,a),n>0&&this._blur(a,0,0,n),this._applyPMREM(a),this._cleanup(a),a}fromEquirectangular(t,n=null){return this._fromTexture(t,n)}fromCubemap(t,n=null){return this._fromTexture(t,n)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=_d(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=gd(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Dc,Nc,Ic),this._renderer.xr.enabled=Oc,t.scissorTest=!1,Fo(t,0,0,t.width,t.height)}_fromTexture(t,n){t.mapping===Wa||t.mapping===Xa?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Dc=this._renderer.getRenderTarget(),Nc=this._renderer.getActiveCubeFace(),Ic=this._renderer.getActiveMipmapLevel(),Oc=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=n||this._allocateTargets();return this._textureToCubeUV(t,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),n=4*this._cubeSize,i={magFilter:fn,minFilter:fn,generateMipmaps:!1,type:rr,format:li,colorSpace:Bi,depthBuffer:!1},r=vd(t,n,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==n){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=vd(t,n,i);const{_lodMax:a}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=cw(a)),this._blurMaterial=hw(a,t,n)}return r}_compileMaterial(t){const n=new ci(this._lodPlanes[0],t);this._renderer.compile(n,Pc)}_sceneToCubeUV(t,n,i,r){const o=new kn(90,1,n,i),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],h=this._renderer,u=h.autoClear,f=h.toneMapping;h.getClearColor(dd),h.toneMapping=sr,h.autoClear=!1;const d=new Pm({name:"PMREM.Background",side:Cn,depthWrite:!1,depthTest:!1}),p=new ci(new js,d);let g=!1;const v=t.background;v?v.isColor&&(d.color.copy(v),t.background=null,g=!0):(d.color.copy(dd),g=!0);for(let m=0;m<6;m++){const y=m%3;y===0?(o.up.set(0,l[m],0),o.lookAt(c[m],0,0)):y===1?(o.up.set(0,0,l[m]),o.lookAt(0,c[m],0)):(o.up.set(0,l[m],0),o.lookAt(0,0,c[m]));const _=this._cubeSize;Fo(r,y*_,m>2?_:0,_,_),h.setRenderTarget(r),g&&h.render(p,o),h.render(t,o)}p.geometry.dispose(),p.material.dispose(),h.toneMapping=f,h.autoClear=u,t.background=v}_textureToCubeUV(t,n){const i=this._renderer,r=t.mapping===Wa||t.mapping===Xa;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=_d()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=gd());const a=r?this._cubemapMaterial:this._equirectMaterial,s=new ci(this._lodPlanes[0],a),o=a.uniforms;o.envMap.value=t;const l=this._cubeSize;Fo(n,0,0,3*l,2*l),i.setRenderTarget(n),i.render(s,Pc)}_applyPMREM(t){const n=this._renderer,i=n.autoClear;n.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const a=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),s=pd[(r-1)%pd.length];this._blur(t,r-1,r,a,s)}n.autoClear=i}_blur(t,n,i,r,a){const s=this._pingPongRenderTarget;this._halfBlur(t,s,n,i,r,"latitudinal",a),this._halfBlur(s,t,i,i,r,"longitudinal",a)}_halfBlur(t,n,i,r,a,s,o){const l=this._renderer,c=this._blurMaterial;s!=="latitudinal"&&s!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new ci(this._lodPlanes[r],c),f=c.uniforms,d=this._sizeLods[i]-1,p=isFinite(a)?Math.PI/(2*d):2*Math.PI/(2*Fr-1),g=a/p,v=isFinite(a)?1+Math.floor(h*g):Fr;v>Fr&&console.warn(`sigmaRadians, ${a}, is too large and will clip, as it requested ${v} samples when the maximum is set to ${Fr}`);const m=[];let y=0;for(let w=0;w<Fr;++w){const b=w/g,M=Math.exp(-b*b/2);m.push(M),w===0?y+=M:w<v&&(y+=2*M)}for(let w=0;w<m.length;w++)m[w]=m[w]/y;f.envMap.value=t.texture,f.samples.value=v,f.weights.value=m,f.latitudinal.value=s==="latitudinal",o&&(f.poleAxis.value=o);const{_lodMax:_}=this;f.dTheta.value=p,f.mipInt.value=_-i;const x=this._sizeLods[r],A=3*x*(r>_-La?r-_+La:0),E=4*(this._cubeSize-x);Fo(n,A,E,3*x,2*x),l.setRenderTarget(n),l.render(u,Pc)}}function cw(e){const t=[],n=[],i=[];let r=e;const a=e-La+1+fd.length;for(let s=0;s<a;s++){const o=Math.pow(2,r);n.push(o);let l=1/o;s>e-La?l=fd[s-e+La-1]:s===0&&(l=0),i.push(l);const c=1/(o-2),h=-c,u=1+c,f=[h,h,u,h,u,u,h,h,u,u,h,u],d=6,p=6,g=3,v=2,m=1,y=new Float32Array(g*p*d),_=new Float32Array(v*p*d),x=new Float32Array(m*p*d);for(let E=0;E<d;E++){const w=E%3*2/3-1,b=E>2?0:-1,M=[w,b,0,w+2/3,b,0,w+2/3,b+1,0,w,b,0,w+2/3,b+1,0,w,b+1,0];y.set(M,g*p*E),_.set(f,v*p*E);const T=[E,E,E,E,E,E];x.set(T,m*p*E)}const A=new _r;A.setAttribute("position",new fi(y,g)),A.setAttribute("uv",new fi(_,v)),A.setAttribute("faceIndex",new fi(x,m)),t.push(A),r>La&&r--}return{lodPlanes:t,sizeLods:n,sigmas:i}}function vd(e,t,n){const i=new jr(e,t,n);return i.texture.mapping=Ml,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Fo(e,t,n,i,r){e.viewport.set(t,n,i,r),e.scissor.set(t,n,i,r)}function hw(e,t,n){const i=new Float32Array(Fr),r=new k(0,1,0);return new ur({name:"SphericalGaussianBlur",defines:{n:Fr,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Uh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:ar,depthTest:!1,depthWrite:!1})}function gd(){return new ur({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Uh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:ar,depthTest:!1,depthWrite:!1})}function _d(){return new ur({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Uh(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:ar,depthTest:!1,depthWrite:!1})}function Uh(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function uw(e){let t=new WeakMap,n=null;function i(o){if(o&&o.isTexture){const l=o.mapping,c=l===ol||l===sh,h=l===Wa||l===Xa;if(c||h){let u=t.get(o);const f=u!==void 0?u.texture.pmremVersion:0;if(o.isRenderTargetTexture&&o.pmremVersion!==f)return n===null&&(n=new md(e)),u=c?n.fromEquirectangular(o,u):n.fromCubemap(o,u),u.texture.pmremVersion=o.pmremVersion,t.set(o,u),u.texture;if(u!==void 0)return u.texture;{const d=o.image;return c&&d&&d.height>0||h&&d&&r(d)?(n===null&&(n=new md(e)),u=c?n.fromEquirectangular(o):n.fromCubemap(o),u.texture.pmremVersion=o.pmremVersion,t.set(o,u),o.addEventListener("dispose",a),u.texture):null}}}return o}function r(o){let l=0;const c=6;for(let h=0;h<c;h++)o[h]!==void 0&&l++;return l===c}function a(o){const l=o.target;l.removeEventListener("dispose",a);const c=t.get(l);c!==void 0&&(t.delete(l),c.dispose())}function s(){t=new WeakMap,n!==null&&(n.dispose(),n=null)}return{get:i,dispose:s}}function fw(e){const t={};function n(i){if(t[i]!==void 0)return t[i];let r;switch(i){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(i)}return t[i]=r,r}return{has:function(i){return n(i)!==null},init:function(){n("EXT_color_buffer_float"),n("WEBGL_clip_cull_distance"),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture"),n("WEBGL_render_shared_exponent")},get:function(i){const r=n(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function dw(e,t,n,i){const r={},a=new WeakMap;function s(u){const f=u.target;f.index!==null&&t.remove(f.index);for(const p in f.attributes)t.remove(f.attributes[p]);for(const p in f.morphAttributes){const g=f.morphAttributes[p];for(let v=0,m=g.length;v<m;v++)t.remove(g[v])}f.removeEventListener("dispose",s),delete r[f.id];const d=a.get(f);d&&(t.remove(d),a.delete(f)),i.releaseStatesOfGeometry(f),f.isInstancedBufferGeometry===!0&&delete f._maxInstanceCount,n.memory.geometries--}function o(u,f){return r[f.id]===!0||(f.addEventListener("dispose",s),r[f.id]=!0,n.memory.geometries++),f}function l(u){const f=u.attributes;for(const p in f)t.update(f[p],e.ARRAY_BUFFER);const d=u.morphAttributes;for(const p in d){const g=d[p];for(let v=0,m=g.length;v<m;v++)t.update(g[v],e.ARRAY_BUFFER)}}function c(u){const f=[],d=u.index,p=u.attributes.position;let g=0;if(d!==null){const y=d.array;g=d.version;for(let _=0,x=y.length;_<x;_+=3){const A=y[_+0],E=y[_+1],w=y[_+2];f.push(A,E,E,w,w,A)}}else if(p!==void 0){const y=p.array;g=p.version;for(let _=0,x=y.length/3-1;_<x;_+=3){const A=_+0,E=_+1,w=_+2;f.push(A,E,E,w,w,A)}}else return;const v=new(wm(f)?Nm:Dm)(f,1);v.version=g;const m=a.get(u);m&&t.remove(m),a.set(u,v)}function h(u){const f=a.get(u);if(f){const d=u.index;d!==null&&f.version<d.version&&c(u)}else c(u);return a.get(u)}return{get:o,update:l,getWireframeAttribute:h}}function pw(e,t,n){let i;function r(u){i=u}let a,s;function o(u){a=u.type,s=u.bytesPerElement}function l(u,f){e.drawElements(i,f,a,u*s),n.update(f,i,1)}function c(u,f,d){d!==0&&(e.drawElementsInstanced(i,f,a,u*s,d),n.update(f,i,d))}function h(u,f,d){if(d===0)return;const p=t.get("WEBGL_multi_draw");if(p===null)for(let g=0;g<d;g++)this.render(u[g]/s,f[g]);else{p.multiDrawElementsWEBGL(i,f,0,a,u,0,d);let g=0;for(let v=0;v<d;v++)g+=f[v];n.update(g,i,1)}}this.setMode=r,this.setIndex=o,this.render=l,this.renderInstances=c,this.renderMultiDraw=h}function mw(e){const t={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(a,s,o){switch(n.calls++,s){case e.TRIANGLES:n.triangles+=o*(a/3);break;case e.LINES:n.lines+=o*(a/2);break;case e.LINE_STRIP:n.lines+=o*(a-1);break;case e.LINE_LOOP:n.lines+=o*a;break;case e.POINTS:n.points+=o*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",s);break}}function r(){n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:t,render:n,programs:null,autoReset:!0,reset:r,update:i}}function vw(e,t,n){const i=new WeakMap,r=new rn;function a(s,o,l){const c=s.morphTargetInfluences,h=o.morphAttributes.position||o.morphAttributes.normal||o.morphAttributes.color,u=h!==void 0?h.length:0;let f=i.get(o);if(f===void 0||f.count!==u){let M=function(){w.dispose(),i.delete(o),o.removeEventListener("dispose",M)};f!==void 0&&f.texture.dispose();const d=o.morphAttributes.position!==void 0,p=o.morphAttributes.normal!==void 0,g=o.morphAttributes.color!==void 0,v=o.morphAttributes.position||[],m=o.morphAttributes.normal||[],y=o.morphAttributes.color||[];let _=0;d===!0&&(_=1),p===!0&&(_=2),g===!0&&(_=3);let x=o.attributes.position.count*_,A=1;x>t.maxTextureSize&&(A=Math.ceil(x/t.maxTextureSize),x=t.maxTextureSize);const E=new Float32Array(x*A*4*u),w=new bm(E,x,A,u);w.type=$n,w.needsUpdate=!0;const b=_*4;for(let T=0;T<u;T++){const P=v[T],O=m[T],D=y[T],N=x*A*4*T;for(let B=0;B<P.count;B++){const z=B*b;d===!0&&(r.fromBufferAttribute(P,B),E[N+z+0]=r.x,E[N+z+1]=r.y,E[N+z+2]=r.z,E[N+z+3]=0),p===!0&&(r.fromBufferAttribute(O,B),E[N+z+4]=r.x,E[N+z+5]=r.y,E[N+z+6]=r.z,E[N+z+7]=0),g===!0&&(r.fromBufferAttribute(D,B),E[N+z+8]=r.x,E[N+z+9]=r.y,E[N+z+10]=r.z,E[N+z+11]=D.itemSize===4?r.w:1)}}f={count:u,texture:w,size:new He(x,A)},i.set(o,f),o.addEventListener("dispose",M)}if(s.isInstancedMesh===!0&&s.morphTexture!==null)l.getUniforms().setValue(e,"morphTexture",s.morphTexture,n);else{let d=0;for(let g=0;g<c.length;g++)d+=c[g];const p=o.morphTargetsRelative?1:1-d;l.getUniforms().setValue(e,"morphTargetBaseInfluence",p),l.getUniforms().setValue(e,"morphTargetInfluences",c)}l.getUniforms().setValue(e,"morphTargetsTexture",f.texture,n),l.getUniforms().setValue(e,"morphTargetsTextureSize",f.size)}return{update:a}}function gw(e,t,n,i){let r=new WeakMap;function a(l){const c=i.render.frame,h=l.geometry,u=t.get(l,h);if(r.get(u)!==c&&(t.update(u),r.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),r.get(l)!==c&&(n.update(l.instanceMatrix,e.ARRAY_BUFFER),l.instanceColor!==null&&n.update(l.instanceColor,e.ARRAY_BUFFER),r.set(l,c))),l.isSkinnedMesh){const f=l.skeleton;r.get(f)!==c&&(f.update(),r.set(f,c))}return u}function s(){r=new WeakMap}function o(l){const c=l.target;c.removeEventListener("dispose",o),n.remove(c.instanceMatrix),c.instanceColor!==null&&n.remove(c.instanceColor)}return{update:a,dispose:s}}class zm extends dn{constructor(t,n,i,r,a,s,o,l,c,h){if(h=h!==void 0?h:Na,h!==Na&&h!==Us)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&h===Na&&(i=Ya),i===void 0&&h===Us&&(i=Xs),super(null,r,a,s,o,l,h,i,c),this.isDepthTexture=!0,this.image={width:t,height:n},this.magFilter=o!==void 0?o:An,this.minFilter=l!==void 0?l:An,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const n=super.toJSON(t);return this.compareFunction!==null&&(n.compareFunction=this.compareFunction),n}}const Gm=new dn,Hm=new zm(1,1);Hm.compareFunction=Mm;const Vm=new bm,km=new QT,Wm=new Um,xd=[],yd=[],Td=new Float32Array(16),Sd=new Float32Array(9),Ed=new Float32Array(4);function is(e,t,n){const i=e[0];if(i<=0||i>0)return e;const r=t*n;let a=xd[r];if(a===void 0&&(a=new Float32Array(r),xd[r]=a),t!==0){i.toArray(a,0);for(let s=1,o=0;s!==t;++s)o+=n,e[s].toArray(a,o)}return a}function $t(e,t){if(e.length!==t.length)return!1;for(let n=0,i=e.length;n<i;n++)if(e[n]!==t[n])return!1;return!0}function Jt(e,t){for(let n=0,i=t.length;n<i;n++)e[n]=t[n]}function bl(e,t){let n=yd[t];n===void 0&&(n=new Int32Array(t),yd[t]=n);for(let i=0;i!==t;++i)n[i]=e.allocateTextureUnit();return n}function _w(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function xw(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if($t(n,t))return;e.uniform2fv(this.addr,t),Jt(n,t)}}function yw(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(t.r!==void 0)(n[0]!==t.r||n[1]!==t.g||n[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if($t(n,t))return;e.uniform3fv(this.addr,t),Jt(n,t)}}function Tw(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if($t(n,t))return;e.uniform4fv(this.addr,t),Jt(n,t)}}function Sw(e,t){const n=this.cache,i=t.elements;if(i===void 0){if($t(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),Jt(n,t)}else{if($t(n,i))return;Ed.set(i),e.uniformMatrix2fv(this.addr,!1,Ed),Jt(n,i)}}function Ew(e,t){const n=this.cache,i=t.elements;if(i===void 0){if($t(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),Jt(n,t)}else{if($t(n,i))return;Sd.set(i),e.uniformMatrix3fv(this.addr,!1,Sd),Jt(n,i)}}function Mw(e,t){const n=this.cache,i=t.elements;if(i===void 0){if($t(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),Jt(n,t)}else{if($t(n,i))return;Td.set(i),e.uniformMatrix4fv(this.addr,!1,Td),Jt(n,i)}}function ww(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function Aw(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2i(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if($t(n,t))return;e.uniform2iv(this.addr,t),Jt(n,t)}}function bw(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3i(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if($t(n,t))return;e.uniform3iv(this.addr,t),Jt(n,t)}}function Cw(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if($t(n,t))return;e.uniform4iv(this.addr,t),Jt(n,t)}}function Rw(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function Lw(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2ui(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if($t(n,t))return;e.uniform2uiv(this.addr,t),Jt(n,t)}}function Pw(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3ui(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if($t(n,t))return;e.uniform3uiv(this.addr,t),Jt(n,t)}}function Dw(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if($t(n,t))return;e.uniform4uiv(this.addr,t),Jt(n,t)}}function Nw(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r);const a=this.type===e.SAMPLER_2D_SHADOW?Hm:Gm;n.setTexture2D(t||a,r)}function Iw(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(t||km,r)}function Ow(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(t||Wm,r)}function Uw(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(t||Vm,r)}function Fw(e){switch(e){case 5126:return _w;case 35664:return xw;case 35665:return yw;case 35666:return Tw;case 35674:return Sw;case 35675:return Ew;case 35676:return Mw;case 5124:case 35670:return ww;case 35667:case 35671:return Aw;case 35668:case 35672:return bw;case 35669:case 35673:return Cw;case 5125:return Rw;case 36294:return Lw;case 36295:return Pw;case 36296:return Dw;case 35678:case 36198:case 36298:case 36306:case 35682:return Nw;case 35679:case 36299:case 36307:return Iw;case 35680:case 36300:case 36308:case 36293:return Ow;case 36289:case 36303:case 36311:case 36292:return Uw}}function Bw(e,t){e.uniform1fv(this.addr,t)}function zw(e,t){const n=is(t,this.size,2);e.uniform2fv(this.addr,n)}function Gw(e,t){const n=is(t,this.size,3);e.uniform3fv(this.addr,n)}function Hw(e,t){const n=is(t,this.size,4);e.uniform4fv(this.addr,n)}function Vw(e,t){const n=is(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function kw(e,t){const n=is(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function Ww(e,t){const n=is(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function Xw(e,t){e.uniform1iv(this.addr,t)}function Yw(e,t){e.uniform2iv(this.addr,t)}function qw(e,t){e.uniform3iv(this.addr,t)}function jw(e,t){e.uniform4iv(this.addr,t)}function Zw(e,t){e.uniform1uiv(this.addr,t)}function Kw(e,t){e.uniform2uiv(this.addr,t)}function $w(e,t){e.uniform3uiv(this.addr,t)}function Jw(e,t){e.uniform4uiv(this.addr,t)}function Qw(e,t,n){const i=this.cache,r=t.length,a=bl(n,r);$t(i,a)||(e.uniform1iv(this.addr,a),Jt(i,a));for(let s=0;s!==r;++s)n.setTexture2D(t[s]||Gm,a[s])}function eA(e,t,n){const i=this.cache,r=t.length,a=bl(n,r);$t(i,a)||(e.uniform1iv(this.addr,a),Jt(i,a));for(let s=0;s!==r;++s)n.setTexture3D(t[s]||km,a[s])}function tA(e,t,n){const i=this.cache,r=t.length,a=bl(n,r);$t(i,a)||(e.uniform1iv(this.addr,a),Jt(i,a));for(let s=0;s!==r;++s)n.setTextureCube(t[s]||Wm,a[s])}function nA(e,t,n){const i=this.cache,r=t.length,a=bl(n,r);$t(i,a)||(e.uniform1iv(this.addr,a),Jt(i,a));for(let s=0;s!==r;++s)n.setTexture2DArray(t[s]||Vm,a[s])}function iA(e){switch(e){case 5126:return Bw;case 35664:return zw;case 35665:return Gw;case 35666:return Hw;case 35674:return Vw;case 35675:return kw;case 35676:return Ww;case 5124:case 35670:return Xw;case 35667:case 35671:return Yw;case 35668:case 35672:return qw;case 35669:case 35673:return jw;case 5125:return Zw;case 36294:return Kw;case 36295:return $w;case 36296:return Jw;case 35678:case 36198:case 36298:case 36306:case 35682:return Qw;case 35679:case 36299:case 36307:return eA;case 35680:case 36300:case 36308:case 36293:return tA;case 36289:case 36303:case 36311:case 36292:return nA}}class rA{constructor(t,n,i){this.id=t,this.addr=i,this.cache=[],this.type=n.type,this.setValue=Fw(n.type)}}class aA{constructor(t,n,i){this.id=t,this.addr=i,this.cache=[],this.type=n.type,this.size=n.size,this.setValue=iA(n.type)}}class sA{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,n,i){const r=this.seq;for(let a=0,s=r.length;a!==s;++a){const o=r[a];o.setValue(t,n[o.id],i)}}}const Uc=/(\w+)(\])?(\[|\.)?/g;function Md(e,t){e.seq.push(t),e.map[t.id]=t}function oA(e,t,n){const i=e.name,r=i.length;for(Uc.lastIndex=0;;){const a=Uc.exec(i),s=Uc.lastIndex;let o=a[1];const l=a[2]==="]",c=a[3];if(l&&(o=o|0),c===void 0||c==="["&&s+2===r){Md(n,c===void 0?new rA(o,e,t):new aA(o,e,t));break}else{let u=n.map[o];u===void 0&&(u=new sA(o),Md(n,u)),n=u}}}class Yo{constructor(t,n){this.seq=[],this.map={};const i=t.getProgramParameter(n,t.ACTIVE_UNIFORMS);for(let r=0;r<i;++r){const a=t.getActiveUniform(n,r),s=t.getUniformLocation(n,a.name);oA(a,s,this)}}setValue(t,n,i,r){const a=this.map[n];a!==void 0&&a.setValue(t,i,r)}setOptional(t,n,i){const r=n[i];r!==void 0&&this.setValue(t,i,r)}static upload(t,n,i,r){for(let a=0,s=n.length;a!==s;++a){const o=n[a],l=i[o.id];l.needsUpdate!==!1&&o.setValue(t,l.value,r)}}static seqWithValue(t,n){const i=[];for(let r=0,a=t.length;r!==a;++r){const s=t[r];s.id in n&&i.push(s)}return i}}function wd(e,t,n){const i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),i}const lA=37297;let cA=0;function hA(e,t){const n=e.split(`
`),i=[],r=Math.max(t-6,0),a=Math.min(t+6,n.length);for(let s=r;s<a;s++){const o=s+1;i.push(`${o===t?">":" "} ${o}: ${n[s]}`)}return i.join(`
`)}function uA(e){const t=Tt.getPrimaries(Tt.workingColorSpace),n=Tt.getPrimaries(e);let i;switch(t===n?i="":t===hl&&n===cl?i="LinearDisplayP3ToLinearSRGB":t===cl&&n===hl&&(i="LinearSRGBToLinearDisplayP3"),e){case Bi:case wl:return[i,"LinearTransferOETF"];case ri:case Dh:return[i,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",e),[i,"LinearTransferOETF"]}}function Ad(e,t,n){const i=e.getShaderParameter(t,e.COMPILE_STATUS),r=e.getShaderInfoLog(t).trim();if(i&&r==="")return"";const a=/ERROR: 0:(\d+)/.exec(r);if(a){const s=parseInt(a[1]);return n.toUpperCase()+`

`+r+`

`+hA(e.getShaderSource(t),s)}else return r}function fA(e,t){const n=uA(t);return`vec4 ${e}( vec4 value ) { return ${n[0]}( ${n[1]}( value ) ); }`}function dA(e,t){let n;switch(t){case tT:n="Linear";break;case nT:n="Reinhard";break;case iT:n="OptimizedCineon";break;case rT:n="ACESFilmic";break;case sT:n="AgX";break;case oT:n="Neutral";break;case aT:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function pA(e){return[e.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",e.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Ts).join(`
`)}function mA(e){const t=[];for(const n in e){const i=e[n];i!==!1&&t.push("#define "+n+" "+i)}return t.join(`
`)}function vA(e,t){const n={},i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const a=e.getActiveAttrib(t,r),s=a.name;let o=1;a.type===e.FLOAT_MAT2&&(o=2),a.type===e.FLOAT_MAT3&&(o=3),a.type===e.FLOAT_MAT4&&(o=4),n[s]={type:a.type,location:e.getAttribLocation(t,s),locationSize:o}}return n}function Ts(e){return e!==""}function bd(e,t){const n=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function Cd(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const gA=/^[ \t]*#include +<([\w\d./]+)>/gm;function ch(e){return e.replace(gA,xA)}const _A=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function xA(e,t){let n=Qe[t];if(n===void 0){const i=_A.get(t);if(i!==void 0)n=Qe[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,i);else throw new Error("Can not resolve #include <"+t+">")}return ch(n)}const yA=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Rd(e){return e.replace(yA,TA)}function TA(e,t,n,i){let r="";for(let a=parseInt(t);a<parseInt(n);a++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return r}function Ld(e){let t=`precision ${e.precision} float;
	precision ${e.precision} int;
	precision ${e.precision} sampler2D;
	precision ${e.precision} samplerCube;
	precision ${e.precision} sampler3D;
	precision ${e.precision} sampler2DArray;
	precision ${e.precision} sampler2DShadow;
	precision ${e.precision} samplerCubeShadow;
	precision ${e.precision} sampler2DArrayShadow;
	precision ${e.precision} isampler2D;
	precision ${e.precision} isampler3D;
	precision ${e.precision} isamplerCube;
	precision ${e.precision} isampler2DArray;
	precision ${e.precision} usampler2D;
	precision ${e.precision} usampler3D;
	precision ${e.precision} usamplerCube;
	precision ${e.precision} usampler2DArray;
	`;return e.precision==="highp"?t+=`
#define HIGH_PRECISION`:e.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:e.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function SA(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===fm?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===b1?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===bi&&(t="SHADOWMAP_TYPE_VSM"),t}function EA(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case Wa:case Xa:t="ENVMAP_TYPE_CUBE";break;case Ml:t="ENVMAP_TYPE_CUBE_UV";break}return t}function MA(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case Xa:t="ENVMAP_MODE_REFRACTION";break}return t}function wA(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case dm:t="ENVMAP_BLENDING_MULTIPLY";break;case Q1:t="ENVMAP_BLENDING_MIX";break;case eT:t="ENVMAP_BLENDING_ADD";break}return t}function AA(e){const t=e.envMapCubeUVHeight;if(t===null)return null;const n=Math.log2(t)-2,i=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,n),7*16)),texelHeight:i,maxMip:n}}function bA(e,t,n,i){const r=e.getContext(),a=n.defines;let s=n.vertexShader,o=n.fragmentShader;const l=SA(n),c=EA(n),h=MA(n),u=wA(n),f=AA(n),d=pA(n),p=mA(a),g=r.createProgram();let v,m,y=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(v=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,p].filter(Ts).join(`
`),v.length>0&&(v+=`
`),m=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,p].filter(Ts).join(`
`),m.length>0&&(m+=`
`)):(v=[Ld(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,p,n.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",n.batching?"#define USE_BATCHING":"",n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.instancingMorph?"#define USE_INSTANCING_MORPH":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&n.flatShading===!1?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.morphColors?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ts).join(`
`),m=[Ld(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,p,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+h:"",n.envMap?"#define "+u:"",f?"#define CUBEUV_TEXEL_WIDTH "+f.texelWidth:"",f?"#define CUBEUV_TEXEL_HEIGHT "+f.texelHeight:"",f?"#define CUBEUV_MAX_MIP "+f.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&n.flatShading===!1?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+l:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.numLightProbes>0?"#define USE_LIGHT_PROBES":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==sr?"#define TONE_MAPPING":"",n.toneMapping!==sr?Qe.tonemapping_pars_fragment:"",n.toneMapping!==sr?dA("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Qe.colorspace_pars_fragment,fA("linearToOutputTexel",n.outputColorSpace),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(Ts).join(`
`)),s=ch(s),s=bd(s,n),s=Cd(s,n),o=ch(o),o=bd(o,n),o=Cd(o,n),s=Rd(s),o=Rd(o),n.isRawShaderMaterial!==!0&&(y=`#version 300 es
`,v=[d,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+v,m=["#define varying in",n.glslVersion===Xf?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===Xf?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+m);const _=y+v+s,x=y+m+o,A=wd(r,r.VERTEX_SHADER,_),E=wd(r,r.FRAGMENT_SHADER,x);r.attachShader(g,A),r.attachShader(g,E),n.index0AttributeName!==void 0?r.bindAttribLocation(g,0,n.index0AttributeName):n.morphTargets===!0&&r.bindAttribLocation(g,0,"position"),r.linkProgram(g);function w(P){if(e.debug.checkShaderErrors){const O=r.getProgramInfoLog(g).trim(),D=r.getShaderInfoLog(A).trim(),N=r.getShaderInfoLog(E).trim();let B=!0,z=!0;if(r.getProgramParameter(g,r.LINK_STATUS)===!1)if(B=!1,typeof e.debug.onShaderError=="function")e.debug.onShaderError(r,g,A,E);else{const Y=Ad(r,A,"vertex"),F=Ad(r,E,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(g,r.VALIDATE_STATUS)+`

Material Name: `+P.name+`
Material Type: `+P.type+`

Program Info Log: `+O+`
`+Y+`
`+F)}else O!==""?console.warn("THREE.WebGLProgram: Program Info Log:",O):(D===""||N==="")&&(z=!1);z&&(P.diagnostics={runnable:B,programLog:O,vertexShader:{log:D,prefix:v},fragmentShader:{log:N,prefix:m}})}r.deleteShader(A),r.deleteShader(E),b=new Yo(r,g),M=vA(r,g)}let b;this.getUniforms=function(){return b===void 0&&w(this),b};let M;this.getAttributes=function(){return M===void 0&&w(this),M};let T=n.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return T===!1&&(T=r.getProgramParameter(g,lA)),T},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(g),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=cA++,this.cacheKey=t,this.usedTimes=1,this.program=g,this.vertexShader=A,this.fragmentShader=E,this}let CA=0;class RA{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const n=t.vertexShader,i=t.fragmentShader,r=this._getShaderStage(n),a=this._getShaderStage(i),s=this._getShaderCacheForMaterial(t);return s.has(r)===!1&&(s.add(r),r.usedTimes++),s.has(a)===!1&&(s.add(a),a.usedTimes++),this}remove(t){const n=this.materialCache.get(t);for(const i of n)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const n=this.materialCache;let i=n.get(t);return i===void 0&&(i=new Set,n.set(t,i)),i}_getShaderStage(t){const n=this.shaderCache;let i=n.get(t);return i===void 0&&(i=new LA(t),n.set(t,i)),i}}class LA{constructor(t){this.id=CA++,this.code=t,this.usedTimes=0}}function PA(e,t,n,i,r,a,s){const o=new Rm,l=new RA,c=new Set,h=[],u=r.logarithmicDepthBuffer,f=r.vertexTextures;let d=r.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function g(M){return c.add(M),M===0?"uv":`uv${M}`}function v(M,T,P,O,D){const N=O.fog,B=D.geometry,z=M.isMeshStandardMaterial?O.environment:null,Y=(M.isMeshStandardMaterial?n:t).get(M.envMap||z),F=Y&&Y.mapping===Ml?Y.image.height:null,J=p[M.type];M.precision!==null&&(d=r.getMaxPrecision(M.precision),d!==M.precision&&console.warn("THREE.WebGLProgram.getParameters:",M.precision,"not supported, using",d,"instead."));const V=B.morphAttributes.position||B.morphAttributes.normal||B.morphAttributes.color,ce=V!==void 0?V.length:0;let fe=0;B.morphAttributes.position!==void 0&&(fe=1),B.morphAttributes.normal!==void 0&&(fe=2),B.morphAttributes.color!==void 0&&(fe=3);let ye,W,Q,de;if(J){const Qt=si[J];ye=Qt.vertexShader,W=Qt.fragmentShader}else ye=M.vertexShader,W=M.fragmentShader,l.update(M),Q=l.getVertexShaderID(M),de=l.getFragmentShaderID(M);const se=e.getRenderTarget(),Me=D.isInstancedMesh===!0,Ae=D.isBatchedMesh===!0,Pe=!!M.map,G=!!M.matcap,ke=!!Y,Te=!!M.aoMap,ht=!!M.lightMap,we=!!M.bumpMap,ct=!!M.normalMap,I=!!M.displacementMap,C=!!M.emissiveMap,K=!!M.metalnessMap,ie=!!M.roughnessMap,re=M.anisotropy>0,ae=M.clearcoat>0,Ue=M.iridescence>0,he=M.sheen>0,Ie=M.transmission>0,Fe=re&&!!M.anisotropyMap,ve=ae&&!!M.clearcoatMap,Se=ae&&!!M.clearcoatNormalMap,ze=ae&&!!M.clearcoatRoughnessMap,be=Ue&&!!M.iridescenceMap,Ce=Ue&&!!M.iridescenceThicknessMap,rt=he&&!!M.sheenColorMap,st=he&&!!M.sheenRoughnessMap,vt=!!M.specularMap,ut=!!M.specularColorMap,gt=!!M.specularIntensityMap,De=Ie&&!!M.transmissionMap,S=Ie&&!!M.thicknessMap,X=!!M.gradientMap,te=!!M.alphaMap,pe=M.alphaTest>0,Ee=!!M.alphaHash,ot=!!M.extensions;let it=sr;M.toneMapped&&(se===null||se.isXRRenderTarget===!0)&&(it=e.toneMapping);const At={shaderID:J,shaderType:M.type,shaderName:M.name,vertexShader:ye,fragmentShader:W,defines:M.defines,customVertexShaderID:Q,customFragmentShaderID:de,isRawShaderMaterial:M.isRawShaderMaterial===!0,glslVersion:M.glslVersion,precision:d,batching:Ae,instancing:Me,instancingColor:Me&&D.instanceColor!==null,instancingMorph:Me&&D.morphTexture!==null,supportsVertexTextures:f,outputColorSpace:se===null?e.outputColorSpace:se.isXRRenderTarget===!0?se.texture.colorSpace:Bi,alphaToCoverage:!!M.alphaToCoverage,map:Pe,matcap:G,envMap:ke,envMapMode:ke&&Y.mapping,envMapCubeUVHeight:F,aoMap:Te,lightMap:ht,bumpMap:we,normalMap:ct,displacementMap:f&&I,emissiveMap:C,normalMapObjectSpace:ct&&M.normalMapType===TT,normalMapTangentSpace:ct&&M.normalMapType===Em,metalnessMap:K,roughnessMap:ie,anisotropy:re,anisotropyMap:Fe,clearcoat:ae,clearcoatMap:ve,clearcoatNormalMap:Se,clearcoatRoughnessMap:ze,iridescence:Ue,iridescenceMap:be,iridescenceThicknessMap:Ce,sheen:he,sheenColorMap:rt,sheenRoughnessMap:st,specularMap:vt,specularColorMap:ut,specularIntensityMap:gt,transmission:Ie,transmissionMap:De,thicknessMap:S,gradientMap:X,opaque:M.transparent===!1&&M.blending===Da&&M.alphaToCoverage===!1,alphaMap:te,alphaTest:pe,alphaHash:Ee,combine:M.combine,mapUv:Pe&&g(M.map.channel),aoMapUv:Te&&g(M.aoMap.channel),lightMapUv:ht&&g(M.lightMap.channel),bumpMapUv:we&&g(M.bumpMap.channel),normalMapUv:ct&&g(M.normalMap.channel),displacementMapUv:I&&g(M.displacementMap.channel),emissiveMapUv:C&&g(M.emissiveMap.channel),metalnessMapUv:K&&g(M.metalnessMap.channel),roughnessMapUv:ie&&g(M.roughnessMap.channel),anisotropyMapUv:Fe&&g(M.anisotropyMap.channel),clearcoatMapUv:ve&&g(M.clearcoatMap.channel),clearcoatNormalMapUv:Se&&g(M.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:ze&&g(M.clearcoatRoughnessMap.channel),iridescenceMapUv:be&&g(M.iridescenceMap.channel),iridescenceThicknessMapUv:Ce&&g(M.iridescenceThicknessMap.channel),sheenColorMapUv:rt&&g(M.sheenColorMap.channel),sheenRoughnessMapUv:st&&g(M.sheenRoughnessMap.channel),specularMapUv:vt&&g(M.specularMap.channel),specularColorMapUv:ut&&g(M.specularColorMap.channel),specularIntensityMapUv:gt&&g(M.specularIntensityMap.channel),transmissionMapUv:De&&g(M.transmissionMap.channel),thicknessMapUv:S&&g(M.thicknessMap.channel),alphaMapUv:te&&g(M.alphaMap.channel),vertexTangents:!!B.attributes.tangent&&(ct||re),vertexColors:M.vertexColors,vertexAlphas:M.vertexColors===!0&&!!B.attributes.color&&B.attributes.color.itemSize===4,pointsUvs:D.isPoints===!0&&!!B.attributes.uv&&(Pe||te),fog:!!N,useFog:M.fog===!0,fogExp2:!!N&&N.isFogExp2,flatShading:M.flatShading===!0,sizeAttenuation:M.sizeAttenuation===!0,logarithmicDepthBuffer:u,skinning:D.isSkinnedMesh===!0,morphTargets:B.morphAttributes.position!==void 0,morphNormals:B.morphAttributes.normal!==void 0,morphColors:B.morphAttributes.color!==void 0,morphTargetsCount:ce,morphTextureStride:fe,numDirLights:T.directional.length,numPointLights:T.point.length,numSpotLights:T.spot.length,numSpotLightMaps:T.spotLightMap.length,numRectAreaLights:T.rectArea.length,numHemiLights:T.hemi.length,numDirLightShadows:T.directionalShadowMap.length,numPointLightShadows:T.pointShadowMap.length,numSpotLightShadows:T.spotShadowMap.length,numSpotLightShadowsWithMaps:T.numSpotLightShadowsWithMaps,numLightProbes:T.numLightProbes,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:M.dithering,shadowMapEnabled:e.shadowMap.enabled&&P.length>0,shadowMapType:e.shadowMap.type,toneMapping:it,useLegacyLights:e._useLegacyLights,decodeVideoTexture:Pe&&M.map.isVideoTexture===!0&&Tt.getTransfer(M.map.colorSpace)===Mt,premultipliedAlpha:M.premultipliedAlpha,doubleSided:M.side===Ri,flipSided:M.side===Cn,useDepthPacking:M.depthPacking>=0,depthPacking:M.depthPacking||0,index0AttributeName:M.index0AttributeName,extensionClipCullDistance:ot&&M.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:ot&&M.extensions.multiDraw===!0&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:M.customProgramCacheKey()};return At.vertexUv1s=c.has(1),At.vertexUv2s=c.has(2),At.vertexUv3s=c.has(3),c.clear(),At}function m(M){const T=[];if(M.shaderID?T.push(M.shaderID):(T.push(M.customVertexShaderID),T.push(M.customFragmentShaderID)),M.defines!==void 0)for(const P in M.defines)T.push(P),T.push(M.defines[P]);return M.isRawShaderMaterial===!1&&(y(T,M),_(T,M),T.push(e.outputColorSpace)),T.push(M.customProgramCacheKey),T.join()}function y(M,T){M.push(T.precision),M.push(T.outputColorSpace),M.push(T.envMapMode),M.push(T.envMapCubeUVHeight),M.push(T.mapUv),M.push(T.alphaMapUv),M.push(T.lightMapUv),M.push(T.aoMapUv),M.push(T.bumpMapUv),M.push(T.normalMapUv),M.push(T.displacementMapUv),M.push(T.emissiveMapUv),M.push(T.metalnessMapUv),M.push(T.roughnessMapUv),M.push(T.anisotropyMapUv),M.push(T.clearcoatMapUv),M.push(T.clearcoatNormalMapUv),M.push(T.clearcoatRoughnessMapUv),M.push(T.iridescenceMapUv),M.push(T.iridescenceThicknessMapUv),M.push(T.sheenColorMapUv),M.push(T.sheenRoughnessMapUv),M.push(T.specularMapUv),M.push(T.specularColorMapUv),M.push(T.specularIntensityMapUv),M.push(T.transmissionMapUv),M.push(T.thicknessMapUv),M.push(T.combine),M.push(T.fogExp2),M.push(T.sizeAttenuation),M.push(T.morphTargetsCount),M.push(T.morphAttributeCount),M.push(T.numDirLights),M.push(T.numPointLights),M.push(T.numSpotLights),M.push(T.numSpotLightMaps),M.push(T.numHemiLights),M.push(T.numRectAreaLights),M.push(T.numDirLightShadows),M.push(T.numPointLightShadows),M.push(T.numSpotLightShadows),M.push(T.numSpotLightShadowsWithMaps),M.push(T.numLightProbes),M.push(T.shadowMapType),M.push(T.toneMapping),M.push(T.numClippingPlanes),M.push(T.numClipIntersection),M.push(T.depthPacking)}function _(M,T){o.disableAll(),T.supportsVertexTextures&&o.enable(0),T.instancing&&o.enable(1),T.instancingColor&&o.enable(2),T.instancingMorph&&o.enable(3),T.matcap&&o.enable(4),T.envMap&&o.enable(5),T.normalMapObjectSpace&&o.enable(6),T.normalMapTangentSpace&&o.enable(7),T.clearcoat&&o.enable(8),T.iridescence&&o.enable(9),T.alphaTest&&o.enable(10),T.vertexColors&&o.enable(11),T.vertexAlphas&&o.enable(12),T.vertexUv1s&&o.enable(13),T.vertexUv2s&&o.enable(14),T.vertexUv3s&&o.enable(15),T.vertexTangents&&o.enable(16),T.anisotropy&&o.enable(17),T.alphaHash&&o.enable(18),T.batching&&o.enable(19),M.push(o.mask),o.disableAll(),T.fog&&o.enable(0),T.useFog&&o.enable(1),T.flatShading&&o.enable(2),T.logarithmicDepthBuffer&&o.enable(3),T.skinning&&o.enable(4),T.morphTargets&&o.enable(5),T.morphNormals&&o.enable(6),T.morphColors&&o.enable(7),T.premultipliedAlpha&&o.enable(8),T.shadowMapEnabled&&o.enable(9),T.useLegacyLights&&o.enable(10),T.doubleSided&&o.enable(11),T.flipSided&&o.enable(12),T.useDepthPacking&&o.enable(13),T.dithering&&o.enable(14),T.transmission&&o.enable(15),T.sheen&&o.enable(16),T.opaque&&o.enable(17),T.pointsUvs&&o.enable(18),T.decodeVideoTexture&&o.enable(19),T.alphaToCoverage&&o.enable(20),M.push(o.mask)}function x(M){const T=p[M.type];let P;if(T){const O=si[T];P=pS.clone(O.uniforms)}else P=M.uniforms;return P}function A(M,T){let P;for(let O=0,D=h.length;O<D;O++){const N=h[O];if(N.cacheKey===T){P=N,++P.usedTimes;break}}return P===void 0&&(P=new bA(e,T,M,a),h.push(P)),P}function E(M){if(--M.usedTimes===0){const T=h.indexOf(M);h[T]=h[h.length-1],h.pop(),M.destroy()}}function w(M){l.remove(M)}function b(){l.dispose()}return{getParameters:v,getProgramCacheKey:m,getUniforms:x,acquireProgram:A,releaseProgram:E,releaseShaderCache:w,programs:h,dispose:b}}function DA(){let e=new WeakMap;function t(a){let s=e.get(a);return s===void 0&&(s={},e.set(a,s)),s}function n(a){e.delete(a)}function i(a,s,o){e.get(a)[s]=o}function r(){e=new WeakMap}return{get:t,remove:n,update:i,dispose:r}}function NA(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Pd(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Dd(){const e=[];let t=0;const n=[],i=[],r=[];function a(){t=0,n.length=0,i.length=0,r.length=0}function s(u,f,d,p,g,v){let m=e[t];return m===void 0?(m={id:u.id,object:u,geometry:f,material:d,groupOrder:p,renderOrder:u.renderOrder,z:g,group:v},e[t]=m):(m.id=u.id,m.object=u,m.geometry=f,m.material=d,m.groupOrder=p,m.renderOrder=u.renderOrder,m.z=g,m.group=v),t++,m}function o(u,f,d,p,g,v){const m=s(u,f,d,p,g,v);d.transmission>0?i.push(m):d.transparent===!0?r.push(m):n.push(m)}function l(u,f,d,p,g,v){const m=s(u,f,d,p,g,v);d.transmission>0?i.unshift(m):d.transparent===!0?r.unshift(m):n.unshift(m)}function c(u,f){n.length>1&&n.sort(u||NA),i.length>1&&i.sort(f||Pd),r.length>1&&r.sort(f||Pd)}function h(){for(let u=t,f=e.length;u<f;u++){const d=e[u];if(d.id===null)break;d.id=null,d.object=null,d.geometry=null,d.material=null,d.group=null}}return{opaque:n,transmissive:i,transparent:r,init:a,push:o,unshift:l,finish:h,sort:c}}function IA(){let e=new WeakMap;function t(i,r){const a=e.get(i);let s;return a===void 0?(s=new Dd,e.set(i,[s])):r>=a.length?(s=new Dd,a.push(s)):s=a[r],s}function n(){e=new WeakMap}return{get:t,dispose:n}}function OA(){const e={};return{get:function(t){if(e[t.id]!==void 0)return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new k,color:new ft};break;case"SpotLight":n={position:new k,direction:new k,color:new ft,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new k,color:new ft,distance:0,decay:0};break;case"HemisphereLight":n={direction:new k,skyColor:new ft,groundColor:new ft};break;case"RectAreaLight":n={color:new ft,position:new k,halfWidth:new k,halfHeight:new k};break}return e[t.id]=n,n}}}function UA(){const e={};return{get:function(t){if(e[t.id]!==void 0)return e[t.id];let n;switch(t.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new He};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new He};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new He,shadowCameraNear:1,shadowCameraFar:1e3};break}return e[t.id]=n,n}}}let FA=0;function BA(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function zA(e){const t=new OA,n=UA(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)i.probe.push(new k);const r=new k,a=new zt,s=new zt;function o(c,h){let u=0,f=0,d=0;for(let P=0;P<9;P++)i.probe[P].set(0,0,0);let p=0,g=0,v=0,m=0,y=0,_=0,x=0,A=0,E=0,w=0,b=0;c.sort(BA);const M=h===!0?Math.PI:1;for(let P=0,O=c.length;P<O;P++){const D=c[P],N=D.color,B=D.intensity,z=D.distance,Y=D.shadow&&D.shadow.map?D.shadow.map.texture:null;if(D.isAmbientLight)u+=N.r*B*M,f+=N.g*B*M,d+=N.b*B*M;else if(D.isLightProbe){for(let F=0;F<9;F++)i.probe[F].addScaledVector(D.sh.coefficients[F],B);b++}else if(D.isDirectionalLight){const F=t.get(D);if(F.color.copy(D.color).multiplyScalar(D.intensity*M),D.castShadow){const J=D.shadow,V=n.get(D);V.shadowBias=J.bias,V.shadowNormalBias=J.normalBias,V.shadowRadius=J.radius,V.shadowMapSize=J.mapSize,i.directionalShadow[p]=V,i.directionalShadowMap[p]=Y,i.directionalShadowMatrix[p]=D.shadow.matrix,_++}i.directional[p]=F,p++}else if(D.isSpotLight){const F=t.get(D);F.position.setFromMatrixPosition(D.matrixWorld),F.color.copy(N).multiplyScalar(B*M),F.distance=z,F.coneCos=Math.cos(D.angle),F.penumbraCos=Math.cos(D.angle*(1-D.penumbra)),F.decay=D.decay,i.spot[v]=F;const J=D.shadow;if(D.map&&(i.spotLightMap[E]=D.map,E++,J.updateMatrices(D),D.castShadow&&w++),i.spotLightMatrix[v]=J.matrix,D.castShadow){const V=n.get(D);V.shadowBias=J.bias,V.shadowNormalBias=J.normalBias,V.shadowRadius=J.radius,V.shadowMapSize=J.mapSize,i.spotShadow[v]=V,i.spotShadowMap[v]=Y,A++}v++}else if(D.isRectAreaLight){const F=t.get(D);F.color.copy(N).multiplyScalar(B),F.halfWidth.set(D.width*.5,0,0),F.halfHeight.set(0,D.height*.5,0),i.rectArea[m]=F,m++}else if(D.isPointLight){const F=t.get(D);if(F.color.copy(D.color).multiplyScalar(D.intensity*M),F.distance=D.distance,F.decay=D.decay,D.castShadow){const J=D.shadow,V=n.get(D);V.shadowBias=J.bias,V.shadowNormalBias=J.normalBias,V.shadowRadius=J.radius,V.shadowMapSize=J.mapSize,V.shadowCameraNear=J.camera.near,V.shadowCameraFar=J.camera.far,i.pointShadow[g]=V,i.pointShadowMap[g]=Y,i.pointShadowMatrix[g]=D.shadow.matrix,x++}i.point[g]=F,g++}else if(D.isHemisphereLight){const F=t.get(D);F.skyColor.copy(D.color).multiplyScalar(B*M),F.groundColor.copy(D.groundColor).multiplyScalar(B*M),i.hemi[y]=F,y++}}m>0&&(e.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=ge.LTC_FLOAT_1,i.rectAreaLTC2=ge.LTC_FLOAT_2):(i.rectAreaLTC1=ge.LTC_HALF_1,i.rectAreaLTC2=ge.LTC_HALF_2)),i.ambient[0]=u,i.ambient[1]=f,i.ambient[2]=d;const T=i.hash;(T.directionalLength!==p||T.pointLength!==g||T.spotLength!==v||T.rectAreaLength!==m||T.hemiLength!==y||T.numDirectionalShadows!==_||T.numPointShadows!==x||T.numSpotShadows!==A||T.numSpotMaps!==E||T.numLightProbes!==b)&&(i.directional.length=p,i.spot.length=v,i.rectArea.length=m,i.point.length=g,i.hemi.length=y,i.directionalShadow.length=_,i.directionalShadowMap.length=_,i.pointShadow.length=x,i.pointShadowMap.length=x,i.spotShadow.length=A,i.spotShadowMap.length=A,i.directionalShadowMatrix.length=_,i.pointShadowMatrix.length=x,i.spotLightMatrix.length=A+E-w,i.spotLightMap.length=E,i.numSpotLightShadowsWithMaps=w,i.numLightProbes=b,T.directionalLength=p,T.pointLength=g,T.spotLength=v,T.rectAreaLength=m,T.hemiLength=y,T.numDirectionalShadows=_,T.numPointShadows=x,T.numSpotShadows=A,T.numSpotMaps=E,T.numLightProbes=b,i.version=FA++)}function l(c,h){let u=0,f=0,d=0,p=0,g=0;const v=h.matrixWorldInverse;for(let m=0,y=c.length;m<y;m++){const _=c[m];if(_.isDirectionalLight){const x=i.directional[u];x.direction.setFromMatrixPosition(_.matrixWorld),r.setFromMatrixPosition(_.target.matrixWorld),x.direction.sub(r),x.direction.transformDirection(v),u++}else if(_.isSpotLight){const x=i.spot[d];x.position.setFromMatrixPosition(_.matrixWorld),x.position.applyMatrix4(v),x.direction.setFromMatrixPosition(_.matrixWorld),r.setFromMatrixPosition(_.target.matrixWorld),x.direction.sub(r),x.direction.transformDirection(v),d++}else if(_.isRectAreaLight){const x=i.rectArea[p];x.position.setFromMatrixPosition(_.matrixWorld),x.position.applyMatrix4(v),s.identity(),a.copy(_.matrixWorld),a.premultiply(v),s.extractRotation(a),x.halfWidth.set(_.width*.5,0,0),x.halfHeight.set(0,_.height*.5,0),x.halfWidth.applyMatrix4(s),x.halfHeight.applyMatrix4(s),p++}else if(_.isPointLight){const x=i.point[f];x.position.setFromMatrixPosition(_.matrixWorld),x.position.applyMatrix4(v),f++}else if(_.isHemisphereLight){const x=i.hemi[g];x.direction.setFromMatrixPosition(_.matrixWorld),x.direction.transformDirection(v),g++}}}return{setup:o,setupView:l,state:i}}function Nd(e){const t=new zA(e),n=[],i=[];function r(){n.length=0,i.length=0}function a(h){n.push(h)}function s(h){i.push(h)}function o(h){t.setup(n,h)}function l(h){t.setupView(n,h)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:t,transmissionRenderTarget:null},setupLights:o,setupLightsView:l,pushLight:a,pushShadow:s}}function GA(e){let t=new WeakMap;function n(r,a=0){const s=t.get(r);let o;return s===void 0?(o=new Nd(e),t.set(r,[o])):a>=s.length?(o=new Nd(e),s.push(o)):o=s[a],o}function i(){t=new WeakMap}return{get:n,dispose:i}}class HA extends qs{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=xT,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class VA extends qs{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const kA=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,WA=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function XA(e,t,n){let i=new Oh;const r=new He,a=new He,s=new rn,o=new HA({depthPacking:yT}),l=new VA,c={},h=n.maxTextureSize,u={[hr]:Cn,[Cn]:hr,[Ri]:Ri},f=new ur({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new He},radius:{value:4}},vertexShader:kA,fragmentShader:WA}),d=f.clone();d.defines.HORIZONTAL_PASS=1;const p=new _r;p.setAttribute("position",new fi(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const g=new ci(p,f),v=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=fm;let m=this.type;this.render=function(E,w,b){if(v.enabled===!1||v.autoUpdate===!1&&v.needsUpdate===!1||E.length===0)return;const M=e.getRenderTarget(),T=e.getActiveCubeFace(),P=e.getActiveMipmapLevel(),O=e.state;O.setBlending(ar),O.buffers.color.setClear(1,1,1,1),O.buffers.depth.setTest(!0),O.setScissorTest(!1);const D=m!==bi&&this.type===bi,N=m===bi&&this.type!==bi;for(let B=0,z=E.length;B<z;B++){const Y=E[B],F=Y.shadow;if(F===void 0){console.warn("THREE.WebGLShadowMap:",Y,"has no shadow.");continue}if(F.autoUpdate===!1&&F.needsUpdate===!1)continue;r.copy(F.mapSize);const J=F.getFrameExtents();if(r.multiply(J),a.copy(F.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(a.x=Math.floor(h/J.x),r.x=a.x*J.x,F.mapSize.x=a.x),r.y>h&&(a.y=Math.floor(h/J.y),r.y=a.y*J.y,F.mapSize.y=a.y)),F.map===null||D===!0||N===!0){const ce=this.type!==bi?{minFilter:An,magFilter:An}:{};F.map!==null&&F.map.dispose(),F.map=new jr(r.x,r.y,ce),F.map.texture.name=Y.name+".shadowMap",F.camera.updateProjectionMatrix()}e.setRenderTarget(F.map),e.clear();const V=F.getViewportCount();for(let ce=0;ce<V;ce++){const fe=F.getViewport(ce);s.set(a.x*fe.x,a.y*fe.y,a.x*fe.z,a.y*fe.w),O.viewport(s),F.updateMatrices(Y,ce),i=F.getFrustum(),x(w,b,F.camera,Y,this.type)}F.isPointLightShadow!==!0&&this.type===bi&&y(F,b),F.needsUpdate=!1}m=this.type,v.needsUpdate=!1,e.setRenderTarget(M,T,P)};function y(E,w){const b=t.update(g);f.defines.VSM_SAMPLES!==E.blurSamples&&(f.defines.VSM_SAMPLES=E.blurSamples,d.defines.VSM_SAMPLES=E.blurSamples,f.needsUpdate=!0,d.needsUpdate=!0),E.mapPass===null&&(E.mapPass=new jr(r.x,r.y)),f.uniforms.shadow_pass.value=E.map.texture,f.uniforms.resolution.value=E.mapSize,f.uniforms.radius.value=E.radius,e.setRenderTarget(E.mapPass),e.clear(),e.renderBufferDirect(w,null,b,f,g,null),d.uniforms.shadow_pass.value=E.mapPass.texture,d.uniforms.resolution.value=E.mapSize,d.uniforms.radius.value=E.radius,e.setRenderTarget(E.map),e.clear(),e.renderBufferDirect(w,null,b,d,g,null)}function _(E,w,b,M){let T=null;const P=b.isPointLight===!0?E.customDistanceMaterial:E.customDepthMaterial;if(P!==void 0)T=P;else if(T=b.isPointLight===!0?l:o,e.localClippingEnabled&&w.clipShadows===!0&&Array.isArray(w.clippingPlanes)&&w.clippingPlanes.length!==0||w.displacementMap&&w.displacementScale!==0||w.alphaMap&&w.alphaTest>0||w.map&&w.alphaTest>0){const O=T.uuid,D=w.uuid;let N=c[O];N===void 0&&(N={},c[O]=N);let B=N[D];B===void 0&&(B=T.clone(),N[D]=B,w.addEventListener("dispose",A)),T=B}if(T.visible=w.visible,T.wireframe=w.wireframe,M===bi?T.side=w.shadowSide!==null?w.shadowSide:w.side:T.side=w.shadowSide!==null?w.shadowSide:u[w.side],T.alphaMap=w.alphaMap,T.alphaTest=w.alphaTest,T.map=w.map,T.clipShadows=w.clipShadows,T.clippingPlanes=w.clippingPlanes,T.clipIntersection=w.clipIntersection,T.displacementMap=w.displacementMap,T.displacementScale=w.displacementScale,T.displacementBias=w.displacementBias,T.wireframeLinewidth=w.wireframeLinewidth,T.linewidth=w.linewidth,b.isPointLight===!0&&T.isMeshDistanceMaterial===!0){const O=e.properties.get(T);O.light=b}return T}function x(E,w,b,M,T){if(E.visible===!1)return;if(E.layers.test(w.layers)&&(E.isMesh||E.isLine||E.isPoints)&&(E.castShadow||E.receiveShadow&&T===bi)&&(!E.frustumCulled||i.intersectsObject(E))){E.modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,E.matrixWorld);const D=t.update(E),N=E.material;if(Array.isArray(N)){const B=D.groups;for(let z=0,Y=B.length;z<Y;z++){const F=B[z],J=N[F.materialIndex];if(J&&J.visible){const V=_(E,J,M,T);E.onBeforeShadow(e,E,w,b,D,V,F),e.renderBufferDirect(b,null,D,V,E,F),E.onAfterShadow(e,E,w,b,D,V,F)}}}else if(N.visible){const B=_(E,N,M,T);E.onBeforeShadow(e,E,w,b,D,B,null),e.renderBufferDirect(b,null,D,B,E,null),E.onAfterShadow(e,E,w,b,D,B,null)}}const O=E.children;for(let D=0,N=O.length;D<N;D++)x(O[D],w,b,M,T)}function A(E){E.target.removeEventListener("dispose",A);for(const b in c){const M=c[b],T=E.target.uuid;T in M&&(M[T].dispose(),delete M[T])}}}function YA(e){function t(){let S=!1;const X=new rn;let te=null;const pe=new rn(0,0,0,0);return{setMask:function(Ee){te!==Ee&&!S&&(e.colorMask(Ee,Ee,Ee,Ee),te=Ee)},setLocked:function(Ee){S=Ee},setClear:function(Ee,ot,it,At,Qt){Qt===!0&&(Ee*=At,ot*=At,it*=At),X.set(Ee,ot,it,At),pe.equals(X)===!1&&(e.clearColor(Ee,ot,it,At),pe.copy(X))},reset:function(){S=!1,te=null,pe.set(-1,0,0,0)}}}function n(){let S=!1,X=null,te=null,pe=null;return{setTest:function(Ee){Ee?de(e.DEPTH_TEST):se(e.DEPTH_TEST)},setMask:function(Ee){X!==Ee&&!S&&(e.depthMask(Ee),X=Ee)},setFunc:function(Ee){if(te!==Ee){switch(Ee){case Y1:e.depthFunc(e.NEVER);break;case q1:e.depthFunc(e.ALWAYS);break;case j1:e.depthFunc(e.LESS);break;case sl:e.depthFunc(e.LEQUAL);break;case Z1:e.depthFunc(e.EQUAL);break;case K1:e.depthFunc(e.GEQUAL);break;case $1:e.depthFunc(e.GREATER);break;case J1:e.depthFunc(e.NOTEQUAL);break;default:e.depthFunc(e.LEQUAL)}te=Ee}},setLocked:function(Ee){S=Ee},setClear:function(Ee){pe!==Ee&&(e.clearDepth(Ee),pe=Ee)},reset:function(){S=!1,X=null,te=null,pe=null}}}function i(){let S=!1,X=null,te=null,pe=null,Ee=null,ot=null,it=null,At=null,Qt=null;return{setTest:function(yt){S||(yt?de(e.STENCIL_TEST):se(e.STENCIL_TEST))},setMask:function(yt){X!==yt&&!S&&(e.stencilMask(yt),X=yt)},setFunc:function(yt,Gt,Ht){(te!==yt||pe!==Gt||Ee!==Ht)&&(e.stencilFunc(yt,Gt,Ht),te=yt,pe=Gt,Ee=Ht)},setOp:function(yt,Gt,Ht){(ot!==yt||it!==Gt||At!==Ht)&&(e.stencilOp(yt,Gt,Ht),ot=yt,it=Gt,At=Ht)},setLocked:function(yt){S=yt},setClear:function(yt){Qt!==yt&&(e.clearStencil(yt),Qt=yt)},reset:function(){S=!1,X=null,te=null,pe=null,Ee=null,ot=null,it=null,At=null,Qt=null}}}const r=new t,a=new n,s=new i,o=new WeakMap,l=new WeakMap;let c={},h={},u=new WeakMap,f=[],d=null,p=!1,g=null,v=null,m=null,y=null,_=null,x=null,A=null,E=new ft(0,0,0),w=0,b=!1,M=null,T=null,P=null,O=null,D=null;const N=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let B=!1,z=0;const Y=e.getParameter(e.VERSION);Y.indexOf("WebGL")!==-1?(z=parseFloat(/^WebGL (\d)/.exec(Y)[1]),B=z>=1):Y.indexOf("OpenGL ES")!==-1&&(z=parseFloat(/^OpenGL ES (\d)/.exec(Y)[1]),B=z>=2);let F=null,J={};const V=e.getParameter(e.SCISSOR_BOX),ce=e.getParameter(e.VIEWPORT),fe=new rn().fromArray(V),ye=new rn().fromArray(ce);function W(S,X,te,pe){const Ee=new Uint8Array(4),ot=e.createTexture();e.bindTexture(S,ot),e.texParameteri(S,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(S,e.TEXTURE_MAG_FILTER,e.NEAREST);for(let it=0;it<te;it++)S===e.TEXTURE_3D||S===e.TEXTURE_2D_ARRAY?e.texImage3D(X,0,e.RGBA,1,1,pe,0,e.RGBA,e.UNSIGNED_BYTE,Ee):e.texImage2D(X+it,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,Ee);return ot}const Q={};Q[e.TEXTURE_2D]=W(e.TEXTURE_2D,e.TEXTURE_2D,1),Q[e.TEXTURE_CUBE_MAP]=W(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),Q[e.TEXTURE_2D_ARRAY]=W(e.TEXTURE_2D_ARRAY,e.TEXTURE_2D_ARRAY,1,1),Q[e.TEXTURE_3D]=W(e.TEXTURE_3D,e.TEXTURE_3D,1,1),r.setClear(0,0,0,1),a.setClear(1),s.setClear(0),de(e.DEPTH_TEST),a.setFunc(sl),we(!1),ct(pf),de(e.CULL_FACE),Te(ar);function de(S){c[S]!==!0&&(e.enable(S),c[S]=!0)}function se(S){c[S]!==!1&&(e.disable(S),c[S]=!1)}function Me(S,X){return h[S]!==X?(e.bindFramebuffer(S,X),h[S]=X,S===e.DRAW_FRAMEBUFFER&&(h[e.FRAMEBUFFER]=X),S===e.FRAMEBUFFER&&(h[e.DRAW_FRAMEBUFFER]=X),!0):!1}function Ae(S,X){let te=f,pe=!1;if(S){te=u.get(X),te===void 0&&(te=[],u.set(X,te));const Ee=S.textures;if(te.length!==Ee.length||te[0]!==e.COLOR_ATTACHMENT0){for(let ot=0,it=Ee.length;ot<it;ot++)te[ot]=e.COLOR_ATTACHMENT0+ot;te.length=Ee.length,pe=!0}}else te[0]!==e.BACK&&(te[0]=e.BACK,pe=!0);pe&&e.drawBuffers(te)}function Pe(S){return d!==S?(e.useProgram(S),d=S,!0):!1}const G={[Ur]:e.FUNC_ADD,[R1]:e.FUNC_SUBTRACT,[L1]:e.FUNC_REVERSE_SUBTRACT};G[P1]=e.MIN,G[D1]=e.MAX;const ke={[N1]:e.ZERO,[I1]:e.ONE,[O1]:e.SRC_COLOR,[rh]:e.SRC_ALPHA,[H1]:e.SRC_ALPHA_SATURATE,[z1]:e.DST_COLOR,[F1]:e.DST_ALPHA,[U1]:e.ONE_MINUS_SRC_COLOR,[ah]:e.ONE_MINUS_SRC_ALPHA,[G1]:e.ONE_MINUS_DST_COLOR,[B1]:e.ONE_MINUS_DST_ALPHA,[V1]:e.CONSTANT_COLOR,[k1]:e.ONE_MINUS_CONSTANT_COLOR,[W1]:e.CONSTANT_ALPHA,[X1]:e.ONE_MINUS_CONSTANT_ALPHA};function Te(S,X,te,pe,Ee,ot,it,At,Qt,yt){if(S===ar){p===!0&&(se(e.BLEND),p=!1);return}if(p===!1&&(de(e.BLEND),p=!0),S!==C1){if(S!==g||yt!==b){if((v!==Ur||_!==Ur)&&(e.blendEquation(e.FUNC_ADD),v=Ur,_=Ur),yt)switch(S){case Da:e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case mf:e.blendFunc(e.ONE,e.ONE);break;case vf:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case gf:e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",S);break}else switch(S){case Da:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case mf:e.blendFunc(e.SRC_ALPHA,e.ONE);break;case vf:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case gf:e.blendFunc(e.ZERO,e.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",S);break}m=null,y=null,x=null,A=null,E.set(0,0,0),w=0,g=S,b=yt}return}Ee=Ee||X,ot=ot||te,it=it||pe,(X!==v||Ee!==_)&&(e.blendEquationSeparate(G[X],G[Ee]),v=X,_=Ee),(te!==m||pe!==y||ot!==x||it!==A)&&(e.blendFuncSeparate(ke[te],ke[pe],ke[ot],ke[it]),m=te,y=pe,x=ot,A=it),(At.equals(E)===!1||Qt!==w)&&(e.blendColor(At.r,At.g,At.b,Qt),E.copy(At),w=Qt),g=S,b=!1}function ht(S,X){S.side===Ri?se(e.CULL_FACE):de(e.CULL_FACE);let te=S.side===Cn;X&&(te=!te),we(te),S.blending===Da&&S.transparent===!1?Te(ar):Te(S.blending,S.blendEquation,S.blendSrc,S.blendDst,S.blendEquationAlpha,S.blendSrcAlpha,S.blendDstAlpha,S.blendColor,S.blendAlpha,S.premultipliedAlpha),a.setFunc(S.depthFunc),a.setTest(S.depthTest),a.setMask(S.depthWrite),r.setMask(S.colorWrite);const pe=S.stencilWrite;s.setTest(pe),pe&&(s.setMask(S.stencilWriteMask),s.setFunc(S.stencilFunc,S.stencilRef,S.stencilFuncMask),s.setOp(S.stencilFail,S.stencilZFail,S.stencilZPass)),C(S.polygonOffset,S.polygonOffsetFactor,S.polygonOffsetUnits),S.alphaToCoverage===!0?de(e.SAMPLE_ALPHA_TO_COVERAGE):se(e.SAMPLE_ALPHA_TO_COVERAGE)}function we(S){M!==S&&(S?e.frontFace(e.CW):e.frontFace(e.CCW),M=S)}function ct(S){S!==w1?(de(e.CULL_FACE),S!==T&&(S===pf?e.cullFace(e.BACK):S===A1?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):se(e.CULL_FACE),T=S}function I(S){S!==P&&(B&&e.lineWidth(S),P=S)}function C(S,X,te){S?(de(e.POLYGON_OFFSET_FILL),(O!==X||D!==te)&&(e.polygonOffset(X,te),O=X,D=te)):se(e.POLYGON_OFFSET_FILL)}function K(S){S?de(e.SCISSOR_TEST):se(e.SCISSOR_TEST)}function ie(S){S===void 0&&(S=e.TEXTURE0+N-1),F!==S&&(e.activeTexture(S),F=S)}function re(S,X,te){te===void 0&&(F===null?te=e.TEXTURE0+N-1:te=F);let pe=J[te];pe===void 0&&(pe={type:void 0,texture:void 0},J[te]=pe),(pe.type!==S||pe.texture!==X)&&(F!==te&&(e.activeTexture(te),F=te),e.bindTexture(S,X||Q[S]),pe.type=S,pe.texture=X)}function ae(){const S=J[F];S!==void 0&&S.type!==void 0&&(e.bindTexture(S.type,null),S.type=void 0,S.texture=void 0)}function Ue(){try{e.compressedTexImage2D.apply(e,arguments)}catch(S){console.error("THREE.WebGLState:",S)}}function he(){try{e.compressedTexImage3D.apply(e,arguments)}catch(S){console.error("THREE.WebGLState:",S)}}function Ie(){try{e.texSubImage2D.apply(e,arguments)}catch(S){console.error("THREE.WebGLState:",S)}}function Fe(){try{e.texSubImage3D.apply(e,arguments)}catch(S){console.error("THREE.WebGLState:",S)}}function ve(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(S){console.error("THREE.WebGLState:",S)}}function Se(){try{e.compressedTexSubImage3D.apply(e,arguments)}catch(S){console.error("THREE.WebGLState:",S)}}function ze(){try{e.texStorage2D.apply(e,arguments)}catch(S){console.error("THREE.WebGLState:",S)}}function be(){try{e.texStorage3D.apply(e,arguments)}catch(S){console.error("THREE.WebGLState:",S)}}function Ce(){try{e.texImage2D.apply(e,arguments)}catch(S){console.error("THREE.WebGLState:",S)}}function rt(){try{e.texImage3D.apply(e,arguments)}catch(S){console.error("THREE.WebGLState:",S)}}function st(S){fe.equals(S)===!1&&(e.scissor(S.x,S.y,S.z,S.w),fe.copy(S))}function vt(S){ye.equals(S)===!1&&(e.viewport(S.x,S.y,S.z,S.w),ye.copy(S))}function ut(S,X){let te=l.get(X);te===void 0&&(te=new WeakMap,l.set(X,te));let pe=te.get(S);pe===void 0&&(pe=e.getUniformBlockIndex(X,S.name),te.set(S,pe))}function gt(S,X){const pe=l.get(X).get(S);o.get(X)!==pe&&(e.uniformBlockBinding(X,pe,S.__bindingPointIndex),o.set(X,pe))}function De(){e.disable(e.BLEND),e.disable(e.CULL_FACE),e.disable(e.DEPTH_TEST),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.blendColor(0,0,0,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(e.LESS),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(e.ALWAYS,0,4294967295),e.stencilOp(e.KEEP,e.KEEP,e.KEEP),e.clearStencil(0),e.cullFace(e.BACK),e.frontFace(e.CCW),e.polygonOffset(0,0),e.activeTexture(e.TEXTURE0),e.bindFramebuffer(e.FRAMEBUFFER,null),e.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),e.bindFramebuffer(e.READ_FRAMEBUFFER,null),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),c={},F=null,J={},h={},u=new WeakMap,f=[],d=null,p=!1,g=null,v=null,m=null,y=null,_=null,x=null,A=null,E=new ft(0,0,0),w=0,b=!1,M=null,T=null,P=null,O=null,D=null,fe.set(0,0,e.canvas.width,e.canvas.height),ye.set(0,0,e.canvas.width,e.canvas.height),r.reset(),a.reset(),s.reset()}return{buffers:{color:r,depth:a,stencil:s},enable:de,disable:se,bindFramebuffer:Me,drawBuffers:Ae,useProgram:Pe,setBlending:Te,setMaterial:ht,setFlipSided:we,setCullFace:ct,setLineWidth:I,setPolygonOffset:C,setScissorTest:K,activeTexture:ie,bindTexture:re,unbindTexture:ae,compressedTexImage2D:Ue,compressedTexImage3D:he,texImage2D:Ce,texImage3D:rt,updateUBOMapping:ut,uniformBlockBinding:gt,texStorage2D:ze,texStorage3D:be,texSubImage2D:Ie,texSubImage3D:Fe,compressedTexSubImage2D:ve,compressedTexSubImage3D:Se,scissor:st,viewport:vt,reset:De}}function qA(e,t,n,i,r,a,s){const o=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new He,h=new WeakMap;let u;const f=new WeakMap;let d=!1;try{d=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(I,C){return d?new OffscreenCanvas(I,C):Bs("canvas")}function g(I,C,K){let ie=1;const re=ct(I);if((re.width>K||re.height>K)&&(ie=K/Math.max(re.width,re.height)),ie<1)if(typeof HTMLImageElement<"u"&&I instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&I instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&I instanceof ImageBitmap||typeof VideoFrame<"u"&&I instanceof VideoFrame){const ae=Math.floor(ie*re.width),Ue=Math.floor(ie*re.height);u===void 0&&(u=p(ae,Ue));const he=C?p(ae,Ue):u;return he.width=ae,he.height=Ue,he.getContext("2d").drawImage(I,0,0,ae,Ue),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+re.width+"x"+re.height+") to ("+ae+"x"+Ue+")."),he}else return"data"in I&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+re.width+"x"+re.height+")."),I;return I}function v(I){return I.generateMipmaps&&I.minFilter!==An&&I.minFilter!==fn}function m(I){e.generateMipmap(I)}function y(I,C,K,ie,re=!1){if(I!==null){if(e[I]!==void 0)return e[I];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+I+"'")}let ae=C;if(C===e.RED&&(K===e.FLOAT&&(ae=e.R32F),K===e.HALF_FLOAT&&(ae=e.R16F),K===e.UNSIGNED_BYTE&&(ae=e.R8)),C===e.RED_INTEGER&&(K===e.UNSIGNED_BYTE&&(ae=e.R8UI),K===e.UNSIGNED_SHORT&&(ae=e.R16UI),K===e.UNSIGNED_INT&&(ae=e.R32UI),K===e.BYTE&&(ae=e.R8I),K===e.SHORT&&(ae=e.R16I),K===e.INT&&(ae=e.R32I)),C===e.RG&&(K===e.FLOAT&&(ae=e.RG32F),K===e.HALF_FLOAT&&(ae=e.RG16F),K===e.UNSIGNED_BYTE&&(ae=e.RG8)),C===e.RG_INTEGER&&(K===e.UNSIGNED_BYTE&&(ae=e.RG8UI),K===e.UNSIGNED_SHORT&&(ae=e.RG16UI),K===e.UNSIGNED_INT&&(ae=e.RG32UI),K===e.BYTE&&(ae=e.RG8I),K===e.SHORT&&(ae=e.RG16I),K===e.INT&&(ae=e.RG32I)),C===e.RGB&&K===e.UNSIGNED_INT_5_9_9_9_REV&&(ae=e.RGB9_E5),C===e.RGBA){const Ue=re?ll:Tt.getTransfer(ie);K===e.FLOAT&&(ae=e.RGBA32F),K===e.HALF_FLOAT&&(ae=e.RGBA16F),K===e.UNSIGNED_BYTE&&(ae=Ue===Mt?e.SRGB8_ALPHA8:e.RGBA8),K===e.UNSIGNED_SHORT_4_4_4_4&&(ae=e.RGBA4),K===e.UNSIGNED_SHORT_5_5_5_1&&(ae=e.RGB5_A1)}return(ae===e.R16F||ae===e.R32F||ae===e.RG16F||ae===e.RG32F||ae===e.RGBA16F||ae===e.RGBA32F)&&t.get("EXT_color_buffer_float"),ae}function _(I,C){return v(I)===!0||I.isFramebufferTexture&&I.minFilter!==An&&I.minFilter!==fn?Math.log2(Math.max(C.width,C.height))+1:I.mipmaps!==void 0&&I.mipmaps.length>0?I.mipmaps.length:I.isCompressedTexture&&Array.isArray(I.image)?C.mipmaps.length:1}function x(I){const C=I.target;C.removeEventListener("dispose",x),E(C),C.isVideoTexture&&h.delete(C)}function A(I){const C=I.target;C.removeEventListener("dispose",A),b(C)}function E(I){const C=i.get(I);if(C.__webglInit===void 0)return;const K=I.source,ie=f.get(K);if(ie){const re=ie[C.__cacheKey];re.usedTimes--,re.usedTimes===0&&w(I),Object.keys(ie).length===0&&f.delete(K)}i.remove(I)}function w(I){const C=i.get(I);e.deleteTexture(C.__webglTexture);const K=I.source,ie=f.get(K);delete ie[C.__cacheKey],s.memory.textures--}function b(I){const C=i.get(I);if(I.depthTexture&&I.depthTexture.dispose(),I.isWebGLCubeRenderTarget)for(let ie=0;ie<6;ie++){if(Array.isArray(C.__webglFramebuffer[ie]))for(let re=0;re<C.__webglFramebuffer[ie].length;re++)e.deleteFramebuffer(C.__webglFramebuffer[ie][re]);else e.deleteFramebuffer(C.__webglFramebuffer[ie]);C.__webglDepthbuffer&&e.deleteRenderbuffer(C.__webglDepthbuffer[ie])}else{if(Array.isArray(C.__webglFramebuffer))for(let ie=0;ie<C.__webglFramebuffer.length;ie++)e.deleteFramebuffer(C.__webglFramebuffer[ie]);else e.deleteFramebuffer(C.__webglFramebuffer);if(C.__webglDepthbuffer&&e.deleteRenderbuffer(C.__webglDepthbuffer),C.__webglMultisampledFramebuffer&&e.deleteFramebuffer(C.__webglMultisampledFramebuffer),C.__webglColorRenderbuffer)for(let ie=0;ie<C.__webglColorRenderbuffer.length;ie++)C.__webglColorRenderbuffer[ie]&&e.deleteRenderbuffer(C.__webglColorRenderbuffer[ie]);C.__webglDepthRenderbuffer&&e.deleteRenderbuffer(C.__webglDepthRenderbuffer)}const K=I.textures;for(let ie=0,re=K.length;ie<re;ie++){const ae=i.get(K[ie]);ae.__webglTexture&&(e.deleteTexture(ae.__webglTexture),s.memory.textures--),i.remove(K[ie])}i.remove(I)}let M=0;function T(){M=0}function P(){const I=M;return I>=r.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+I+" texture units while this GPU supports only "+r.maxTextures),M+=1,I}function O(I){const C=[];return C.push(I.wrapS),C.push(I.wrapT),C.push(I.wrapR||0),C.push(I.magFilter),C.push(I.minFilter),C.push(I.anisotropy),C.push(I.internalFormat),C.push(I.format),C.push(I.type),C.push(I.generateMipmaps),C.push(I.premultiplyAlpha),C.push(I.flipY),C.push(I.unpackAlignment),C.push(I.colorSpace),C.join()}function D(I,C){const K=i.get(I);if(I.isVideoTexture&&ht(I),I.isRenderTargetTexture===!1&&I.version>0&&K.__version!==I.version){const ie=I.image;if(ie===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ie.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{fe(K,I,C);return}}n.bindTexture(e.TEXTURE_2D,K.__webglTexture,e.TEXTURE0+C)}function N(I,C){const K=i.get(I);if(I.version>0&&K.__version!==I.version){fe(K,I,C);return}n.bindTexture(e.TEXTURE_2D_ARRAY,K.__webglTexture,e.TEXTURE0+C)}function B(I,C){const K=i.get(I);if(I.version>0&&K.__version!==I.version){fe(K,I,C);return}n.bindTexture(e.TEXTURE_3D,K.__webglTexture,e.TEXTURE0+C)}function z(I,C){const K=i.get(I);if(I.version>0&&K.__version!==I.version){ye(K,I,C);return}n.bindTexture(e.TEXTURE_CUBE_MAP,K.__webglTexture,e.TEXTURE0+C)}const Y={[oh]:e.REPEAT,[Pi]:e.CLAMP_TO_EDGE,[lh]:e.MIRRORED_REPEAT},F={[An]:e.NEAREST,[lT]:e.NEAREST_MIPMAP_NEAREST,[mo]:e.NEAREST_MIPMAP_LINEAR,[fn]:e.LINEAR,[oc]:e.LINEAR_MIPMAP_NEAREST,[ir]:e.LINEAR_MIPMAP_LINEAR},J={[ST]:e.NEVER,[CT]:e.ALWAYS,[ET]:e.LESS,[Mm]:e.LEQUAL,[MT]:e.EQUAL,[bT]:e.GEQUAL,[wT]:e.GREATER,[AT]:e.NOTEQUAL};function V(I,C){if(C.type===$n&&t.has("OES_texture_float_linear")===!1&&(C.magFilter===fn||C.magFilter===oc||C.magFilter===mo||C.magFilter===ir||C.minFilter===fn||C.minFilter===oc||C.minFilter===mo||C.minFilter===ir)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),e.texParameteri(I,e.TEXTURE_WRAP_S,Y[C.wrapS]),e.texParameteri(I,e.TEXTURE_WRAP_T,Y[C.wrapT]),(I===e.TEXTURE_3D||I===e.TEXTURE_2D_ARRAY)&&e.texParameteri(I,e.TEXTURE_WRAP_R,Y[C.wrapR]),e.texParameteri(I,e.TEXTURE_MAG_FILTER,F[C.magFilter]),e.texParameteri(I,e.TEXTURE_MIN_FILTER,F[C.minFilter]),C.compareFunction&&(e.texParameteri(I,e.TEXTURE_COMPARE_MODE,e.COMPARE_REF_TO_TEXTURE),e.texParameteri(I,e.TEXTURE_COMPARE_FUNC,J[C.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){if(C.magFilter===An||C.minFilter!==mo&&C.minFilter!==ir||C.type===$n&&t.has("OES_texture_float_linear")===!1)return;if(C.anisotropy>1||i.get(C).__currentAnisotropy){const K=t.get("EXT_texture_filter_anisotropic");e.texParameterf(I,K.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(C.anisotropy,r.getMaxAnisotropy())),i.get(C).__currentAnisotropy=C.anisotropy}}}function ce(I,C){let K=!1;I.__webglInit===void 0&&(I.__webglInit=!0,C.addEventListener("dispose",x));const ie=C.source;let re=f.get(ie);re===void 0&&(re={},f.set(ie,re));const ae=O(C);if(ae!==I.__cacheKey){re[ae]===void 0&&(re[ae]={texture:e.createTexture(),usedTimes:0},s.memory.textures++,K=!0),re[ae].usedTimes++;const Ue=re[I.__cacheKey];Ue!==void 0&&(re[I.__cacheKey].usedTimes--,Ue.usedTimes===0&&w(C)),I.__cacheKey=ae,I.__webglTexture=re[ae].texture}return K}function fe(I,C,K){let ie=e.TEXTURE_2D;(C.isDataArrayTexture||C.isCompressedArrayTexture)&&(ie=e.TEXTURE_2D_ARRAY),C.isData3DTexture&&(ie=e.TEXTURE_3D);const re=ce(I,C),ae=C.source;n.bindTexture(ie,I.__webglTexture,e.TEXTURE0+K);const Ue=i.get(ae);if(ae.version!==Ue.__version||re===!0){n.activeTexture(e.TEXTURE0+K);const he=Tt.getPrimaries(Tt.workingColorSpace),Ie=C.colorSpace===Qi?null:Tt.getPrimaries(C.colorSpace),Fe=C.colorSpace===Qi||he===Ie?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,C.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,C.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,Fe);let ve=g(C.image,!1,r.maxTextureSize);ve=we(C,ve);const Se=a.convert(C.format,C.colorSpace),ze=a.convert(C.type);let be=y(C.internalFormat,Se,ze,C.colorSpace,C.isVideoTexture);V(ie,C);let Ce;const rt=C.mipmaps,st=C.isVideoTexture!==!0&&be!==Sm,vt=Ue.__version===void 0||re===!0,ut=ae.dataReady,gt=_(C,ve);if(C.isDepthTexture)be=e.DEPTH_COMPONENT16,C.type===$n?be=e.DEPTH_COMPONENT32F:C.type===Ya?be=e.DEPTH_COMPONENT24:C.type===Xs&&(be=e.DEPTH24_STENCIL8),vt&&(st?n.texStorage2D(e.TEXTURE_2D,1,be,ve.width,ve.height):n.texImage2D(e.TEXTURE_2D,0,be,ve.width,ve.height,0,Se,ze,null));else if(C.isDataTexture)if(rt.length>0){st&&vt&&n.texStorage2D(e.TEXTURE_2D,gt,be,rt[0].width,rt[0].height);for(let De=0,S=rt.length;De<S;De++)Ce=rt[De],st?ut&&n.texSubImage2D(e.TEXTURE_2D,De,0,0,Ce.width,Ce.height,Se,ze,Ce.data):n.texImage2D(e.TEXTURE_2D,De,be,Ce.width,Ce.height,0,Se,ze,Ce.data);C.generateMipmaps=!1}else st?(vt&&n.texStorage2D(e.TEXTURE_2D,gt,be,ve.width,ve.height),ut&&n.texSubImage2D(e.TEXTURE_2D,0,0,0,ve.width,ve.height,Se,ze,ve.data)):n.texImage2D(e.TEXTURE_2D,0,be,ve.width,ve.height,0,Se,ze,ve.data);else if(C.isCompressedTexture)if(C.isCompressedArrayTexture){st&&vt&&n.texStorage3D(e.TEXTURE_2D_ARRAY,gt,be,rt[0].width,rt[0].height,ve.depth);for(let De=0,S=rt.length;De<S;De++)Ce=rt[De],C.format!==li?Se!==null?st?ut&&n.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,De,0,0,0,Ce.width,Ce.height,ve.depth,Se,Ce.data,0,0):n.compressedTexImage3D(e.TEXTURE_2D_ARRAY,De,be,Ce.width,Ce.height,ve.depth,0,Ce.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):st?ut&&n.texSubImage3D(e.TEXTURE_2D_ARRAY,De,0,0,0,Ce.width,Ce.height,ve.depth,Se,ze,Ce.data):n.texImage3D(e.TEXTURE_2D_ARRAY,De,be,Ce.width,Ce.height,ve.depth,0,Se,ze,Ce.data)}else{st&&vt&&n.texStorage2D(e.TEXTURE_2D,gt,be,rt[0].width,rt[0].height);for(let De=0,S=rt.length;De<S;De++)Ce=rt[De],C.format!==li?Se!==null?st?ut&&n.compressedTexSubImage2D(e.TEXTURE_2D,De,0,0,Ce.width,Ce.height,Se,Ce.data):n.compressedTexImage2D(e.TEXTURE_2D,De,be,Ce.width,Ce.height,0,Ce.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):st?ut&&n.texSubImage2D(e.TEXTURE_2D,De,0,0,Ce.width,Ce.height,Se,ze,Ce.data):n.texImage2D(e.TEXTURE_2D,De,be,Ce.width,Ce.height,0,Se,ze,Ce.data)}else if(C.isDataArrayTexture)st?(vt&&n.texStorage3D(e.TEXTURE_2D_ARRAY,gt,be,ve.width,ve.height,ve.depth),ut&&n.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,0,ve.width,ve.height,ve.depth,Se,ze,ve.data)):n.texImage3D(e.TEXTURE_2D_ARRAY,0,be,ve.width,ve.height,ve.depth,0,Se,ze,ve.data);else if(C.isData3DTexture)st?(vt&&n.texStorage3D(e.TEXTURE_3D,gt,be,ve.width,ve.height,ve.depth),ut&&n.texSubImage3D(e.TEXTURE_3D,0,0,0,0,ve.width,ve.height,ve.depth,Se,ze,ve.data)):n.texImage3D(e.TEXTURE_3D,0,be,ve.width,ve.height,ve.depth,0,Se,ze,ve.data);else if(C.isFramebufferTexture){if(vt)if(st)n.texStorage2D(e.TEXTURE_2D,gt,be,ve.width,ve.height);else{let De=ve.width,S=ve.height;for(let X=0;X<gt;X++)n.texImage2D(e.TEXTURE_2D,X,be,De,S,0,Se,ze,null),De>>=1,S>>=1}}else if(rt.length>0){if(st&&vt){const De=ct(rt[0]);n.texStorage2D(e.TEXTURE_2D,gt,be,De.width,De.height)}for(let De=0,S=rt.length;De<S;De++)Ce=rt[De],st?ut&&n.texSubImage2D(e.TEXTURE_2D,De,0,0,Se,ze,Ce):n.texImage2D(e.TEXTURE_2D,De,be,Se,ze,Ce);C.generateMipmaps=!1}else if(st){if(vt){const De=ct(ve);n.texStorage2D(e.TEXTURE_2D,gt,be,De.width,De.height)}ut&&n.texSubImage2D(e.TEXTURE_2D,0,0,0,Se,ze,ve)}else n.texImage2D(e.TEXTURE_2D,0,be,Se,ze,ve);v(C)&&m(ie),Ue.__version=ae.version,C.onUpdate&&C.onUpdate(C)}I.__version=C.version}function ye(I,C,K){if(C.image.length!==6)return;const ie=ce(I,C),re=C.source;n.bindTexture(e.TEXTURE_CUBE_MAP,I.__webglTexture,e.TEXTURE0+K);const ae=i.get(re);if(re.version!==ae.__version||ie===!0){n.activeTexture(e.TEXTURE0+K);const Ue=Tt.getPrimaries(Tt.workingColorSpace),he=C.colorSpace===Qi?null:Tt.getPrimaries(C.colorSpace),Ie=C.colorSpace===Qi||Ue===he?e.NONE:e.BROWSER_DEFAULT_WEBGL;e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,C.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,C.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ie);const Fe=C.isCompressedTexture||C.image[0].isCompressedTexture,ve=C.image[0]&&C.image[0].isDataTexture,Se=[];for(let S=0;S<6;S++)!Fe&&!ve?Se[S]=g(C.image[S],!0,r.maxCubemapSize):Se[S]=ve?C.image[S].image:C.image[S],Se[S]=we(C,Se[S]);const ze=Se[0],be=a.convert(C.format,C.colorSpace),Ce=a.convert(C.type),rt=y(C.internalFormat,be,Ce,C.colorSpace),st=C.isVideoTexture!==!0,vt=ae.__version===void 0||ie===!0,ut=re.dataReady;let gt=_(C,ze);V(e.TEXTURE_CUBE_MAP,C);let De;if(Fe){st&&vt&&n.texStorage2D(e.TEXTURE_CUBE_MAP,gt,rt,ze.width,ze.height);for(let S=0;S<6;S++){De=Se[S].mipmaps;for(let X=0;X<De.length;X++){const te=De[X];C.format!==li?be!==null?st?ut&&n.compressedTexSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+S,X,0,0,te.width,te.height,be,te.data):n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+S,X,rt,te.width,te.height,0,te.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):st?ut&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+S,X,0,0,te.width,te.height,be,Ce,te.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+S,X,rt,te.width,te.height,0,be,Ce,te.data)}}}else{if(De=C.mipmaps,st&&vt){De.length>0&&gt++;const S=ct(Se[0]);n.texStorage2D(e.TEXTURE_CUBE_MAP,gt,rt,S.width,S.height)}for(let S=0;S<6;S++)if(ve){st?ut&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+S,0,0,0,Se[S].width,Se[S].height,be,Ce,Se[S].data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+S,0,rt,Se[S].width,Se[S].height,0,be,Ce,Se[S].data);for(let X=0;X<De.length;X++){const pe=De[X].image[S].image;st?ut&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+S,X+1,0,0,pe.width,pe.height,be,Ce,pe.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+S,X+1,rt,pe.width,pe.height,0,be,Ce,pe.data)}}else{st?ut&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+S,0,0,0,be,Ce,Se[S]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+S,0,rt,be,Ce,Se[S]);for(let X=0;X<De.length;X++){const te=De[X];st?ut&&n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+S,X+1,0,0,be,Ce,te.image[S]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+S,X+1,rt,be,Ce,te.image[S])}}}v(C)&&m(e.TEXTURE_CUBE_MAP),ae.__version=re.version,C.onUpdate&&C.onUpdate(C)}I.__version=C.version}function W(I,C,K,ie,re,ae){const Ue=a.convert(K.format,K.colorSpace),he=a.convert(K.type),Ie=y(K.internalFormat,Ue,he,K.colorSpace);if(!i.get(C).__hasExternalTextures){const ve=Math.max(1,C.width>>ae),Se=Math.max(1,C.height>>ae);re===e.TEXTURE_3D||re===e.TEXTURE_2D_ARRAY?n.texImage3D(re,ae,Ie,ve,Se,C.depth,0,Ue,he,null):n.texImage2D(re,ae,Ie,ve,Se,0,Ue,he,null)}n.bindFramebuffer(e.FRAMEBUFFER,I),Te(C)?o.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,ie,re,i.get(K).__webglTexture,0,ke(C)):(re===e.TEXTURE_2D||re>=e.TEXTURE_CUBE_MAP_POSITIVE_X&&re<=e.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&e.framebufferTexture2D(e.FRAMEBUFFER,ie,re,i.get(K).__webglTexture,ae),n.bindFramebuffer(e.FRAMEBUFFER,null)}function Q(I,C,K){if(e.bindRenderbuffer(e.RENDERBUFFER,I),C.depthBuffer&&!C.stencilBuffer){let ie=e.DEPTH_COMPONENT24;if(K||Te(C)){const re=C.depthTexture;re&&re.isDepthTexture&&(re.type===$n?ie=e.DEPTH_COMPONENT32F:re.type===Ya&&(ie=e.DEPTH_COMPONENT24));const ae=ke(C);Te(C)?o.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,ae,ie,C.width,C.height):e.renderbufferStorageMultisample(e.RENDERBUFFER,ae,ie,C.width,C.height)}else e.renderbufferStorage(e.RENDERBUFFER,ie,C.width,C.height);e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,I)}else if(C.depthBuffer&&C.stencilBuffer){const ie=ke(C);K&&Te(C)===!1?e.renderbufferStorageMultisample(e.RENDERBUFFER,ie,e.DEPTH24_STENCIL8,C.width,C.height):Te(C)?o.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,ie,e.DEPTH24_STENCIL8,C.width,C.height):e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,C.width,C.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,I)}else{const ie=C.textures;for(let re=0;re<ie.length;re++){const ae=ie[re],Ue=a.convert(ae.format,ae.colorSpace),he=a.convert(ae.type),Ie=y(ae.internalFormat,Ue,he,ae.colorSpace),Fe=ke(C);K&&Te(C)===!1?e.renderbufferStorageMultisample(e.RENDERBUFFER,Fe,Ie,C.width,C.height):Te(C)?o.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,Fe,Ie,C.width,C.height):e.renderbufferStorage(e.RENDERBUFFER,Ie,C.width,C.height)}}e.bindRenderbuffer(e.RENDERBUFFER,null)}function de(I,C){if(C&&C.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(e.FRAMEBUFFER,I),!(C.depthTexture&&C.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(C.depthTexture).__webglTexture||C.depthTexture.image.width!==C.width||C.depthTexture.image.height!==C.height)&&(C.depthTexture.image.width=C.width,C.depthTexture.image.height=C.height,C.depthTexture.needsUpdate=!0),D(C.depthTexture,0);const ie=i.get(C.depthTexture).__webglTexture,re=ke(C);if(C.depthTexture.format===Na)Te(C)?o.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,ie,0,re):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,ie,0);else if(C.depthTexture.format===Us)Te(C)?o.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,ie,0,re):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,ie,0);else throw new Error("Unknown depthTexture format")}function se(I){const C=i.get(I),K=I.isWebGLCubeRenderTarget===!0;if(I.depthTexture&&!C.__autoAllocateDepthBuffer){if(K)throw new Error("target.depthTexture not supported in Cube render targets");de(C.__webglFramebuffer,I)}else if(K){C.__webglDepthbuffer=[];for(let ie=0;ie<6;ie++)n.bindFramebuffer(e.FRAMEBUFFER,C.__webglFramebuffer[ie]),C.__webglDepthbuffer[ie]=e.createRenderbuffer(),Q(C.__webglDepthbuffer[ie],I,!1)}else n.bindFramebuffer(e.FRAMEBUFFER,C.__webglFramebuffer),C.__webglDepthbuffer=e.createRenderbuffer(),Q(C.__webglDepthbuffer,I,!1);n.bindFramebuffer(e.FRAMEBUFFER,null)}function Me(I,C,K){const ie=i.get(I);C!==void 0&&W(ie.__webglFramebuffer,I,I.texture,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,0),K!==void 0&&se(I)}function Ae(I){const C=I.texture,K=i.get(I),ie=i.get(C);I.addEventListener("dispose",A);const re=I.textures,ae=I.isWebGLCubeRenderTarget===!0,Ue=re.length>1;if(Ue||(ie.__webglTexture===void 0&&(ie.__webglTexture=e.createTexture()),ie.__version=C.version,s.memory.textures++),ae){K.__webglFramebuffer=[];for(let he=0;he<6;he++)if(C.mipmaps&&C.mipmaps.length>0){K.__webglFramebuffer[he]=[];for(let Ie=0;Ie<C.mipmaps.length;Ie++)K.__webglFramebuffer[he][Ie]=e.createFramebuffer()}else K.__webglFramebuffer[he]=e.createFramebuffer()}else{if(C.mipmaps&&C.mipmaps.length>0){K.__webglFramebuffer=[];for(let he=0;he<C.mipmaps.length;he++)K.__webglFramebuffer[he]=e.createFramebuffer()}else K.__webglFramebuffer=e.createFramebuffer();if(Ue)for(let he=0,Ie=re.length;he<Ie;he++){const Fe=i.get(re[he]);Fe.__webglTexture===void 0&&(Fe.__webglTexture=e.createTexture(),s.memory.textures++)}if(I.samples>0&&Te(I)===!1){K.__webglMultisampledFramebuffer=e.createFramebuffer(),K.__webglColorRenderbuffer=[],n.bindFramebuffer(e.FRAMEBUFFER,K.__webglMultisampledFramebuffer);for(let he=0;he<re.length;he++){const Ie=re[he];K.__webglColorRenderbuffer[he]=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,K.__webglColorRenderbuffer[he]);const Fe=a.convert(Ie.format,Ie.colorSpace),ve=a.convert(Ie.type),Se=y(Ie.internalFormat,Fe,ve,Ie.colorSpace,I.isXRRenderTarget===!0),ze=ke(I);e.renderbufferStorageMultisample(e.RENDERBUFFER,ze,Se,I.width,I.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+he,e.RENDERBUFFER,K.__webglColorRenderbuffer[he])}e.bindRenderbuffer(e.RENDERBUFFER,null),I.depthBuffer&&(K.__webglDepthRenderbuffer=e.createRenderbuffer(),Q(K.__webglDepthRenderbuffer,I,!0)),n.bindFramebuffer(e.FRAMEBUFFER,null)}}if(ae){n.bindTexture(e.TEXTURE_CUBE_MAP,ie.__webglTexture),V(e.TEXTURE_CUBE_MAP,C);for(let he=0;he<6;he++)if(C.mipmaps&&C.mipmaps.length>0)for(let Ie=0;Ie<C.mipmaps.length;Ie++)W(K.__webglFramebuffer[he][Ie],I,C,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+he,Ie);else W(K.__webglFramebuffer[he],I,C,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+he,0);v(C)&&m(e.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(Ue){for(let he=0,Ie=re.length;he<Ie;he++){const Fe=re[he],ve=i.get(Fe);n.bindTexture(e.TEXTURE_2D,ve.__webglTexture),V(e.TEXTURE_2D,Fe),W(K.__webglFramebuffer,I,Fe,e.COLOR_ATTACHMENT0+he,e.TEXTURE_2D,0),v(Fe)&&m(e.TEXTURE_2D)}n.unbindTexture()}else{let he=e.TEXTURE_2D;if((I.isWebGL3DRenderTarget||I.isWebGLArrayRenderTarget)&&(he=I.isWebGL3DRenderTarget?e.TEXTURE_3D:e.TEXTURE_2D_ARRAY),n.bindTexture(he,ie.__webglTexture),V(he,C),C.mipmaps&&C.mipmaps.length>0)for(let Ie=0;Ie<C.mipmaps.length;Ie++)W(K.__webglFramebuffer[Ie],I,C,e.COLOR_ATTACHMENT0,he,Ie);else W(K.__webglFramebuffer,I,C,e.COLOR_ATTACHMENT0,he,0);v(C)&&m(he),n.unbindTexture()}I.depthBuffer&&se(I)}function Pe(I){const C=I.textures;for(let K=0,ie=C.length;K<ie;K++){const re=C[K];if(v(re)){const ae=I.isWebGLCubeRenderTarget?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,Ue=i.get(re).__webglTexture;n.bindTexture(ae,Ue),m(ae),n.unbindTexture()}}}function G(I){if(I.samples>0&&Te(I)===!1){const C=I.textures,K=I.width,ie=I.height;let re=e.COLOR_BUFFER_BIT;const ae=[],Ue=I.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,he=i.get(I),Ie=C.length>1;if(Ie)for(let Fe=0;Fe<C.length;Fe++)n.bindFramebuffer(e.FRAMEBUFFER,he.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+Fe,e.RENDERBUFFER,null),n.bindFramebuffer(e.FRAMEBUFFER,he.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+Fe,e.TEXTURE_2D,null,0);n.bindFramebuffer(e.READ_FRAMEBUFFER,he.__webglMultisampledFramebuffer),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,he.__webglFramebuffer);for(let Fe=0;Fe<C.length;Fe++){ae.push(e.COLOR_ATTACHMENT0+Fe),I.depthBuffer&&ae.push(Ue);const ve=he.__ignoreDepthValues!==void 0?he.__ignoreDepthValues:!1;if(ve===!1&&(I.depthBuffer&&(re|=e.DEPTH_BUFFER_BIT),I.stencilBuffer&&he.__isTransmissionRenderTarget!==!0&&(re|=e.STENCIL_BUFFER_BIT)),Ie&&e.framebufferRenderbuffer(e.READ_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.RENDERBUFFER,he.__webglColorRenderbuffer[Fe]),ve===!0&&(e.invalidateFramebuffer(e.READ_FRAMEBUFFER,[Ue]),e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,[Ue])),Ie){const Se=i.get(C[Fe]).__webglTexture;e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,Se,0)}e.blitFramebuffer(0,0,K,ie,0,0,K,ie,re,e.NEAREST),l&&e.invalidateFramebuffer(e.READ_FRAMEBUFFER,ae)}if(n.bindFramebuffer(e.READ_FRAMEBUFFER,null),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),Ie)for(let Fe=0;Fe<C.length;Fe++){n.bindFramebuffer(e.FRAMEBUFFER,he.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+Fe,e.RENDERBUFFER,he.__webglColorRenderbuffer[Fe]);const ve=i.get(C[Fe]).__webglTexture;n.bindFramebuffer(e.FRAMEBUFFER,he.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+Fe,e.TEXTURE_2D,ve,0)}n.bindFramebuffer(e.DRAW_FRAMEBUFFER,he.__webglMultisampledFramebuffer)}}function ke(I){return Math.min(r.maxSamples,I.samples)}function Te(I){const C=i.get(I);return I.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&C.__useRenderToTexture!==!1}function ht(I){const C=s.render.frame;h.get(I)!==C&&(h.set(I,C),I.update())}function we(I,C){const K=I.colorSpace,ie=I.format,re=I.type;return I.isCompressedTexture===!0||I.isVideoTexture===!0||K!==Bi&&K!==Qi&&(Tt.getTransfer(K)===Mt?(ie!==li||re!==or)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",K)),C}function ct(I){return typeof HTMLImageElement<"u"&&I instanceof HTMLImageElement?(c.width=I.naturalWidth||I.width,c.height=I.naturalHeight||I.height):typeof VideoFrame<"u"&&I instanceof VideoFrame?(c.width=I.displayWidth,c.height=I.displayHeight):(c.width=I.width,c.height=I.height),c}this.allocateTextureUnit=P,this.resetTextureUnits=T,this.setTexture2D=D,this.setTexture2DArray=N,this.setTexture3D=B,this.setTextureCube=z,this.rebindTextures=Me,this.setupRenderTarget=Ae,this.updateRenderTargetMipmap=Pe,this.updateMultisampleRenderTarget=G,this.setupDepthRenderbuffer=se,this.setupFrameBufferTexture=W,this.useMultisampledRTT=Te}function jA(e,t){function n(i,r=Qi){let a;const s=Tt.getTransfer(r);if(i===or)return e.UNSIGNED_BYTE;if(i===gm)return e.UNSIGNED_SHORT_4_4_4_4;if(i===_m)return e.UNSIGNED_SHORT_5_5_5_1;if(i===uT)return e.UNSIGNED_INT_5_9_9_9_REV;if(i===cT)return e.BYTE;if(i===hT)return e.SHORT;if(i===mm)return e.UNSIGNED_SHORT;if(i===vm)return e.INT;if(i===Ya)return e.UNSIGNED_INT;if(i===$n)return e.FLOAT;if(i===rr)return e.HALF_FLOAT;if(i===fT)return e.ALPHA;if(i===dT)return e.RGB;if(i===li)return e.RGBA;if(i===pT)return e.LUMINANCE;if(i===mT)return e.LUMINANCE_ALPHA;if(i===Na)return e.DEPTH_COMPONENT;if(i===Us)return e.DEPTH_STENCIL;if(i===vT)return e.RED;if(i===xm)return e.RED_INTEGER;if(i===gT)return e.RG;if(i===ym)return e.RG_INTEGER;if(i===Tm)return e.RGBA_INTEGER;if(i===lc||i===cc||i===hc||i===uc)if(s===Mt)if(a=t.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(i===lc)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===cc)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===hc)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===uc)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=t.get("WEBGL_compressed_texture_s3tc"),a!==null){if(i===lc)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===cc)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===hc)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===uc)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===_f||i===xf||i===yf||i===Tf)if(a=t.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(i===_f)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===xf)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===yf)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===Tf)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===Sm)return a=t.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(i===Sf||i===Ef)if(a=t.get("WEBGL_compressed_texture_etc"),a!==null){if(i===Sf)return s===Mt?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(i===Ef)return s===Mt?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===Mf||i===wf||i===Af||i===bf||i===Cf||i===Rf||i===Lf||i===Pf||i===Df||i===Nf||i===If||i===Of||i===Uf||i===Ff)if(a=t.get("WEBGL_compressed_texture_astc"),a!==null){if(i===Mf)return s===Mt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===wf)return s===Mt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===Af)return s===Mt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===bf)return s===Mt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===Cf)return s===Mt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===Rf)return s===Mt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===Lf)return s===Mt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===Pf)return s===Mt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===Df)return s===Mt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===Nf)return s===Mt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===If)return s===Mt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===Of)return s===Mt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===Uf)return s===Mt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===Ff)return s===Mt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===fc||i===Bf||i===zf)if(a=t.get("EXT_texture_compression_bptc"),a!==null){if(i===fc)return s===Mt?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===Bf)return a.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===zf)return a.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===_T||i===Gf||i===Hf||i===Vf)if(a=t.get("EXT_texture_compression_rgtc"),a!==null){if(i===fc)return a.COMPRESSED_RED_RGTC1_EXT;if(i===Gf)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===Hf)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===Vf)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===Xs?e.UNSIGNED_INT_24_8:e[i]!==void 0?e[i]:null}return{convert:n}}class ZA extends kn{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}class Bo extends ln{constructor(){super(),this.isGroup=!0,this.type="Group"}}const KA={type:"move"};class Fc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Bo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Bo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new k,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new k),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Bo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new k,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new k),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const n=this._hand;if(n)for(const i of t.hand.values())this._getHandJoint(n,i)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,n,i){let r=null,a=null,s=null;const o=this._targetRay,l=this._grip,c=this._hand;if(t&&n.session.visibilityState!=="visible-blurred"){if(c&&t.hand){s=!0;for(const g of t.hand.values()){const v=n.getJointPose(g,i),m=this._getHandJoint(c,g);v!==null&&(m.matrix.fromArray(v.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.matrixWorldNeedsUpdate=!0,m.jointRadius=v.radius),m.visible=v!==null}const h=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],f=h.position.distanceTo(u.position),d=.02,p=.005;c.inputState.pinching&&f>d+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&f<=d-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else l!==null&&t.gripSpace&&(a=n.getPose(t.gripSpace,i),a!==null&&(l.matrix.fromArray(a.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,a.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(a.linearVelocity)):l.hasLinearVelocity=!1,a.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(a.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(r=n.getPose(t.targetRaySpace,i),r===null&&a!==null&&(r=a),r!==null&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(KA)))}return o!==null&&(o.visible=r!==null),l!==null&&(l.visible=a!==null),c!==null&&(c.visible=s!==null),this}_getHandJoint(t,n){if(t.joints[n.jointName]===void 0){const i=new Bo;i.matrixAutoUpdate=!1,i.visible=!1,t.joints[n.jointName]=i,t.add(i)}return t.joints[n.jointName]}}const $A=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,JA=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class QA{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,n,i){if(this.texture===null){const r=new dn,a=t.properties.get(r);a.__webglTexture=n.texture,(n.depthNear!=i.depthNear||n.depthFar!=i.depthFar)&&(this.depthNear=n.depthNear,this.depthFar=n.depthFar),this.texture=r}}render(t,n){if(this.texture!==null){if(this.mesh===null){const i=n.cameras[0].viewport,r=new ur({vertexShader:$A,fragmentShader:JA,uniforms:{depthColor:{value:this.texture},depthWidth:{value:i.z},depthHeight:{value:i.w}}});this.mesh=new ci(new Al(20,20),r)}t.render(this.mesh,n)}}reset(){this.texture=null,this.mesh=null}}class eb extends Kr{constructor(t,n){super();const i=this;let r=null,a=1,s=null,o="local-floor",l=1,c=null,h=null,u=null,f=null,d=null,p=null;const g=new QA,v=n.getContextAttributes();let m=null,y=null;const _=[],x=[],A=new He;let E=null;const w=new kn;w.layers.enable(1),w.viewport=new rn;const b=new kn;b.layers.enable(2),b.viewport=new rn;const M=[w,b],T=new ZA;T.layers.enable(1),T.layers.enable(2);let P=null,O=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(W){let Q=_[W];return Q===void 0&&(Q=new Fc,_[W]=Q),Q.getTargetRaySpace()},this.getControllerGrip=function(W){let Q=_[W];return Q===void 0&&(Q=new Fc,_[W]=Q),Q.getGripSpace()},this.getHand=function(W){let Q=_[W];return Q===void 0&&(Q=new Fc,_[W]=Q),Q.getHandSpace()};function D(W){const Q=x.indexOf(W.inputSource);if(Q===-1)return;const de=_[Q];de!==void 0&&(de.update(W.inputSource,W.frame,c||s),de.dispatchEvent({type:W.type,data:W.inputSource}))}function N(){r.removeEventListener("select",D),r.removeEventListener("selectstart",D),r.removeEventListener("selectend",D),r.removeEventListener("squeeze",D),r.removeEventListener("squeezestart",D),r.removeEventListener("squeezeend",D),r.removeEventListener("end",N),r.removeEventListener("inputsourceschange",B);for(let W=0;W<_.length;W++){const Q=x[W];Q!==null&&(x[W]=null,_[W].disconnect(Q))}P=null,O=null,g.reset(),t.setRenderTarget(m),d=null,f=null,u=null,r=null,y=null,ye.stop(),i.isPresenting=!1,t.setPixelRatio(E),t.setSize(A.width,A.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(W){a=W,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(W){o=W,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||s},this.setReferenceSpace=function(W){c=W},this.getBaseLayer=function(){return f!==null?f:d},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return r},this.setSession=async function(W){if(r=W,r!==null){if(m=t.getRenderTarget(),r.addEventListener("select",D),r.addEventListener("selectstart",D),r.addEventListener("selectend",D),r.addEventListener("squeeze",D),r.addEventListener("squeezestart",D),r.addEventListener("squeezeend",D),r.addEventListener("end",N),r.addEventListener("inputsourceschange",B),v.xrCompatible!==!0&&await n.makeXRCompatible(),E=t.getPixelRatio(),t.getSize(A),r.renderState.layers===void 0){const Q={antialias:v.antialias,alpha:!0,depth:v.depth,stencil:v.stencil,framebufferScaleFactor:a};d=new XRWebGLLayer(r,n,Q),r.updateRenderState({baseLayer:d}),t.setPixelRatio(1),t.setSize(d.framebufferWidth,d.framebufferHeight,!1),y=new jr(d.framebufferWidth,d.framebufferHeight,{format:li,type:or,colorSpace:t.outputColorSpace,stencilBuffer:v.stencil})}else{let Q=null,de=null,se=null;v.depth&&(se=v.stencil?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24,Q=v.stencil?Us:Na,de=v.stencil?Xs:Ya);const Me={colorFormat:n.RGBA8,depthFormat:se,scaleFactor:a};u=new XRWebGLBinding(r,n),f=u.createProjectionLayer(Me),r.updateRenderState({layers:[f]}),t.setPixelRatio(1),t.setSize(f.textureWidth,f.textureHeight,!1),y=new jr(f.textureWidth,f.textureHeight,{format:li,type:or,depthTexture:new zm(f.textureWidth,f.textureHeight,de,void 0,void 0,void 0,void 0,void 0,void 0,Q),stencilBuffer:v.stencil,colorSpace:t.outputColorSpace,samples:v.antialias?4:0});const Ae=t.properties.get(y);Ae.__ignoreDepthValues=f.ignoreDepthValues}y.isXRRenderTarget=!0,this.setFoveation(l),c=null,s=await r.requestReferenceSpace(o),ye.setContext(r),ye.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode};function B(W){for(let Q=0;Q<W.removed.length;Q++){const de=W.removed[Q],se=x.indexOf(de);se>=0&&(x[se]=null,_[se].disconnect(de))}for(let Q=0;Q<W.added.length;Q++){const de=W.added[Q];let se=x.indexOf(de);if(se===-1){for(let Ae=0;Ae<_.length;Ae++)if(Ae>=x.length){x.push(de),se=Ae;break}else if(x[Ae]===null){x[Ae]=de,se=Ae;break}if(se===-1)break}const Me=_[se];Me&&Me.connect(de)}}const z=new k,Y=new k;function F(W,Q,de){z.setFromMatrixPosition(Q.matrixWorld),Y.setFromMatrixPosition(de.matrixWorld);const se=z.distanceTo(Y),Me=Q.projectionMatrix.elements,Ae=de.projectionMatrix.elements,Pe=Me[14]/(Me[10]-1),G=Me[14]/(Me[10]+1),ke=(Me[9]+1)/Me[5],Te=(Me[9]-1)/Me[5],ht=(Me[8]-1)/Me[0],we=(Ae[8]+1)/Ae[0],ct=Pe*ht,I=Pe*we,C=se/(-ht+we),K=C*-ht;Q.matrixWorld.decompose(W.position,W.quaternion,W.scale),W.translateX(K),W.translateZ(C),W.matrixWorld.compose(W.position,W.quaternion,W.scale),W.matrixWorldInverse.copy(W.matrixWorld).invert();const ie=Pe+C,re=G+C,ae=ct-K,Ue=I+(se-K),he=ke*G/re*ie,Ie=Te*G/re*ie;W.projectionMatrix.makePerspective(ae,Ue,he,Ie,ie,re),W.projectionMatrixInverse.copy(W.projectionMatrix).invert()}function J(W,Q){Q===null?W.matrixWorld.copy(W.matrix):W.matrixWorld.multiplyMatrices(Q.matrixWorld,W.matrix),W.matrixWorldInverse.copy(W.matrixWorld).invert()}this.updateCamera=function(W){if(r===null)return;g.texture!==null&&(W.near=g.depthNear,W.far=g.depthFar),T.near=b.near=w.near=W.near,T.far=b.far=w.far=W.far,(P!==T.near||O!==T.far)&&(r.updateRenderState({depthNear:T.near,depthFar:T.far}),P=T.near,O=T.far,w.near=P,w.far=O,b.near=P,b.far=O,w.updateProjectionMatrix(),b.updateProjectionMatrix(),W.updateProjectionMatrix());const Q=W.parent,de=T.cameras;J(T,Q);for(let se=0;se<de.length;se++)J(de[se],Q);de.length===2?F(T,w,b):T.projectionMatrix.copy(w.projectionMatrix),V(W,T,Q)};function V(W,Q,de){de===null?W.matrix.copy(Q.matrixWorld):(W.matrix.copy(de.matrixWorld),W.matrix.invert(),W.matrix.multiply(Q.matrixWorld)),W.matrix.decompose(W.position,W.quaternion,W.scale),W.updateMatrixWorld(!0),W.projectionMatrix.copy(Q.projectionMatrix),W.projectionMatrixInverse.copy(Q.projectionMatrixInverse),W.isPerspectiveCamera&&(W.fov=Fs*2*Math.atan(1/W.projectionMatrix.elements[5]),W.zoom=1)}this.getCamera=function(){return T},this.getFoveation=function(){if(!(f===null&&d===null))return l},this.setFoveation=function(W){l=W,f!==null&&(f.fixedFoveation=W),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=W)},this.hasDepthSensing=function(){return g.texture!==null};let ce=null;function fe(W,Q){if(h=Q.getViewerPose(c||s),p=Q,h!==null){const de=h.views;d!==null&&(t.setRenderTargetFramebuffer(y,d.framebuffer),t.setRenderTarget(y));let se=!1;de.length!==T.cameras.length&&(T.cameras.length=0,se=!0);for(let Ae=0;Ae<de.length;Ae++){const Pe=de[Ae];let G=null;if(d!==null)G=d.getViewport(Pe);else{const Te=u.getViewSubImage(f,Pe);G=Te.viewport,Ae===0&&(t.setRenderTargetTextures(y,Te.colorTexture,f.ignoreDepthValues?void 0:Te.depthStencilTexture),t.setRenderTarget(y))}let ke=M[Ae];ke===void 0&&(ke=new kn,ke.layers.enable(Ae),ke.viewport=new rn,M[Ae]=ke),ke.matrix.fromArray(Pe.transform.matrix),ke.matrix.decompose(ke.position,ke.quaternion,ke.scale),ke.projectionMatrix.fromArray(Pe.projectionMatrix),ke.projectionMatrixInverse.copy(ke.projectionMatrix).invert(),ke.viewport.set(G.x,G.y,G.width,G.height),Ae===0&&(T.matrix.copy(ke.matrix),T.matrix.decompose(T.position,T.quaternion,T.scale)),se===!0&&T.cameras.push(ke)}const Me=r.enabledFeatures;if(Me&&Me.includes("depth-sensing")){const Ae=u.getDepthInformation(de[0]);Ae&&Ae.isValid&&Ae.texture&&g.init(t,Ae,r.renderState)}}for(let de=0;de<_.length;de++){const se=x[de],Me=_[de];se!==null&&Me!==void 0&&Me.update(se,Q,c||s)}g.render(t,T),ce&&ce(W,Q),Q.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:Q}),p=null}const ye=new Fm;ye.setAnimationLoop(fe),this.setAnimationLoop=function(W){ce=W},this.dispose=function(){}}}const Ir=new gi,tb=new zt;function nb(e,t){function n(v,m){v.matrixAutoUpdate===!0&&v.updateMatrix(),m.value.copy(v.matrix)}function i(v,m){m.color.getRGB(v.fogColor.value,Im(e)),m.isFog?(v.fogNear.value=m.near,v.fogFar.value=m.far):m.isFogExp2&&(v.fogDensity.value=m.density)}function r(v,m,y,_,x){m.isMeshBasicMaterial||m.isMeshLambertMaterial?a(v,m):m.isMeshToonMaterial?(a(v,m),u(v,m)):m.isMeshPhongMaterial?(a(v,m),h(v,m)):m.isMeshStandardMaterial?(a(v,m),f(v,m),m.isMeshPhysicalMaterial&&d(v,m,x)):m.isMeshMatcapMaterial?(a(v,m),p(v,m)):m.isMeshDepthMaterial?a(v,m):m.isMeshDistanceMaterial?(a(v,m),g(v,m)):m.isMeshNormalMaterial?a(v,m):m.isLineBasicMaterial?(s(v,m),m.isLineDashedMaterial&&o(v,m)):m.isPointsMaterial?l(v,m,y,_):m.isSpriteMaterial?c(v,m):m.isShadowMaterial?(v.color.value.copy(m.color),v.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function a(v,m){v.opacity.value=m.opacity,m.color&&v.diffuse.value.copy(m.color),m.emissive&&v.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(v.map.value=m.map,n(m.map,v.mapTransform)),m.alphaMap&&(v.alphaMap.value=m.alphaMap,n(m.alphaMap,v.alphaMapTransform)),m.bumpMap&&(v.bumpMap.value=m.bumpMap,n(m.bumpMap,v.bumpMapTransform),v.bumpScale.value=m.bumpScale,m.side===Cn&&(v.bumpScale.value*=-1)),m.normalMap&&(v.normalMap.value=m.normalMap,n(m.normalMap,v.normalMapTransform),v.normalScale.value.copy(m.normalScale),m.side===Cn&&v.normalScale.value.negate()),m.displacementMap&&(v.displacementMap.value=m.displacementMap,n(m.displacementMap,v.displacementMapTransform),v.displacementScale.value=m.displacementScale,v.displacementBias.value=m.displacementBias),m.emissiveMap&&(v.emissiveMap.value=m.emissiveMap,n(m.emissiveMap,v.emissiveMapTransform)),m.specularMap&&(v.specularMap.value=m.specularMap,n(m.specularMap,v.specularMapTransform)),m.alphaTest>0&&(v.alphaTest.value=m.alphaTest);const y=t.get(m),_=y.envMap,x=y.envMapRotation;if(_&&(v.envMap.value=_,Ir.copy(x),Ir.x*=-1,Ir.y*=-1,Ir.z*=-1,_.isCubeTexture&&_.isRenderTargetTexture===!1&&(Ir.y*=-1,Ir.z*=-1),v.envMapRotation.value.setFromMatrix4(tb.makeRotationFromEuler(Ir)),v.flipEnvMap.value=_.isCubeTexture&&_.isRenderTargetTexture===!1?-1:1,v.reflectivity.value=m.reflectivity,v.ior.value=m.ior,v.refractionRatio.value=m.refractionRatio),m.lightMap){v.lightMap.value=m.lightMap;const A=e._useLegacyLights===!0?Math.PI:1;v.lightMapIntensity.value=m.lightMapIntensity*A,n(m.lightMap,v.lightMapTransform)}m.aoMap&&(v.aoMap.value=m.aoMap,v.aoMapIntensity.value=m.aoMapIntensity,n(m.aoMap,v.aoMapTransform))}function s(v,m){v.diffuse.value.copy(m.color),v.opacity.value=m.opacity,m.map&&(v.map.value=m.map,n(m.map,v.mapTransform))}function o(v,m){v.dashSize.value=m.dashSize,v.totalSize.value=m.dashSize+m.gapSize,v.scale.value=m.scale}function l(v,m,y,_){v.diffuse.value.copy(m.color),v.opacity.value=m.opacity,v.size.value=m.size*y,v.scale.value=_*.5,m.map&&(v.map.value=m.map,n(m.map,v.uvTransform)),m.alphaMap&&(v.alphaMap.value=m.alphaMap,n(m.alphaMap,v.alphaMapTransform)),m.alphaTest>0&&(v.alphaTest.value=m.alphaTest)}function c(v,m){v.diffuse.value.copy(m.color),v.opacity.value=m.opacity,v.rotation.value=m.rotation,m.map&&(v.map.value=m.map,n(m.map,v.mapTransform)),m.alphaMap&&(v.alphaMap.value=m.alphaMap,n(m.alphaMap,v.alphaMapTransform)),m.alphaTest>0&&(v.alphaTest.value=m.alphaTest)}function h(v,m){v.specular.value.copy(m.specular),v.shininess.value=Math.max(m.shininess,1e-4)}function u(v,m){m.gradientMap&&(v.gradientMap.value=m.gradientMap)}function f(v,m){v.metalness.value=m.metalness,m.metalnessMap&&(v.metalnessMap.value=m.metalnessMap,n(m.metalnessMap,v.metalnessMapTransform)),v.roughness.value=m.roughness,m.roughnessMap&&(v.roughnessMap.value=m.roughnessMap,n(m.roughnessMap,v.roughnessMapTransform)),m.envMap&&(v.envMapIntensity.value=m.envMapIntensity)}function d(v,m,y){v.ior.value=m.ior,m.sheen>0&&(v.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),v.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(v.sheenColorMap.value=m.sheenColorMap,n(m.sheenColorMap,v.sheenColorMapTransform)),m.sheenRoughnessMap&&(v.sheenRoughnessMap.value=m.sheenRoughnessMap,n(m.sheenRoughnessMap,v.sheenRoughnessMapTransform))),m.clearcoat>0&&(v.clearcoat.value=m.clearcoat,v.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(v.clearcoatMap.value=m.clearcoatMap,n(m.clearcoatMap,v.clearcoatMapTransform)),m.clearcoatRoughnessMap&&(v.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap,n(m.clearcoatRoughnessMap,v.clearcoatRoughnessMapTransform)),m.clearcoatNormalMap&&(v.clearcoatNormalMap.value=m.clearcoatNormalMap,n(m.clearcoatNormalMap,v.clearcoatNormalMapTransform),v.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),m.side===Cn&&v.clearcoatNormalScale.value.negate())),m.iridescence>0&&(v.iridescence.value=m.iridescence,v.iridescenceIOR.value=m.iridescenceIOR,v.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],v.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(v.iridescenceMap.value=m.iridescenceMap,n(m.iridescenceMap,v.iridescenceMapTransform)),m.iridescenceThicknessMap&&(v.iridescenceThicknessMap.value=m.iridescenceThicknessMap,n(m.iridescenceThicknessMap,v.iridescenceThicknessMapTransform))),m.transmission>0&&(v.transmission.value=m.transmission,v.transmissionSamplerMap.value=y.texture,v.transmissionSamplerSize.value.set(y.width,y.height),m.transmissionMap&&(v.transmissionMap.value=m.transmissionMap,n(m.transmissionMap,v.transmissionMapTransform)),v.thickness.value=m.thickness,m.thicknessMap&&(v.thicknessMap.value=m.thicknessMap,n(m.thicknessMap,v.thicknessMapTransform)),v.attenuationDistance.value=m.attenuationDistance,v.attenuationColor.value.copy(m.attenuationColor)),m.anisotropy>0&&(v.anisotropyVector.value.set(m.anisotropy*Math.cos(m.anisotropyRotation),m.anisotropy*Math.sin(m.anisotropyRotation)),m.anisotropyMap&&(v.anisotropyMap.value=m.anisotropyMap,n(m.anisotropyMap,v.anisotropyMapTransform))),v.specularIntensity.value=m.specularIntensity,v.specularColor.value.copy(m.specularColor),m.specularColorMap&&(v.specularColorMap.value=m.specularColorMap,n(m.specularColorMap,v.specularColorMapTransform)),m.specularIntensityMap&&(v.specularIntensityMap.value=m.specularIntensityMap,n(m.specularIntensityMap,v.specularIntensityMapTransform))}function p(v,m){m.matcap&&(v.matcap.value=m.matcap)}function g(v,m){const y=t.get(m).light;v.referencePosition.value.setFromMatrixPosition(y.matrixWorld),v.nearDistance.value=y.shadow.camera.near,v.farDistance.value=y.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:r}}function ib(e,t,n,i){let r={},a={},s=[];const o=e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS);function l(y,_){const x=_.program;i.uniformBlockBinding(y,x)}function c(y,_){let x=r[y.id];x===void 0&&(p(y),x=h(y),r[y.id]=x,y.addEventListener("dispose",v));const A=_.program;i.updateUBOMapping(y,A);const E=t.render.frame;a[y.id]!==E&&(f(y),a[y.id]=E)}function h(y){const _=u();y.__bindingPointIndex=_;const x=e.createBuffer(),A=y.__size,E=y.usage;return e.bindBuffer(e.UNIFORM_BUFFER,x),e.bufferData(e.UNIFORM_BUFFER,A,E),e.bindBuffer(e.UNIFORM_BUFFER,null),e.bindBufferBase(e.UNIFORM_BUFFER,_,x),x}function u(){for(let y=0;y<o;y++)if(s.indexOf(y)===-1)return s.push(y),y;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function f(y){const _=r[y.id],x=y.uniforms,A=y.__cache;e.bindBuffer(e.UNIFORM_BUFFER,_);for(let E=0,w=x.length;E<w;E++){const b=Array.isArray(x[E])?x[E]:[x[E]];for(let M=0,T=b.length;M<T;M++){const P=b[M];if(d(P,E,M,A)===!0){const O=P.__offset,D=Array.isArray(P.value)?P.value:[P.value];let N=0;for(let B=0;B<D.length;B++){const z=D[B],Y=g(z);typeof z=="number"||typeof z=="boolean"?(P.__data[0]=z,e.bufferSubData(e.UNIFORM_BUFFER,O+N,P.__data)):z.isMatrix3?(P.__data[0]=z.elements[0],P.__data[1]=z.elements[1],P.__data[2]=z.elements[2],P.__data[3]=0,P.__data[4]=z.elements[3],P.__data[5]=z.elements[4],P.__data[6]=z.elements[5],P.__data[7]=0,P.__data[8]=z.elements[6],P.__data[9]=z.elements[7],P.__data[10]=z.elements[8],P.__data[11]=0):(z.toArray(P.__data,N),N+=Y.storage/Float32Array.BYTES_PER_ELEMENT)}e.bufferSubData(e.UNIFORM_BUFFER,O,P.__data)}}}e.bindBuffer(e.UNIFORM_BUFFER,null)}function d(y,_,x,A){const E=y.value,w=_+"_"+x;if(A[w]===void 0)return typeof E=="number"||typeof E=="boolean"?A[w]=E:A[w]=E.clone(),!0;{const b=A[w];if(typeof E=="number"||typeof E=="boolean"){if(b!==E)return A[w]=E,!0}else if(b.equals(E)===!1)return b.copy(E),!0}return!1}function p(y){const _=y.uniforms;let x=0;const A=16;for(let w=0,b=_.length;w<b;w++){const M=Array.isArray(_[w])?_[w]:[_[w]];for(let T=0,P=M.length;T<P;T++){const O=M[T],D=Array.isArray(O.value)?O.value:[O.value];for(let N=0,B=D.length;N<B;N++){const z=D[N],Y=g(z),F=x%A;F!==0&&A-F<Y.boundary&&(x+=A-F),O.__data=new Float32Array(Y.storage/Float32Array.BYTES_PER_ELEMENT),O.__offset=x,x+=Y.storage}}}const E=x%A;return E>0&&(x+=A-E),y.__size=x,y.__cache={},this}function g(y){const _={boundary:0,storage:0};return typeof y=="number"||typeof y=="boolean"?(_.boundary=4,_.storage=4):y.isVector2?(_.boundary=8,_.storage=8):y.isVector3||y.isColor?(_.boundary=16,_.storage=12):y.isVector4?(_.boundary=16,_.storage=16):y.isMatrix3?(_.boundary=48,_.storage=48):y.isMatrix4?(_.boundary=64,_.storage=64):y.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",y),_}function v(y){const _=y.target;_.removeEventListener("dispose",v);const x=s.indexOf(_.__bindingPointIndex);s.splice(x,1),e.deleteBuffer(r[_.id]),delete r[_.id],delete a[_.id]}function m(){for(const y in r)e.deleteBuffer(r[y]);s=[],r={},a={}}return{bind:l,update:c,dispose:m}}class rb{constructor(t={}){const{canvas:n=YT(),context:i=null,depth:r=!0,stencil:a=!1,alpha:s=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:h="default",failIfMajorPerformanceCaveat:u=!1}=t;this.isWebGLRenderer=!0;let f;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=i.getContextAttributes().alpha}else f=s;const d=new Uint32Array(4),p=new Int32Array(4);let g=null,v=null;const m=[],y=[];this.domElement=n,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=ri,this._useLegacyLights=!1,this.toneMapping=sr,this.toneMappingExposure=1;const _=this;let x=!1,A=0,E=0,w=null,b=-1,M=null;const T=new rn,P=new rn;let O=null;const D=new ft(0);let N=0,B=n.width,z=n.height,Y=1,F=null,J=null;const V=new rn(0,0,B,z),ce=new rn(0,0,B,z);let fe=!1;const ye=new Oh;let W=!1,Q=!1;const de=new zt,se=new He,Me=new k,Ae={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Pe(){return w===null?Y:1}let G=i;function ke(L,H){const j=n.getContext(L,H);return j!==null?j:null}try{const L={alpha:!0,depth:r,stencil:a,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:h,failIfMajorPerformanceCaveat:u};if("setAttribute"in n&&n.setAttribute("data-engine",`three.js r${Ph}`),n.addEventListener("webglcontextlost",X,!1),n.addEventListener("webglcontextrestored",te,!1),n.addEventListener("webglcontextcreationerror",pe,!1),G===null){const H="webgl2";if(G=ke(H,L),G===null)throw ke(H)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(L){throw console.error("THREE.WebGLRenderer: "+L.message),L}let Te,ht,we,ct,I,C,K,ie,re,ae,Ue,he,Ie,Fe,ve,Se,ze,be,Ce,rt,st,vt,ut,gt;function De(){Te=new fw(G),Te.init(),ht=new sw(G,Te,t),vt=new jA(G,Te),we=new YA(G),ct=new mw(G),I=new DA,C=new qA(G,Te,we,I,ht,vt,ct),K=new lw(_),ie=new uw(_),re=new TS(G),ut=new rw(G,re),ae=new dw(G,re,ct,ut),Ue=new gw(G,ae,re,ct),Ce=new vw(G,ht,C),Se=new ow(I),he=new PA(_,K,ie,Te,ht,ut,Se),Ie=new nb(_,I),Fe=new IA,ve=new GA(Te),be=new iw(_,K,ie,we,Ue,f,l),ze=new XA(_,Ue,ht),gt=new ib(G,ct,ht,we),rt=new aw(G,Te,ct),st=new pw(G,Te,ct),ct.programs=he.programs,_.capabilities=ht,_.extensions=Te,_.properties=I,_.renderLists=Fe,_.shadowMap=ze,_.state=we,_.info=ct}De();const S=new eb(_,G);this.xr=S,this.getContext=function(){return G},this.getContextAttributes=function(){return G.getContextAttributes()},this.forceContextLoss=function(){const L=Te.get("WEBGL_lose_context");L&&L.loseContext()},this.forceContextRestore=function(){const L=Te.get("WEBGL_lose_context");L&&L.restoreContext()},this.getPixelRatio=function(){return Y},this.setPixelRatio=function(L){L!==void 0&&(Y=L,this.setSize(B,z,!1))},this.getSize=function(L){return L.set(B,z)},this.setSize=function(L,H,j=!0){if(S.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}B=L,z=H,n.width=Math.floor(L*Y),n.height=Math.floor(H*Y),j===!0&&(n.style.width=L+"px",n.style.height=H+"px"),this.setViewport(0,0,L,H)},this.getDrawingBufferSize=function(L){return L.set(B*Y,z*Y).floor()},this.setDrawingBufferSize=function(L,H,j){B=L,z=H,Y=j,n.width=Math.floor(L*j),n.height=Math.floor(H*j),this.setViewport(0,0,L,H)},this.getCurrentViewport=function(L){return L.copy(T)},this.getViewport=function(L){return L.copy(V)},this.setViewport=function(L,H,j,Z){L.isVector4?V.set(L.x,L.y,L.z,L.w):V.set(L,H,j,Z),we.viewport(T.copy(V).multiplyScalar(Y).round())},this.getScissor=function(L){return L.copy(ce)},this.setScissor=function(L,H,j,Z){L.isVector4?ce.set(L.x,L.y,L.z,L.w):ce.set(L,H,j,Z),we.scissor(P.copy(ce).multiplyScalar(Y).round())},this.getScissorTest=function(){return fe},this.setScissorTest=function(L){we.setScissorTest(fe=L)},this.setOpaqueSort=function(L){F=L},this.setTransparentSort=function(L){J=L},this.getClearColor=function(L){return L.copy(be.getClearColor())},this.setClearColor=function(){be.setClearColor.apply(be,arguments)},this.getClearAlpha=function(){return be.getClearAlpha()},this.setClearAlpha=function(){be.setClearAlpha.apply(be,arguments)},this.clear=function(L=!0,H=!0,j=!0){let Z=0;if(L){let q=!1;if(w!==null){const xe=w.texture.format;q=xe===Tm||xe===ym||xe===xm}if(q){const xe=w.texture.type,Ne=xe===or||xe===Ya||xe===mm||xe===Xs||xe===gm||xe===_m,Be=be.getClearColor(),Ge=be.getClearAlpha(),Ze=Be.r,qe=Be.g,Ke=Be.b;Ne?(d[0]=Ze,d[1]=qe,d[2]=Ke,d[3]=Ge,G.clearBufferuiv(G.COLOR,0,d)):(p[0]=Ze,p[1]=qe,p[2]=Ke,p[3]=Ge,G.clearBufferiv(G.COLOR,0,p))}else Z|=G.COLOR_BUFFER_BIT}H&&(Z|=G.DEPTH_BUFFER_BIT),j&&(Z|=G.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),G.clear(Z)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){n.removeEventListener("webglcontextlost",X,!1),n.removeEventListener("webglcontextrestored",te,!1),n.removeEventListener("webglcontextcreationerror",pe,!1),Fe.dispose(),ve.dispose(),I.dispose(),K.dispose(),ie.dispose(),Ue.dispose(),ut.dispose(),gt.dispose(),he.dispose(),S.dispose(),S.removeEventListener("sessionstart",Gt),S.removeEventListener("sessionend",Ht),Ln.stop()};function X(L){L.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),x=!0}function te(){console.log("THREE.WebGLRenderer: Context Restored."),x=!1;const L=ct.autoReset,H=ze.enabled,j=ze.autoUpdate,Z=ze.needsUpdate,q=ze.type;De(),ct.autoReset=L,ze.enabled=H,ze.autoUpdate=j,ze.needsUpdate=Z,ze.type=q}function pe(L){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",L.statusMessage)}function Ee(L){const H=L.target;H.removeEventListener("dispose",Ee),ot(H)}function ot(L){it(L),I.remove(L)}function it(L){const H=I.get(L).programs;H!==void 0&&(H.forEach(function(j){he.releaseProgram(j)}),L.isShaderMaterial&&he.releaseShaderCache(L))}this.renderBufferDirect=function(L,H,j,Z,q,xe){H===null&&(H=Ae);const Ne=q.isMesh&&q.matrixWorld.determinant()<0,Be=Xm(L,H,j,Z,q);we.setMaterial(Z,Ne);let Ge=j.index,Ze=1;if(Z.wireframe===!0){if(Ge=ae.getWireframeAttribute(j),Ge===void 0)return;Ze=2}const qe=j.drawRange,Ke=j.attributes.position;let Ut=qe.start*Ze,Pn=(qe.start+qe.count)*Ze;xe!==null&&(Ut=Math.max(Ut,xe.start*Ze),Pn=Math.min(Pn,(xe.start+xe.count)*Ze)),Ge!==null?(Ut=Math.max(Ut,0),Pn=Math.min(Pn,Ge.count)):Ke!=null&&(Ut=Math.max(Ut,0),Pn=Math.min(Pn,Ke.count));const en=Pn-Ut;if(en<0||en===1/0)return;ut.setup(q,Z,Be,j,Ge);let _i,Lt=rt;if(Ge!==null&&(_i=re.get(Ge),Lt=st,Lt.setIndex(_i)),q.isMesh)Z.wireframe===!0?(we.setLineWidth(Z.wireframeLinewidth*Pe()),Lt.setMode(G.LINES)):Lt.setMode(G.TRIANGLES);else if(q.isLine){let Je=Z.linewidth;Je===void 0&&(Je=1),we.setLineWidth(Je*Pe()),q.isLineSegments?Lt.setMode(G.LINES):q.isLineLoop?Lt.setMode(G.LINE_LOOP):Lt.setMode(G.LINE_STRIP)}else q.isPoints?Lt.setMode(G.POINTS):q.isSprite&&Lt.setMode(G.TRIANGLES);if(q.isBatchedMesh)Lt.renderMultiDraw(q._multiDrawStarts,q._multiDrawCounts,q._multiDrawCount);else if(q.isInstancedMesh)Lt.renderInstances(Ut,en,q.count);else if(j.isInstancedBufferGeometry){const Je=j._maxInstanceCount!==void 0?j._maxInstanceCount:1/0,Cl=Math.min(j.instanceCount,Je);Lt.renderInstances(Ut,en,Cl)}else Lt.render(Ut,en)};function At(L,H,j){L.transparent===!0&&L.side===Ri&&L.forceSinglePass===!1?(L.side=Cn,L.needsUpdate=!0,Ks(L,H,j),L.side=hr,L.needsUpdate=!0,Ks(L,H,j),L.side=Ri):Ks(L,H,j)}this.compile=function(L,H,j=null){j===null&&(j=L),v=ve.get(j),v.init(),y.push(v),j.traverseVisible(function(q){q.isLight&&q.layers.test(H.layers)&&(v.pushLight(q),q.castShadow&&v.pushShadow(q))}),L!==j&&L.traverseVisible(function(q){q.isLight&&q.layers.test(H.layers)&&(v.pushLight(q),q.castShadow&&v.pushShadow(q))}),v.setupLights(_._useLegacyLights);const Z=new Set;return L.traverse(function(q){const xe=q.material;if(xe)if(Array.isArray(xe))for(let Ne=0;Ne<xe.length;Ne++){const Be=xe[Ne];At(Be,j,q),Z.add(Be)}else At(xe,j,q),Z.add(xe)}),y.pop(),v=null,Z},this.compileAsync=function(L,H,j=null){const Z=this.compile(L,H,j);return new Promise(q=>{function xe(){if(Z.forEach(function(Ne){I.get(Ne).currentProgram.isReady()&&Z.delete(Ne)}),Z.size===0){q(L);return}setTimeout(xe,10)}Te.get("KHR_parallel_shader_compile")!==null?xe():setTimeout(xe,10)})};let Qt=null;function yt(L){Qt&&Qt(L)}function Gt(){Ln.stop()}function Ht(){Ln.start()}const Ln=new Fm;Ln.setAnimationLoop(yt),typeof self<"u"&&Ln.setContext(self),this.setAnimationLoop=function(L){Qt=L,S.setAnimationLoop(L),L===null?Ln.stop():Ln.start()},S.addEventListener("sessionstart",Gt),S.addEventListener("sessionend",Ht),this.render=function(L,H){if(H!==void 0&&H.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(x===!0)return;L.matrixWorldAutoUpdate===!0&&L.updateMatrixWorld(),H.parent===null&&H.matrixWorldAutoUpdate===!0&&H.updateMatrixWorld(),S.enabled===!0&&S.isPresenting===!0&&(S.cameraAutoUpdate===!0&&S.updateCamera(H),H=S.getCamera()),L.isScene===!0&&L.onBeforeRender(_,L,H,w),v=ve.get(L,y.length),v.init(),y.push(v),de.multiplyMatrices(H.projectionMatrix,H.matrixWorldInverse),ye.setFromProjectionMatrix(de),Q=this.localClippingEnabled,W=Se.init(this.clippingPlanes,Q),g=Fe.get(L,m.length),g.init(),m.push(g),Fn(L,H,0,_.sortObjects),g.finish(),_.sortObjects===!0&&g.sort(F,J),this.info.render.frame++,W===!0&&Se.beginShadows();const j=v.state.shadowsArray;if(ze.render(j,L,H),W===!0&&Se.endShadows(),this.info.autoReset===!0&&this.info.reset(),(S.enabled===!1||S.isPresenting===!1||S.hasDepthSensing()===!1)&&be.render(g,L),v.setupLights(_._useLegacyLights),H.isArrayCamera){const Z=H.cameras;for(let q=0,xe=Z.length;q<xe;q++){const Ne=Z[q];zi(g,L,Ne,Ne.viewport)}}else zi(g,L,H);w!==null&&(C.updateMultisampleRenderTarget(w),C.updateRenderTargetMipmap(w)),L.isScene===!0&&L.onAfterRender(_,L,H),ut.resetDefaultState(),b=-1,M=null,y.pop(),y.length>0?v=y[y.length-1]:v=null,m.pop(),m.length>0?g=m[m.length-1]:g=null};function Fn(L,H,j,Z){if(L.visible===!1)return;if(L.layers.test(H.layers)){if(L.isGroup)j=L.renderOrder;else if(L.isLOD)L.autoUpdate===!0&&L.update(H);else if(L.isLight)v.pushLight(L),L.castShadow&&v.pushShadow(L);else if(L.isSprite){if(!L.frustumCulled||ye.intersectsSprite(L)){Z&&Me.setFromMatrixPosition(L.matrixWorld).applyMatrix4(de);const Ne=Ue.update(L),Be=L.material;Be.visible&&g.push(L,Ne,Be,j,Me.z,null)}}else if((L.isMesh||L.isLine||L.isPoints)&&(!L.frustumCulled||ye.intersectsObject(L))){const Ne=Ue.update(L),Be=L.material;if(Z&&(L.boundingSphere!==void 0?(L.boundingSphere===null&&L.computeBoundingSphere(),Me.copy(L.boundingSphere.center)):(Ne.boundingSphere===null&&Ne.computeBoundingSphere(),Me.copy(Ne.boundingSphere.center)),Me.applyMatrix4(L.matrixWorld).applyMatrix4(de)),Array.isArray(Be)){const Ge=Ne.groups;for(let Ze=0,qe=Ge.length;Ze<qe;Ze++){const Ke=Ge[Ze],Ut=Be[Ke.materialIndex];Ut&&Ut.visible&&g.push(L,Ne,Ut,j,Me.z,Ke)}}else Be.visible&&g.push(L,Ne,Be,j,Me.z,null)}}const xe=L.children;for(let Ne=0,Be=xe.length;Ne<Be;Ne++)Fn(xe[Ne],H,j,Z)}function zi(L,H,j,Z){const q=L.opaque,xe=L.transmissive,Ne=L.transparent;v.setupLightsView(j),W===!0&&Se.setGlobalState(_.clippingPlanes,j),xe.length>0&&$r(q,xe,H,j),Z&&we.viewport(T.copy(Z)),q.length>0&&xr(q,H,j),xe.length>0&&xr(xe,H,j),Ne.length>0&&xr(Ne,H,j),we.buffers.depth.setTest(!0),we.buffers.depth.setMask(!0),we.buffers.color.setMask(!0),we.setPolygonOffset(!1)}function $r(L,H,j,Z){if((j.isScene===!0?j.overrideMaterial:null)!==null)return;if(v.state.transmissionRenderTarget===null){v.state.transmissionRenderTarget=new jr(1,1,{generateMipmaps:!0,type:Te.has("EXT_color_buffer_half_float")||Te.has("EXT_color_buffer_float")?rr:or,minFilter:ir,samples:4,stencilBuffer:a});const Ze=I.get(v.state.transmissionRenderTarget);Ze.__isTransmissionRenderTarget=!0}const xe=v.state.transmissionRenderTarget;_.getDrawingBufferSize(se),xe.setSize(se.x,se.y);const Ne=_.getRenderTarget();_.setRenderTarget(xe),_.getClearColor(D),N=_.getClearAlpha(),N<1&&_.setClearColor(16777215,.5),_.clear();const Be=_.toneMapping;_.toneMapping=sr,xr(L,j,Z),C.updateMultisampleRenderTarget(xe),C.updateRenderTargetMipmap(xe);let Ge=!1;for(let Ze=0,qe=H.length;Ze<qe;Ze++){const Ke=H[Ze],Ut=Ke.object,Pn=Ke.geometry,en=Ke.material,_i=Ke.group;if(en.side===Ri&&Ut.layers.test(Z.layers)){const Lt=en.side;en.side=Cn,en.needsUpdate=!0,Gh(Ut,j,Z,Pn,en,_i),en.side=Lt,en.needsUpdate=!0,Ge=!0}}Ge===!0&&(C.updateMultisampleRenderTarget(xe),C.updateRenderTargetMipmap(xe)),_.setRenderTarget(Ne),_.setClearColor(D,N),_.toneMapping=Be}function xr(L,H,j){const Z=H.isScene===!0?H.overrideMaterial:null;for(let q=0,xe=L.length;q<xe;q++){const Ne=L[q],Be=Ne.object,Ge=Ne.geometry,Ze=Z===null?Ne.material:Z,qe=Ne.group;Be.layers.test(j.layers)&&Gh(Be,H,j,Ge,Ze,qe)}}function Gh(L,H,j,Z,q,xe){L.onBeforeRender(_,H,j,Z,q,xe),L.modelViewMatrix.multiplyMatrices(j.matrixWorldInverse,L.matrixWorld),L.normalMatrix.getNormalMatrix(L.modelViewMatrix),q.onBeforeRender(_,H,j,Z,L,xe),q.transparent===!0&&q.side===Ri&&q.forceSinglePass===!1?(q.side=Cn,q.needsUpdate=!0,_.renderBufferDirect(j,H,Z,q,L,xe),q.side=hr,q.needsUpdate=!0,_.renderBufferDirect(j,H,Z,q,L,xe),q.side=Ri):_.renderBufferDirect(j,H,Z,q,L,xe),L.onAfterRender(_,H,j,Z,q,xe)}function Ks(L,H,j){H.isScene!==!0&&(H=Ae);const Z=I.get(L),q=v.state.lights,xe=v.state.shadowsArray,Ne=q.state.version,Be=he.getParameters(L,q.state,xe,H,j),Ge=he.getProgramCacheKey(Be);let Ze=Z.programs;Z.environment=L.isMeshStandardMaterial?H.environment:null,Z.fog=H.fog,Z.envMap=(L.isMeshStandardMaterial?ie:K).get(L.envMap||Z.environment),Z.envMapRotation=Z.environment!==null&&L.envMap===null?H.environmentRotation:L.envMapRotation,Ze===void 0&&(L.addEventListener("dispose",Ee),Ze=new Map,Z.programs=Ze);let qe=Ze.get(Ge);if(qe!==void 0){if(Z.currentProgram===qe&&Z.lightsStateVersion===Ne)return Vh(L,Be),qe}else Be.uniforms=he.getUniforms(L),L.onBuild(j,Be,_),L.onBeforeCompile(Be,_),qe=he.acquireProgram(Be,Ge),Ze.set(Ge,qe),Z.uniforms=Be.uniforms;const Ke=Z.uniforms;return(!L.isShaderMaterial&&!L.isRawShaderMaterial||L.clipping===!0)&&(Ke.clippingPlanes=Se.uniform),Vh(L,Be),Z.needsLights=qm(L),Z.lightsStateVersion=Ne,Z.needsLights&&(Ke.ambientLightColor.value=q.state.ambient,Ke.lightProbe.value=q.state.probe,Ke.directionalLights.value=q.state.directional,Ke.directionalLightShadows.value=q.state.directionalShadow,Ke.spotLights.value=q.state.spot,Ke.spotLightShadows.value=q.state.spotShadow,Ke.rectAreaLights.value=q.state.rectArea,Ke.ltc_1.value=q.state.rectAreaLTC1,Ke.ltc_2.value=q.state.rectAreaLTC2,Ke.pointLights.value=q.state.point,Ke.pointLightShadows.value=q.state.pointShadow,Ke.hemisphereLights.value=q.state.hemi,Ke.directionalShadowMap.value=q.state.directionalShadowMap,Ke.directionalShadowMatrix.value=q.state.directionalShadowMatrix,Ke.spotShadowMap.value=q.state.spotShadowMap,Ke.spotLightMatrix.value=q.state.spotLightMatrix,Ke.spotLightMap.value=q.state.spotLightMap,Ke.pointShadowMap.value=q.state.pointShadowMap,Ke.pointShadowMatrix.value=q.state.pointShadowMatrix),Z.currentProgram=qe,Z.uniformsList=null,qe}function Hh(L){if(L.uniformsList===null){const H=L.currentProgram.getUniforms();L.uniformsList=Yo.seqWithValue(H.seq,L.uniforms)}return L.uniformsList}function Vh(L,H){const j=I.get(L);j.outputColorSpace=H.outputColorSpace,j.batching=H.batching,j.instancing=H.instancing,j.instancingColor=H.instancingColor,j.instancingMorph=H.instancingMorph,j.skinning=H.skinning,j.morphTargets=H.morphTargets,j.morphNormals=H.morphNormals,j.morphColors=H.morphColors,j.morphTargetsCount=H.morphTargetsCount,j.numClippingPlanes=H.numClippingPlanes,j.numIntersection=H.numClipIntersection,j.vertexAlphas=H.vertexAlphas,j.vertexTangents=H.vertexTangents,j.toneMapping=H.toneMapping}function Xm(L,H,j,Z,q){H.isScene!==!0&&(H=Ae),C.resetTextureUnits();const xe=H.fog,Ne=Z.isMeshStandardMaterial?H.environment:null,Be=w===null?_.outputColorSpace:w.isXRRenderTarget===!0?w.texture.colorSpace:Bi,Ge=(Z.isMeshStandardMaterial?ie:K).get(Z.envMap||Ne),Ze=Z.vertexColors===!0&&!!j.attributes.color&&j.attributes.color.itemSize===4,qe=!!j.attributes.tangent&&(!!Z.normalMap||Z.anisotropy>0),Ke=!!j.morphAttributes.position,Ut=!!j.morphAttributes.normal,Pn=!!j.morphAttributes.color;let en=sr;Z.toneMapped&&(w===null||w.isXRRenderTarget===!0)&&(en=_.toneMapping);const _i=j.morphAttributes.position||j.morphAttributes.normal||j.morphAttributes.color,Lt=_i!==void 0?_i.length:0,Je=I.get(Z),Cl=v.state.lights;if(W===!0&&(Q===!0||L!==M)){const Bn=L===M&&Z.id===b;Se.setState(Z,L,Bn)}let bt=!1;Z.version===Je.__version?(Je.needsLights&&Je.lightsStateVersion!==Cl.state.version||Je.outputColorSpace!==Be||q.isBatchedMesh&&Je.batching===!1||!q.isBatchedMesh&&Je.batching===!0||q.isInstancedMesh&&Je.instancing===!1||!q.isInstancedMesh&&Je.instancing===!0||q.isSkinnedMesh&&Je.skinning===!1||!q.isSkinnedMesh&&Je.skinning===!0||q.isInstancedMesh&&Je.instancingColor===!0&&q.instanceColor===null||q.isInstancedMesh&&Je.instancingColor===!1&&q.instanceColor!==null||q.isInstancedMesh&&Je.instancingMorph===!0&&q.morphTexture===null||q.isInstancedMesh&&Je.instancingMorph===!1&&q.morphTexture!==null||Je.envMap!==Ge||Z.fog===!0&&Je.fog!==xe||Je.numClippingPlanes!==void 0&&(Je.numClippingPlanes!==Se.numPlanes||Je.numIntersection!==Se.numIntersection)||Je.vertexAlphas!==Ze||Je.vertexTangents!==qe||Je.morphTargets!==Ke||Je.morphNormals!==Ut||Je.morphColors!==Pn||Je.toneMapping!==en||Je.morphTargetsCount!==Lt)&&(bt=!0):(bt=!0,Je.__version=Z.version);let yr=Je.currentProgram;bt===!0&&(yr=Ks(Z,H,q));let kh=!1,rs=!1,Rl=!1;const cn=yr.getUniforms(),Gi=Je.uniforms;if(we.useProgram(yr.program)&&(kh=!0,rs=!0,Rl=!0),Z.id!==b&&(b=Z.id,rs=!0),kh||M!==L){cn.setValue(G,"projectionMatrix",L.projectionMatrix),cn.setValue(G,"viewMatrix",L.matrixWorldInverse);const Bn=cn.map.cameraPosition;Bn!==void 0&&Bn.setValue(G,Me.setFromMatrixPosition(L.matrixWorld)),ht.logarithmicDepthBuffer&&cn.setValue(G,"logDepthBufFC",2/(Math.log(L.far+1)/Math.LN2)),(Z.isMeshPhongMaterial||Z.isMeshToonMaterial||Z.isMeshLambertMaterial||Z.isMeshBasicMaterial||Z.isMeshStandardMaterial||Z.isShaderMaterial)&&cn.setValue(G,"isOrthographic",L.isOrthographicCamera===!0),M!==L&&(M=L,rs=!0,Rl=!0)}if(q.isSkinnedMesh){cn.setOptional(G,q,"bindMatrix"),cn.setOptional(G,q,"bindMatrixInverse");const Bn=q.skeleton;Bn&&(Bn.boneTexture===null&&Bn.computeBoneTexture(),cn.setValue(G,"boneTexture",Bn.boneTexture,C))}q.isBatchedMesh&&(cn.setOptional(G,q,"batchingTexture"),cn.setValue(G,"batchingTexture",q._matricesTexture,C));const Ll=j.morphAttributes;if((Ll.position!==void 0||Ll.normal!==void 0||Ll.color!==void 0)&&Ce.update(q,j,yr),(rs||Je.receiveShadow!==q.receiveShadow)&&(Je.receiveShadow=q.receiveShadow,cn.setValue(G,"receiveShadow",q.receiveShadow)),Z.isMeshGouraudMaterial&&Z.envMap!==null&&(Gi.envMap.value=Ge,Gi.flipEnvMap.value=Ge.isCubeTexture&&Ge.isRenderTargetTexture===!1?-1:1),Z.isMeshStandardMaterial&&Z.envMap===null&&H.environment!==null&&(Gi.envMapIntensity.value=H.environmentIntensity),rs&&(cn.setValue(G,"toneMappingExposure",_.toneMappingExposure),Je.needsLights&&Ym(Gi,Rl),xe&&Z.fog===!0&&Ie.refreshFogUniforms(Gi,xe),Ie.refreshMaterialUniforms(Gi,Z,Y,z,v.state.transmissionRenderTarget),Yo.upload(G,Hh(Je),Gi,C)),Z.isShaderMaterial&&Z.uniformsNeedUpdate===!0&&(Yo.upload(G,Hh(Je),Gi,C),Z.uniformsNeedUpdate=!1),Z.isSpriteMaterial&&cn.setValue(G,"center",q.center),cn.setValue(G,"modelViewMatrix",q.modelViewMatrix),cn.setValue(G,"normalMatrix",q.normalMatrix),cn.setValue(G,"modelMatrix",q.matrixWorld),Z.isShaderMaterial||Z.isRawShaderMaterial){const Bn=Z.uniformsGroups;for(let Pl=0,jm=Bn.length;Pl<jm;Pl++){const Wh=Bn[Pl];gt.update(Wh,yr),gt.bind(Wh,yr)}}return yr}function Ym(L,H){L.ambientLightColor.needsUpdate=H,L.lightProbe.needsUpdate=H,L.directionalLights.needsUpdate=H,L.directionalLightShadows.needsUpdate=H,L.pointLights.needsUpdate=H,L.pointLightShadows.needsUpdate=H,L.spotLights.needsUpdate=H,L.spotLightShadows.needsUpdate=H,L.rectAreaLights.needsUpdate=H,L.hemisphereLights.needsUpdate=H}function qm(L){return L.isMeshLambertMaterial||L.isMeshToonMaterial||L.isMeshPhongMaterial||L.isMeshStandardMaterial||L.isShadowMaterial||L.isShaderMaterial&&L.lights===!0}this.getActiveCubeFace=function(){return A},this.getActiveMipmapLevel=function(){return E},this.getRenderTarget=function(){return w},this.setRenderTargetTextures=function(L,H,j){I.get(L.texture).__webglTexture=H,I.get(L.depthTexture).__webglTexture=j;const Z=I.get(L);Z.__hasExternalTextures=!0,Z.__autoAllocateDepthBuffer=j===void 0,Z.__autoAllocateDepthBuffer||Te.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Z.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(L,H){const j=I.get(L);j.__webglFramebuffer=H,j.__useDefaultFramebuffer=H===void 0},this.setRenderTarget=function(L,H=0,j=0){w=L,A=H,E=j;let Z=!0,q=null,xe=!1,Ne=!1;if(L){const Ge=I.get(L);Ge.__useDefaultFramebuffer!==void 0?(we.bindFramebuffer(G.FRAMEBUFFER,null),Z=!1):Ge.__webglFramebuffer===void 0?C.setupRenderTarget(L):Ge.__hasExternalTextures&&C.rebindTextures(L,I.get(L.texture).__webglTexture,I.get(L.depthTexture).__webglTexture);const Ze=L.texture;(Ze.isData3DTexture||Ze.isDataArrayTexture||Ze.isCompressedArrayTexture)&&(Ne=!0);const qe=I.get(L).__webglFramebuffer;L.isWebGLCubeRenderTarget?(Array.isArray(qe[H])?q=qe[H][j]:q=qe[H],xe=!0):L.samples>0&&C.useMultisampledRTT(L)===!1?q=I.get(L).__webglMultisampledFramebuffer:Array.isArray(qe)?q=qe[j]:q=qe,T.copy(L.viewport),P.copy(L.scissor),O=L.scissorTest}else T.copy(V).multiplyScalar(Y).floor(),P.copy(ce).multiplyScalar(Y).floor(),O=fe;if(we.bindFramebuffer(G.FRAMEBUFFER,q)&&Z&&we.drawBuffers(L,q),we.viewport(T),we.scissor(P),we.setScissorTest(O),xe){const Ge=I.get(L.texture);G.framebufferTexture2D(G.FRAMEBUFFER,G.COLOR_ATTACHMENT0,G.TEXTURE_CUBE_MAP_POSITIVE_X+H,Ge.__webglTexture,j)}else if(Ne){const Ge=I.get(L.texture),Ze=H||0;G.framebufferTextureLayer(G.FRAMEBUFFER,G.COLOR_ATTACHMENT0,Ge.__webglTexture,j||0,Ze)}b=-1},this.readRenderTargetPixels=function(L,H,j,Z,q,xe,Ne){if(!(L&&L.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Be=I.get(L).__webglFramebuffer;if(L.isWebGLCubeRenderTarget&&Ne!==void 0&&(Be=Be[Ne]),Be){we.bindFramebuffer(G.FRAMEBUFFER,Be);try{const Ge=L.texture,Ze=Ge.format,qe=Ge.type;if(Ze!==li&&vt.convert(Ze)!==G.getParameter(G.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Ke=qe===rr&&(Te.has("EXT_color_buffer_half_float")||Te.has("EXT_color_buffer_float"));if(qe!==or&&vt.convert(qe)!==G.getParameter(G.IMPLEMENTATION_COLOR_READ_TYPE)&&qe!==$n&&!Ke){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}H>=0&&H<=L.width-Z&&j>=0&&j<=L.height-q&&G.readPixels(H,j,Z,q,vt.convert(Ze),vt.convert(qe),xe)}finally{const Ge=w!==null?I.get(w).__webglFramebuffer:null;we.bindFramebuffer(G.FRAMEBUFFER,Ge)}}},this.copyFramebufferToTexture=function(L,H,j=0){const Z=Math.pow(2,-j),q=Math.floor(H.image.width*Z),xe=Math.floor(H.image.height*Z);C.setTexture2D(H,0),G.copyTexSubImage2D(G.TEXTURE_2D,j,0,0,L.x,L.y,q,xe),we.unbindTexture()},this.copyTextureToTexture=function(L,H,j,Z=0){const q=H.image.width,xe=H.image.height,Ne=vt.convert(j.format),Be=vt.convert(j.type);C.setTexture2D(j,0),G.pixelStorei(G.UNPACK_FLIP_Y_WEBGL,j.flipY),G.pixelStorei(G.UNPACK_PREMULTIPLY_ALPHA_WEBGL,j.premultiplyAlpha),G.pixelStorei(G.UNPACK_ALIGNMENT,j.unpackAlignment),H.isDataTexture?G.texSubImage2D(G.TEXTURE_2D,Z,L.x,L.y,q,xe,Ne,Be,H.image.data):H.isCompressedTexture?G.compressedTexSubImage2D(G.TEXTURE_2D,Z,L.x,L.y,H.mipmaps[0].width,H.mipmaps[0].height,Ne,H.mipmaps[0].data):G.texSubImage2D(G.TEXTURE_2D,Z,L.x,L.y,Ne,Be,H.image),Z===0&&j.generateMipmaps&&G.generateMipmap(G.TEXTURE_2D),we.unbindTexture()},this.copyTextureToTexture3D=function(L,H,j,Z,q=0){const xe=Math.round(L.max.x-L.min.x),Ne=Math.round(L.max.y-L.min.y),Be=L.max.z-L.min.z+1,Ge=vt.convert(Z.format),Ze=vt.convert(Z.type);let qe;if(Z.isData3DTexture)C.setTexture3D(Z,0),qe=G.TEXTURE_3D;else if(Z.isDataArrayTexture||Z.isCompressedArrayTexture)C.setTexture2DArray(Z,0),qe=G.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}G.pixelStorei(G.UNPACK_FLIP_Y_WEBGL,Z.flipY),G.pixelStorei(G.UNPACK_PREMULTIPLY_ALPHA_WEBGL,Z.premultiplyAlpha),G.pixelStorei(G.UNPACK_ALIGNMENT,Z.unpackAlignment);const Ke=G.getParameter(G.UNPACK_ROW_LENGTH),Ut=G.getParameter(G.UNPACK_IMAGE_HEIGHT),Pn=G.getParameter(G.UNPACK_SKIP_PIXELS),en=G.getParameter(G.UNPACK_SKIP_ROWS),_i=G.getParameter(G.UNPACK_SKIP_IMAGES),Lt=j.isCompressedTexture?j.mipmaps[q]:j.image;G.pixelStorei(G.UNPACK_ROW_LENGTH,Lt.width),G.pixelStorei(G.UNPACK_IMAGE_HEIGHT,Lt.height),G.pixelStorei(G.UNPACK_SKIP_PIXELS,L.min.x),G.pixelStorei(G.UNPACK_SKIP_ROWS,L.min.y),G.pixelStorei(G.UNPACK_SKIP_IMAGES,L.min.z),j.isDataTexture||j.isData3DTexture?G.texSubImage3D(qe,q,H.x,H.y,H.z,xe,Ne,Be,Ge,Ze,Lt.data):Z.isCompressedArrayTexture?G.compressedTexSubImage3D(qe,q,H.x,H.y,H.z,xe,Ne,Be,Ge,Lt.data):G.texSubImage3D(qe,q,H.x,H.y,H.z,xe,Ne,Be,Ge,Ze,Lt),G.pixelStorei(G.UNPACK_ROW_LENGTH,Ke),G.pixelStorei(G.UNPACK_IMAGE_HEIGHT,Ut),G.pixelStorei(G.UNPACK_SKIP_PIXELS,Pn),G.pixelStorei(G.UNPACK_SKIP_ROWS,en),G.pixelStorei(G.UNPACK_SKIP_IMAGES,_i),q===0&&Z.generateMipmaps&&G.generateMipmap(qe),we.unbindTexture()},this.initTexture=function(L){L.isCubeTexture?C.setTextureCube(L,0):L.isData3DTexture?C.setTexture3D(L,0):L.isDataArrayTexture||L.isCompressedArrayTexture?C.setTexture2DArray(L,0):C.setTexture2D(L,0),we.unbindTexture()},this.resetState=function(){A=0,E=0,w=null,we.reset(),ut.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Di}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const n=this.getContext();n.drawingBufferColorSpace=t===Dh?"display-p3":"srgb",n.unpackColorSpace=Tt.workingColorSpace===wl?"display-p3":"srgb"}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(t){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=t}}class ab extends ln{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new gi,this.environmentIntensity=1,this.environmentRotation=new gi,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,n){return super.copy(t,n),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const n=super.toJSON(t);return this.fog!==null&&(n.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(n.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(n.object.backgroundIntensity=this.backgroundIntensity),n.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(n.object.environmentIntensity=this.environmentIntensity),n.object.environmentRotation=this.environmentRotation.toArray(),n}}class sb extends dn{constructor(t=null,n=1,i=1,r,a,s,o,l,c=An,h=An,u,f){super(null,s,o,l,c,h,r,a,u,f),this.isDataTexture=!0,this.image={data:t,width:n,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Fh extends _r{constructor(t=1,n=32,i=16,r=0,a=Math.PI*2,s=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:n,heightSegments:i,phiStart:r,phiLength:a,thetaStart:s,thetaLength:o},n=Math.max(3,Math.floor(n)),i=Math.max(2,Math.floor(i));const l=Math.min(s+o,Math.PI);let c=0;const h=[],u=new k,f=new k,d=[],p=[],g=[],v=[];for(let m=0;m<=i;m++){const y=[],_=m/i;let x=0;m===0&&s===0?x=.5/n:m===i&&l===Math.PI&&(x=-.5/n);for(let A=0;A<=n;A++){const E=A/n;u.x=-t*Math.cos(r+E*a)*Math.sin(s+_*o),u.y=t*Math.cos(s+_*o),u.z=t*Math.sin(r+E*a)*Math.sin(s+_*o),p.push(u.x,u.y,u.z),f.copy(u).normalize(),g.push(f.x,f.y,f.z),v.push(E+x,1-_),y.push(c++)}h.push(y)}for(let m=0;m<i;m++)for(let y=0;y<n;y++){const _=h[m][y+1],x=h[m][y],A=h[m+1][y],E=h[m+1][y+1];(m!==0||s>0)&&d.push(_,x,E),(m!==i-1||l<Math.PI)&&d.push(x,A,E)}this.setIndex(d),this.setAttribute("position",new di(p,3)),this.setAttribute("normal",new di(g,3)),this.setAttribute("uv",new di(v,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Fh(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class ob extends qs{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new ft(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new ft(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Em,this.normalScale=new He(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new gi,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}const fl={enabled:!1,files:{},add:function(e,t){this.enabled!==!1&&(this.files[e]=t)},get:function(e){if(this.enabled!==!1)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class lb{constructor(t,n,i){const r=this;let a=!1,s=0,o=0,l;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=n,this.onError=i,this.itemStart=function(h){o++,a===!1&&r.onStart!==void 0&&r.onStart(h,s,o),a=!0},this.itemEnd=function(h){s++,r.onProgress!==void 0&&r.onProgress(h,s,o),s===o&&(a=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(h){r.onError!==void 0&&r.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,u){return c.push(h,u),this},this.removeHandler=function(h){const u=c.indexOf(h);return u!==-1&&c.splice(u,2),this},this.getHandler=function(h){for(let u=0,f=c.length;u<f;u+=2){const d=c[u],p=c[u+1];if(d.global&&(d.lastIndex=0),d.test(h))return p}return null}}}const cb=new lb;class Zs{constructor(t){this.manager=t!==void 0?t:cb,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,n){const i=this;return new Promise(function(r,a){i.load(t,r,n,a)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}Zs.DEFAULT_MATERIAL_NAME="__DEFAULT";const Ai={};class hb extends Error{constructor(t,n){super(t),this.response=n}}class ub extends Zs{constructor(t){super(t)}load(t,n,i,r){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const a=fl.get(t);if(a!==void 0)return this.manager.itemStart(t),setTimeout(()=>{n&&n(a),this.manager.itemEnd(t)},0),a;if(Ai[t]!==void 0){Ai[t].push({onLoad:n,onProgress:i,onError:r});return}Ai[t]=[],Ai[t].push({onLoad:n,onProgress:i,onError:r});const s=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(s).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const h=Ai[t],u=c.body.getReader(),f=c.headers.get("Content-Length")||c.headers.get("X-File-Size"),d=f?parseInt(f):0,p=d!==0;let g=0;const v=new ReadableStream({start(m){y();function y(){u.read().then(({done:_,value:x})=>{if(_)m.close();else{g+=x.byteLength;const A=new ProgressEvent("progress",{lengthComputable:p,loaded:g,total:d});for(let E=0,w=h.length;E<w;E++){const b=h[E];b.onProgress&&b.onProgress(A)}m.enqueue(x),y()}})}}});return new Response(v)}else throw new hb(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,o));case"json":return c.json();default:if(o===void 0)return c.text();{const u=/charset="?([^;"\s]*)"?/i.exec(o),f=u&&u[1]?u[1].toLowerCase():void 0,d=new TextDecoder(f);return c.arrayBuffer().then(p=>d.decode(p))}}}).then(c=>{fl.add(t,c);const h=Ai[t];delete Ai[t];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onLoad&&d.onLoad(c)}}).catch(c=>{const h=Ai[t];if(h===void 0)throw this.manager.itemError(t),c;delete Ai[t];for(let u=0,f=h.length;u<f;u++){const d=h[u];d.onError&&d.onError(c)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}class fb extends Zs{constructor(t){super(t)}load(t,n,i,r){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const a=this,s=fl.get(t);if(s!==void 0)return a.manager.itemStart(t),setTimeout(function(){n&&n(s),a.manager.itemEnd(t)},0),s;const o=Bs("img");function l(){h(),fl.add(t,this),n&&n(this),a.manager.itemEnd(t)}function c(u){h(),r&&r(u),a.manager.itemError(t),a.manager.itemEnd(t)}function h(){o.removeEventListener("load",l,!1),o.removeEventListener("error",c,!1)}return o.addEventListener("load",l,!1),o.addEventListener("error",c,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),a.manager.itemStart(t),o.src=t,o}}class db extends Zs{constructor(t){super(t)}load(t,n,i,r){const a=this,s=new sb,o=new ub(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(a.withCredentials),o.load(t,function(l){let c;try{c=a.parse(l)}catch(h){if(r!==void 0)r(h);else{console.error(h);return}}c.image!==void 0?s.image=c.image:c.data!==void 0&&(s.image.width=c.width,s.image.height=c.height,s.image.data=c.data),s.wrapS=c.wrapS!==void 0?c.wrapS:Pi,s.wrapT=c.wrapT!==void 0?c.wrapT:Pi,s.magFilter=c.magFilter!==void 0?c.magFilter:fn,s.minFilter=c.minFilter!==void 0?c.minFilter:fn,s.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.colorSpace!==void 0&&(s.colorSpace=c.colorSpace),c.flipY!==void 0&&(s.flipY=c.flipY),c.format!==void 0&&(s.format=c.format),c.type!==void 0&&(s.type=c.type),c.mipmaps!==void 0&&(s.mipmaps=c.mipmaps,s.minFilter=ir),c.mipmapCount===1&&(s.minFilter=fn),c.generateMipmaps!==void 0&&(s.generateMipmaps=c.generateMipmaps),s.needsUpdate=!0,n&&n(s,c)},i,r),s}}class pb extends Zs{constructor(t){super(t)}load(t,n,i,r){const a=new dn,s=new fb(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(t,function(o){a.image=o,a.needsUpdate=!0,n!==void 0&&n(a)},i,r),a}}class Bh extends ln{constructor(t,n=1){super(),this.isLight=!0,this.type="Light",this.color=new ft(t),this.intensity=n}dispose(){}copy(t,n){return super.copy(t,n),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const n=super.toJSON(t);return n.object.color=this.color.getHex(),n.object.intensity=this.intensity,this.groundColor!==void 0&&(n.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(n.object.distance=this.distance),this.angle!==void 0&&(n.object.angle=this.angle),this.decay!==void 0&&(n.object.decay=this.decay),this.penumbra!==void 0&&(n.object.penumbra=this.penumbra),this.shadow!==void 0&&(n.object.shadow=this.shadow.toJSON()),n}}class mb extends Bh{constructor(t,n,i){super(t,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(ln.DEFAULT_UP),this.updateMatrix(),this.groundColor=new ft(n)}copy(t,n){return super.copy(t,n),this.groundColor.copy(t.groundColor),this}}const Bc=new zt,Id=new k,Od=new k;class vb{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new He(512,512),this.map=null,this.mapPass=null,this.matrix=new zt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Oh,this._frameExtents=new He(1,1),this._viewportCount=1,this._viewports=[new rn(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const n=this.camera,i=this.matrix;Id.setFromMatrixPosition(t.matrixWorld),n.position.copy(Id),Od.setFromMatrixPosition(t.target.matrixWorld),n.lookAt(Od),n.updateMatrixWorld(),Bc.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Bc),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(Bc)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class gb extends vb{constructor(){super(new Bm(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class zc extends Bh{constructor(t,n){super(t,n),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(ln.DEFAULT_UP),this.updateMatrix(),this.target=new ln,this.shadow=new gb}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class _b extends Bh{constructor(t,n){super(t,n),this.isAmbientLight=!0,this.type="AmbientLight"}}class Ud{constructor(t=1,n=0,i=0){return this.radius=t,this.phi=n,this.theta=i,this}set(t,n,i){return this.radius=t,this.phi=n,this.theta=i,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,n,i){return this.radius=Math.sqrt(t*t+n*n+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,i),this.phi=Math.acos(on(n/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Ph}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Ph);const Fd={type:"change"},Gc={type:"start"},Bd={type:"end"},zo=new Cm,zd=new Ji,xb=Math.cos(70*XT.DEG2RAD);class yb extends Kr{constructor(t,n){super(),this.object=t,this.domElement=n,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new k,this.cursor=new k,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:oa.ROTATE,MIDDLE:oa.DOLLY,RIGHT:oa.PAN},this.touches={ONE:la.ROTATE,TWO:la.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return o.phi},this.getAzimuthalAngle=function(){return o.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(S){S.addEventListener("keydown",Se),this._domElementKeyEvents=S},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",Se),this._domElementKeyEvents=null},this.saveState=function(){i.target0.copy(i.target),i.position0.copy(i.object.position),i.zoom0=i.object.zoom},this.reset=function(){i.target.copy(i.target0),i.object.position.copy(i.position0),i.object.zoom=i.zoom0,i.object.updateProjectionMatrix(),i.dispatchEvent(Fd),i.update(),a=r.NONE},this.update=function(){const S=new k,X=new Zr().setFromUnitVectors(t.up,new k(0,1,0)),te=X.clone().invert(),pe=new k,Ee=new Zr,ot=new k,it=2*Math.PI;return function(Qt=null){const yt=i.object.position;S.copy(yt).sub(i.target),S.applyQuaternion(X),o.setFromVector3(S),i.autoRotate&&a===r.NONE&&O(T(Qt)),i.enableDamping?(o.theta+=l.theta*i.dampingFactor,o.phi+=l.phi*i.dampingFactor):(o.theta+=l.theta,o.phi+=l.phi);let Gt=i.minAzimuthAngle,Ht=i.maxAzimuthAngle;isFinite(Gt)&&isFinite(Ht)&&(Gt<-Math.PI?Gt+=it:Gt>Math.PI&&(Gt-=it),Ht<-Math.PI?Ht+=it:Ht>Math.PI&&(Ht-=it),Gt<=Ht?o.theta=Math.max(Gt,Math.min(Ht,o.theta)):o.theta=o.theta>(Gt+Ht)/2?Math.max(Gt,o.theta):Math.min(Ht,o.theta)),o.phi=Math.max(i.minPolarAngle,Math.min(i.maxPolarAngle,o.phi)),o.makeSafe(),i.enableDamping===!0?i.target.addScaledVector(h,i.dampingFactor):i.target.add(h),i.target.sub(i.cursor),i.target.clampLength(i.minTargetRadius,i.maxTargetRadius),i.target.add(i.cursor);let Ln=!1;if(i.zoomToCursor&&E||i.object.isOrthographicCamera)o.radius=V(o.radius);else{const Fn=o.radius;o.radius=V(o.radius*c),Ln=Fn!=o.radius}if(S.setFromSpherical(o),S.applyQuaternion(te),yt.copy(i.target).add(S),i.object.lookAt(i.target),i.enableDamping===!0?(l.theta*=1-i.dampingFactor,l.phi*=1-i.dampingFactor,h.multiplyScalar(1-i.dampingFactor)):(l.set(0,0,0),h.set(0,0,0)),i.zoomToCursor&&E){let Fn=null;if(i.object.isPerspectiveCamera){const zi=S.length();Fn=V(zi*c);const $r=zi-Fn;i.object.position.addScaledVector(x,$r),i.object.updateMatrixWorld(),Ln=!!$r}else if(i.object.isOrthographicCamera){const zi=new k(A.x,A.y,0);zi.unproject(i.object);const $r=i.object.zoom;i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/c)),i.object.updateProjectionMatrix(),Ln=$r!==i.object.zoom;const xr=new k(A.x,A.y,0);xr.unproject(i.object),i.object.position.sub(xr).add(zi),i.object.updateMatrixWorld(),Fn=S.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),i.zoomToCursor=!1;Fn!==null&&(this.screenSpacePanning?i.target.set(0,0,-1).transformDirection(i.object.matrix).multiplyScalar(Fn).add(i.object.position):(zo.origin.copy(i.object.position),zo.direction.set(0,0,-1).transformDirection(i.object.matrix),Math.abs(i.object.up.dot(zo.direction))<xb?t.lookAt(i.target):(zd.setFromNormalAndCoplanarPoint(i.object.up,i.target),zo.intersectPlane(zd,i.target))))}else if(i.object.isOrthographicCamera){const Fn=i.object.zoom;i.object.zoom=Math.max(i.minZoom,Math.min(i.maxZoom,i.object.zoom/c)),Fn!==i.object.zoom&&(i.object.updateProjectionMatrix(),Ln=!0)}return c=1,E=!1,Ln||pe.distanceToSquared(i.object.position)>s||8*(1-Ee.dot(i.object.quaternion))>s||ot.distanceToSquared(i.target)>s?(i.dispatchEvent(Fd),pe.copy(i.object.position),Ee.copy(i.object.quaternion),ot.copy(i.target),!0):!1}}(),this.dispose=function(){i.domElement.removeEventListener("contextmenu",Ce),i.domElement.removeEventListener("pointerdown",K),i.domElement.removeEventListener("pointercancel",re),i.domElement.removeEventListener("wheel",he),i.domElement.removeEventListener("pointermove",ie),i.domElement.removeEventListener("pointerup",re),i.domElement.getRootNode().removeEventListener("keydown",Fe,{capture:!0}),i._domElementKeyEvents!==null&&(i._domElementKeyEvents.removeEventListener("keydown",Se),i._domElementKeyEvents=null)};const i=this,r={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let a=r.NONE;const s=1e-6,o=new Ud,l=new Ud;let c=1;const h=new k,u=new He,f=new He,d=new He,p=new He,g=new He,v=new He,m=new He,y=new He,_=new He,x=new k,A=new He;let E=!1;const w=[],b={};let M=!1;function T(S){return S!==null?2*Math.PI/60*i.autoRotateSpeed*S:2*Math.PI/60/60*i.autoRotateSpeed}function P(S){const X=Math.abs(S*.01);return Math.pow(.95,i.zoomSpeed*X)}function O(S){l.theta-=S}function D(S){l.phi-=S}const N=function(){const S=new k;return function(te,pe){S.setFromMatrixColumn(pe,0),S.multiplyScalar(-te),h.add(S)}}(),B=function(){const S=new k;return function(te,pe){i.screenSpacePanning===!0?S.setFromMatrixColumn(pe,1):(S.setFromMatrixColumn(pe,0),S.crossVectors(i.object.up,S)),S.multiplyScalar(te),h.add(S)}}(),z=function(){const S=new k;return function(te,pe){const Ee=i.domElement;if(i.object.isPerspectiveCamera){const ot=i.object.position;S.copy(ot).sub(i.target);let it=S.length();it*=Math.tan(i.object.fov/2*Math.PI/180),N(2*te*it/Ee.clientHeight,i.object.matrix),B(2*pe*it/Ee.clientHeight,i.object.matrix)}else i.object.isOrthographicCamera?(N(te*(i.object.right-i.object.left)/i.object.zoom/Ee.clientWidth,i.object.matrix),B(pe*(i.object.top-i.object.bottom)/i.object.zoom/Ee.clientHeight,i.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),i.enablePan=!1)}}();function Y(S){i.object.isPerspectiveCamera||i.object.isOrthographicCamera?c/=S:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function F(S){i.object.isPerspectiveCamera||i.object.isOrthographicCamera?c*=S:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),i.enableZoom=!1)}function J(S,X){if(!i.zoomToCursor)return;E=!0;const te=i.domElement.getBoundingClientRect(),pe=S-te.left,Ee=X-te.top,ot=te.width,it=te.height;A.x=pe/ot*2-1,A.y=-(Ee/it)*2+1,x.set(A.x,A.y,1).unproject(i.object).sub(i.object.position).normalize()}function V(S){return Math.max(i.minDistance,Math.min(i.maxDistance,S))}function ce(S){u.set(S.clientX,S.clientY)}function fe(S){J(S.clientX,S.clientX),m.set(S.clientX,S.clientY)}function ye(S){p.set(S.clientX,S.clientY)}function W(S){f.set(S.clientX,S.clientY),d.subVectors(f,u).multiplyScalar(i.rotateSpeed);const X=i.domElement;O(2*Math.PI*d.x/X.clientHeight),D(2*Math.PI*d.y/X.clientHeight),u.copy(f),i.update()}function Q(S){y.set(S.clientX,S.clientY),_.subVectors(y,m),_.y>0?Y(P(_.y)):_.y<0&&F(P(_.y)),m.copy(y),i.update()}function de(S){g.set(S.clientX,S.clientY),v.subVectors(g,p).multiplyScalar(i.panSpeed),z(v.x,v.y),p.copy(g),i.update()}function se(S){J(S.clientX,S.clientY),S.deltaY<0?F(P(S.deltaY)):S.deltaY>0&&Y(P(S.deltaY)),i.update()}function Me(S){let X=!1;switch(S.code){case i.keys.UP:S.ctrlKey||S.metaKey||S.shiftKey?D(2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):z(0,i.keyPanSpeed),X=!0;break;case i.keys.BOTTOM:S.ctrlKey||S.metaKey||S.shiftKey?D(-2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):z(0,-i.keyPanSpeed),X=!0;break;case i.keys.LEFT:S.ctrlKey||S.metaKey||S.shiftKey?O(2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):z(i.keyPanSpeed,0),X=!0;break;case i.keys.RIGHT:S.ctrlKey||S.metaKey||S.shiftKey?O(-2*Math.PI*i.rotateSpeed/i.domElement.clientHeight):z(-i.keyPanSpeed,0),X=!0;break}X&&(S.preventDefault(),i.update())}function Ae(S){if(w.length===1)u.set(S.pageX,S.pageY);else{const X=gt(S),te=.5*(S.pageX+X.x),pe=.5*(S.pageY+X.y);u.set(te,pe)}}function Pe(S){if(w.length===1)p.set(S.pageX,S.pageY);else{const X=gt(S),te=.5*(S.pageX+X.x),pe=.5*(S.pageY+X.y);p.set(te,pe)}}function G(S){const X=gt(S),te=S.pageX-X.x,pe=S.pageY-X.y,Ee=Math.sqrt(te*te+pe*pe);m.set(0,Ee)}function ke(S){i.enableZoom&&G(S),i.enablePan&&Pe(S)}function Te(S){i.enableZoom&&G(S),i.enableRotate&&Ae(S)}function ht(S){if(w.length==1)f.set(S.pageX,S.pageY);else{const te=gt(S),pe=.5*(S.pageX+te.x),Ee=.5*(S.pageY+te.y);f.set(pe,Ee)}d.subVectors(f,u).multiplyScalar(i.rotateSpeed);const X=i.domElement;O(2*Math.PI*d.x/X.clientHeight),D(2*Math.PI*d.y/X.clientHeight),u.copy(f)}function we(S){if(w.length===1)g.set(S.pageX,S.pageY);else{const X=gt(S),te=.5*(S.pageX+X.x),pe=.5*(S.pageY+X.y);g.set(te,pe)}v.subVectors(g,p).multiplyScalar(i.panSpeed),z(v.x,v.y),p.copy(g)}function ct(S){const X=gt(S),te=S.pageX-X.x,pe=S.pageY-X.y,Ee=Math.sqrt(te*te+pe*pe);y.set(0,Ee),_.set(0,Math.pow(y.y/m.y,i.zoomSpeed)),Y(_.y),m.copy(y);const ot=(S.pageX+X.x)*.5,it=(S.pageY+X.y)*.5;J(ot,it)}function I(S){i.enableZoom&&ct(S),i.enablePan&&we(S)}function C(S){i.enableZoom&&ct(S),i.enableRotate&&ht(S)}function K(S){i.enabled!==!1&&(w.length===0&&(i.domElement.setPointerCapture(S.pointerId),i.domElement.addEventListener("pointermove",ie),i.domElement.addEventListener("pointerup",re)),!vt(S)&&(rt(S),S.pointerType==="touch"?ze(S):ae(S)))}function ie(S){i.enabled!==!1&&(S.pointerType==="touch"?be(S):Ue(S))}function re(S){switch(st(S),w.length){case 0:i.domElement.releasePointerCapture(S.pointerId),i.domElement.removeEventListener("pointermove",ie),i.domElement.removeEventListener("pointerup",re),i.dispatchEvent(Bd),a=r.NONE;break;case 1:const X=w[0],te=b[X];ze({pointerId:X,pageX:te.x,pageY:te.y});break}}function ae(S){let X;switch(S.button){case 0:X=i.mouseButtons.LEFT;break;case 1:X=i.mouseButtons.MIDDLE;break;case 2:X=i.mouseButtons.RIGHT;break;default:X=-1}switch(X){case oa.DOLLY:if(i.enableZoom===!1)return;fe(S),a=r.DOLLY;break;case oa.ROTATE:if(S.ctrlKey||S.metaKey||S.shiftKey){if(i.enablePan===!1)return;ye(S),a=r.PAN}else{if(i.enableRotate===!1)return;ce(S),a=r.ROTATE}break;case oa.PAN:if(S.ctrlKey||S.metaKey||S.shiftKey){if(i.enableRotate===!1)return;ce(S),a=r.ROTATE}else{if(i.enablePan===!1)return;ye(S),a=r.PAN}break;default:a=r.NONE}a!==r.NONE&&i.dispatchEvent(Gc)}function Ue(S){switch(a){case r.ROTATE:if(i.enableRotate===!1)return;W(S);break;case r.DOLLY:if(i.enableZoom===!1)return;Q(S);break;case r.PAN:if(i.enablePan===!1)return;de(S);break}}function he(S){i.enabled===!1||i.enableZoom===!1||a!==r.NONE||(S.preventDefault(),i.dispatchEvent(Gc),se(Ie(S)),i.dispatchEvent(Bd))}function Ie(S){const X=S.deltaMode,te={clientX:S.clientX,clientY:S.clientY,deltaY:S.deltaY};switch(X){case 1:te.deltaY*=16;break;case 2:te.deltaY*=100;break}return S.ctrlKey&&!M&&(te.deltaY*=10),te}function Fe(S){S.key==="Control"&&(M=!0,i.domElement.getRootNode().addEventListener("keyup",ve,{passive:!0,capture:!0}))}function ve(S){S.key==="Control"&&(M=!1,i.domElement.getRootNode().removeEventListener("keyup",ve,{passive:!0,capture:!0}))}function Se(S){i.enabled===!1||i.enablePan===!1||Me(S)}function ze(S){switch(ut(S),w.length){case 1:switch(i.touches.ONE){case la.ROTATE:if(i.enableRotate===!1)return;Ae(S),a=r.TOUCH_ROTATE;break;case la.PAN:if(i.enablePan===!1)return;Pe(S),a=r.TOUCH_PAN;break;default:a=r.NONE}break;case 2:switch(i.touches.TWO){case la.DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;ke(S),a=r.TOUCH_DOLLY_PAN;break;case la.DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;Te(S),a=r.TOUCH_DOLLY_ROTATE;break;default:a=r.NONE}break;default:a=r.NONE}a!==r.NONE&&i.dispatchEvent(Gc)}function be(S){switch(ut(S),a){case r.TOUCH_ROTATE:if(i.enableRotate===!1)return;ht(S),i.update();break;case r.TOUCH_PAN:if(i.enablePan===!1)return;we(S),i.update();break;case r.TOUCH_DOLLY_PAN:if(i.enableZoom===!1&&i.enablePan===!1)return;I(S),i.update();break;case r.TOUCH_DOLLY_ROTATE:if(i.enableZoom===!1&&i.enableRotate===!1)return;C(S),i.update();break;default:a=r.NONE}}function Ce(S){i.enabled!==!1&&S.preventDefault()}function rt(S){w.push(S.pointerId)}function st(S){delete b[S.pointerId];for(let X=0;X<w.length;X++)if(w[X]==S.pointerId){w.splice(X,1);return}}function vt(S){for(let X=0;X<w.length;X++)if(w[X]==S.pointerId)return!0;return!1}function ut(S){let X=b[S.pointerId];X===void 0&&(X=new He,b[S.pointerId]=X),X.set(S.pageX,S.pageY)}function gt(S){const X=S.pointerId===w[0]?w[1]:w[0];return b[X]}i.domElement.addEventListener("contextmenu",Ce),i.domElement.addEventListener("pointerdown",K),i.domElement.addEventListener("pointercancel",re),i.domElement.addEventListener("wheel",he,{passive:!1}),i.domElement.getRootNode().addEventListener("keydown",Fe,{passive:!0,capture:!0}),this.update()}}class Tb extends db{constructor(t){super(t),this.type=rr}parse(t){const s=function(b,M){switch(b){case 1:throw new Error("THREE.RGBELoader: Read Error: "+(M||""));case 2:throw new Error("THREE.RGBELoader: Write Error: "+(M||""));case 3:throw new Error("THREE.RGBELoader: Bad File Format: "+(M||""));default:case 4:throw new Error("THREE.RGBELoader: Memory Error: "+(M||""))}},h=`
`,u=function(b,M,T){M=M||1024;let O=b.pos,D=-1,N=0,B="",z=String.fromCharCode.apply(null,new Uint16Array(b.subarray(O,O+128)));for(;0>(D=z.indexOf(h))&&N<M&&O<b.byteLength;)B+=z,N+=z.length,O+=128,z+=String.fromCharCode.apply(null,new Uint16Array(b.subarray(O,O+128)));return-1<D?(T!==!1&&(b.pos+=N+D+1),B+z.slice(0,D)):!1},f=function(b){const M=/^#\?(\S+)/,T=/^\s*GAMMA\s*=\s*(\d+(\.\d+)?)\s*$/,P=/^\s*EXPOSURE\s*=\s*(\d+(\.\d+)?)\s*$/,O=/^\s*FORMAT=(\S+)\s*$/,D=/^\s*\-Y\s+(\d+)\s+\+X\s+(\d+)\s*$/,N={valid:0,string:"",comments:"",programtype:"RGBE",format:"",gamma:1,exposure:1,width:0,height:0};let B,z;for((b.pos>=b.byteLength||!(B=u(b)))&&s(1,"no header found"),(z=B.match(M))||s(3,"bad initial token"),N.valid|=1,N.programtype=z[1],N.string+=B+`
`;B=u(b),B!==!1;){if(N.string+=B+`
`,B.charAt(0)==="#"){N.comments+=B+`
`;continue}if((z=B.match(T))&&(N.gamma=parseFloat(z[1])),(z=B.match(P))&&(N.exposure=parseFloat(z[1])),(z=B.match(O))&&(N.valid|=2,N.format=z[1]),(z=B.match(D))&&(N.valid|=4,N.height=parseInt(z[1],10),N.width=parseInt(z[2],10)),N.valid&2&&N.valid&4)break}return N.valid&2||s(3,"missing format specifier"),N.valid&4||s(3,"missing image size specifier"),N},d=function(b,M,T){const P=M;if(P<8||P>32767||b[0]!==2||b[1]!==2||b[2]&128)return new Uint8Array(b);P!==(b[2]<<8|b[3])&&s(3,"wrong scanline width");const O=new Uint8Array(4*M*T);O.length||s(4,"unable to allocate buffer space");let D=0,N=0;const B=4*P,z=new Uint8Array(4),Y=new Uint8Array(B);let F=T;for(;F>0&&N<b.byteLength;){N+4>b.byteLength&&s(1),z[0]=b[N++],z[1]=b[N++],z[2]=b[N++],z[3]=b[N++],(z[0]!=2||z[1]!=2||(z[2]<<8|z[3])!=P)&&s(3,"bad rgbe scanline format");let J=0,V;for(;J<B&&N<b.byteLength;){V=b[N++];const fe=V>128;if(fe&&(V-=128),(V===0||J+V>B)&&s(3,"bad scanline data"),fe){const ye=b[N++];for(let W=0;W<V;W++)Y[J++]=ye}else Y.set(b.subarray(N,N+V),J),J+=V,N+=V}const ce=P;for(let fe=0;fe<ce;fe++){let ye=0;O[D]=Y[fe+ye],ye+=P,O[D+1]=Y[fe+ye],ye+=P,O[D+2]=Y[fe+ye],ye+=P,O[D+3]=Y[fe+ye],D+=4}F--}return O},p=function(b,M,T,P){const O=b[M+3],D=Math.pow(2,O-128)/255;T[P+0]=b[M+0]*D,T[P+1]=b[M+1]*D,T[P+2]=b[M+2]*D,T[P+3]=1},g=function(b,M,T,P){const O=b[M+3],D=Math.pow(2,O-128)/255;T[P+0]=wo.toHalfFloat(Math.min(b[M+0]*D,65504)),T[P+1]=wo.toHalfFloat(Math.min(b[M+1]*D,65504)),T[P+2]=wo.toHalfFloat(Math.min(b[M+2]*D,65504)),T[P+3]=wo.toHalfFloat(1)},v=new Uint8Array(t);v.pos=0;const m=f(v),y=m.width,_=m.height,x=d(v.subarray(v.pos),y,_);let A,E,w;switch(this.type){case $n:w=x.length/4;const b=new Float32Array(w*4);for(let T=0;T<w;T++)p(x,T*4,b,T*4);A=b,E=$n;break;case rr:w=x.length/4;const M=new Uint16Array(w*4);for(let T=0;T<w;T++)g(x,T*4,M,T*4);A=M,E=rr;break;default:throw new Error("THREE.RGBELoader: Unsupported type: "+this.type)}return{width:y,height:_,data:A,header:m.string,gamma:m.gamma,exposure:m.exposure,type:E}}setDataType(t){return this.type=t,this}load(t,n,i,r){function a(s,o){switch(s.type){case $n:case rr:s.colorSpace=Bi,s.minFilter=fn,s.magFilter=fn,s.generateMipmaps=!1,s.flipY=!0;break}n&&n(s,o)}return super.load(t,a,i,r)}}const Sb=""+new URL("data-1491837512042-rJlLfXYax-BXxQXTli.jpg",import.meta.url).href,Eb=""+new URL("mud_road_puresky_2k-ClymwmdA.hdr",import.meta.url).href,Gd=150,Hd=150;function Vd(e,t,n){var i,r=t;return n<1&&(r=r/n),i=Math.atan(r/e/2)*2*(180/Math.PI),i}class Mb{constructor(t){this.container=t,this.w=window.innerWidth,this.h=window.innerHeight,this.scene=null,this.camera=null,this.earth=null,this.loader=null,this.radius=36,this.controls=null,this.init()}init(){this.initScene(),this.initCamera(),this.initRender(),this.initLight(),this.initMesh(),this.initControl(),this.rendererFn(),this.resizeFix(),this.initHdr()}async initMesh(){this.loader=new pb;const t=await this.loader.load($m),n=await this.loader.load(Sb);var i=new Fh(this.radius,100,100),r=new ob({map:t,metalnessMap:n,roughness:.5});this.earth=new ci(i,r),this.scene.add(this.earth)}initHdr(){const t=this;new Tb().load(Eb,function(n){n.mapping=ol,t.scene.background=n})}initScene(){this.scene=new ab}initCamera(){this.camera=new kn(Vd(Gd,Hd,this.w/this.h),this.w/this.h,5,1e3),this.camera.position.set(0,0,100),this.camera.lookAt(0,0,0)}initRender(){this.renderer=new rb({antialias:!0}),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.w,this.h),this.container.appendChild(this.renderer.domElement)}initLight(){const t=new _b(16777215,1.5);this.scene.add(t);var r=new zc(16777215,.5);r.position.set(1,.1,0).normalize();var n=new zc(267583487,.5);n.position.set(1,.1,.1).normalize(),this.scene.add(r),this.scene.add(n);var i=new mb(16777215,4473924,.2);i.position.set(0,1,0),this.scene.add(i);var r=new zc(16777215,.5);r.position.set(1,500,-20),this.scene.add(r)}initControl(){this.controls=new yb(this.camera,this.renderer.domElement),this.controls.enableDamping=!0,this.controls.enableZoom=!0,this.controls.autoRotate=!1,this.controls.autoRotateSpeed=2,this.controls.enablePan=!0}rendererFn(){this.controls.update(),this.earth&&this.earth.rotateY(.001),this.renderer.render(this.scene,this.camera),requestAnimationFrame(this.rendererFn.bind(this))}resizeFix(){window.addEventListener("resize",()=>{this.w=window.innerWidth,this.h=window.innerHeight,console.log("---- resize ----:",this.w,this.h),this.camera.fov=Vd(Gd,Hd,this.w/this.h),this.camera.aspect=this.w/this.h,this.camera.updateProjectionMatrix(),this.renderer.setPixelRatio(window.devicePixelRatio),this.renderer.setSize(this.w,this.h)},!1)}}const zh=e=>(lv("data-v-a67cc0eb"),e=e(),cv(),e),wb={class:"w-full overflow-hidden relative h-screen"},Ab=zh(()=>er("p",{class:"w-full absolute left-0 top-[10px] flex items-center justify-center text-white text-[40px] max-[750px]:top-[.86rem] max-[750px]:text-[.42rem] text-center z-10"},[er("span",{class:"title"},"热爱和平，保护环境，共创和谐家园")],-1)),bb=zh(()=>er("canvas",{class:"w-full h-full absolute top-0 left-0 z-[50] pointer-events-none",id:"fireWork"},null,-1)),Cb={class:"w-full flex flex-col items-center"},Rb=zh(()=>er("h3",{class:"text-[20px] mb-[10px] font-bold"},"我有一个愿望",-1)),Lb=["onClick"],Pb={__name:"Earth3d",setup(e){const t=Tr(),n=Qm(),i=hv(),r=()=>{n.replace({name:"home"})},a=Tr(),s=Tr(["愿地球常绿，生态永存","绿水青山，守护家园","环保行动，共筑未来","珍爱自然，和谐共生","守护蓝天，呼吸清新","和平相伴，幸福常在","放下纷争，拥抱和平","放下武器，拥抱和平","和平之花，绽放人间","心中有爱，和平永驻"]),o=Tr(),l=Tr(!1),c=Tr(0),h=Tr(i==="mobile"),u=()=>{a.value.show()},f=p=>{o.value=p,a.value.hide(),l.value=!0,d.start(),setTimeout(()=>{l.value=!1,d.waitStop(!0)},2e3)};let d=null;return ev(()=>{console.log("---- Earth onMounted ----:"),c.value=window.innerHeight,setTimeout(()=>{new Mb(t.value),window.addEventListener("resize",()=>{c.value=window.innerHeight,d.updateSize({w:window.innerWidth,h:window.innerHeight})})},100),d=new M1(document.querySelector("#fireWork"),{particles:100})}),(p,g)=>(Js(),$s("div",wb,[Ab,er("div",{class:"w-full h-full overflow-hidden earth-container",ref_key:"monthEarth",ref:t},null,512),er("span",{title:"我有一个愿望",onClick:u,class:"iconfont absolute bottom-0 left-[50%] translate-x-[-50%] z-20 cursor-pointer text-[rgba(255,255,255,.5)] hover:text-[rgba(255,255,255,1)] holp-btn"},""),o.value?(Js(),$s("p",{key:0,class:tv(["text-[16px] text-white absolute bottom-[20px] left-[50%] translate-x-[-50%] now-hope",l.value?"nowhope-active":""]),style:nv({"--wh":c.value/2+"px"})},Xh(o.value),7)):iv("",!0),er("span",{onClick:r,class:"iconfont absolute top-[5px] right-[5px] z-20 cursor-pointer close"},""),bb,rv(zv,{ref_key:"hope",ref:a,isMobile:h.value},{default:av(()=>[er("div",Cb,[Rb,(Js(!0),$s(sv,null,ov(s.value,(v,m)=>(Js(),$s("p",{onClick:y=>f(v),class:"text-[16px] hover:bg-[rgba(255,255,255,1)] cursor-pointer w-[60%] text-center mb-[10px] py-[5px] bg-[rgba(255,255,255,.5)] rounded-[5px]",key:m},Xh(v),9,Lb))),128))])]),_:1},8,["isMobile"])]))}},Ob=Jm(Pb,[["__scopeId","data-v-a67cc0eb"]]);export{Ob as default};
